// Lineage 2 (Gracia Final) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x4)
#endif

#include "../SDK.hpp"

namespace L2_SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function Interface.UICommonAPI.GetPrimeItemSymbolName
// (Final, Defined, Latent, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UUICommonAPI::STATIC_GetPrimeItemSymbolName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.GetPrimeItemSymbolName");

	UUICommonAPI_GetPrimeItemSymbolName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.IsAdena
// (Defined, Latent, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 Id                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UUICommonAPI::STATIC_IsAdena(const struct FItemID& Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.IsAdena");

	UUICommonAPI_IsAdena_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.IsSameServerID
// (Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 src                            (Parm)
// struct FItemID                 des                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UUICommonAPI::STATIC_IsSameServerID(const struct FItemID& src, const struct FItemID& des)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.IsSameServerID");

	UUICommonAPI_IsSameServerID_Params params;
	params.src = src;
	params.des = des;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.IsSameClassID
// (Defined, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 src                            (Parm)
// struct FItemID                 des                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UUICommonAPI::STATIC_IsSameClassID(const struct FItemID& src, const struct FItemID& des)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.IsSameClassID");

	UUICommonAPI_IsSameClassID_Params params;
	params.src = src;
	params.des = des;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.IsSameItemID
// (Defined, Latent, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 src                            (Parm)
// struct FItemID                 des                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UUICommonAPI::STATIC_IsSameItemID(const struct FItemID& src, const struct FItemID& des)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.IsSameItemID");

	UUICommonAPI_IsSameItemID_Params params;
	params.src = src;
	params.des = des;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.ClearItemID
// (Defined, Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 Id                             (Parm, OutParm)

void UUICommonAPI::STATIC_ClearItemID(struct FItemID* Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.ClearItemID");

	UUICommonAPI_ClearItemID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Id != nullptr)
		*Id = params.Id;
}


// Function Interface.UICommonAPI.ParamAddItemIDWithIndex
// (PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, OutParm, NeedCtorLink)
// struct FItemID                 Id                             (Parm)
// int                            idx                            (Parm)

void UUICommonAPI::STATIC_ParamAddItemIDWithIndex(const struct FItemID& Id, int idx, struct FString* param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.ParamAddItemIDWithIndex");

	UUICommonAPI_ParamAddItemIDWithIndex_Params params;
	params.Id = Id;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (param != nullptr)
		*param = params.param;
}


// Function Interface.UICommonAPI.ParamAddItemID
// (Final, Iterator, Latent, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, OutParm, NeedCtorLink)
// struct FItemID                 Id                             (Parm)

void UUICommonAPI::STATIC_ParamAddItemID(const struct FItemID& Id, struct FString* param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.ParamAddItemID");

	UUICommonAPI_ParamAddItemID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (param != nullptr)
		*param = params.param;
}


// Function Interface.UICommonAPI.ParseItemIDWithIndex
// (Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// struct FItemID                 Id                             (Parm, OutParm)
// int                            idx                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UUICommonAPI::STATIC_ParseItemIDWithIndex(const struct FString& param, int idx, struct FItemID* Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.ParseItemIDWithIndex");

	UUICommonAPI_ParseItemIDWithIndex_Params params;
	params.param = param;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Id != nullptr)
		*Id = params.Id;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.ParseItemID
// (Final, Defined, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// struct FItemID                 Id                             (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UUICommonAPI::STATIC_ParseItemID(const struct FString& param, struct FItemID* Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.ParseItemID");

	UUICommonAPI_ParseItemID_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Id != nullptr)
		*Id = params.Id;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.GetItemID
// (Final, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// struct FItemID                 ReturnValue                    (Parm, OutParm, ReturnParm)

struct FItemID UUICommonAPI::STATIC_GetItemID(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.GetItemID");

	UUICommonAPI_GetItemID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.IsValidItemID
// (Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 Id                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UUICommonAPI::STATIC_IsValidItemID(const struct FItemID& Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.IsValidItemID");

	UUICommonAPI_IsValidItemID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.MakeTooltipSimpleText
// (Defined, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Text                           (Parm, NeedCtorLink)
// struct FCustomTooltip          ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FCustomTooltip UUICommonAPI::STATIC_MakeTooltipSimpleText(const struct FString& Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.MakeTooltipSimpleText");

	UUICommonAPI_MakeTooltipSimpleText_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.ParamToRecord
// (Defined, Iterator, Latent, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// struct FLVDataRecord           Record                         (Parm, OutParm, NeedCtorLink)

void UUICommonAPI::STATIC_ParamToRecord(const struct FString& param, struct FLVDataRecord* Record)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.ParamToRecord");

	UUICommonAPI_ParamToRecord_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Record != nullptr)
		*Record = params.Record;
}


// Function Interface.UICommonAPI.ParamToItemInfo
// (Iterator, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, OutParm, NeedCtorLink)

void UUICommonAPI::STATIC_ParamToItemInfo(const struct FString& param, struct FItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.ParamToItemInfo");

	UUICommonAPI_ParamToItemInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;
}


// Function Interface.UICommonAPI.IsShowWindow
// (Final, Defined, Iterator, Latent, Net, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 a_ControlID                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UUICommonAPI::STATIC_IsShowWindow(const struct FString& a_ControlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.IsShowWindow");

	UUICommonAPI_IsShowWindow_Params params;
	params.a_ControlID = a_ControlID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.HideWindow
// (Final, Latent, NetReliable, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 a_ControlID                    (Parm, NeedCtorLink)

void UUICommonAPI::STATIC_HideWindow(const struct FString& a_ControlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.HideWindow");

	UUICommonAPI_HideWindow_Params params;
	params.a_ControlID = a_ControlID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.ShowWindowWithFocus
// (Final, Defined, Iterator, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_ControlID                    (Parm, NeedCtorLink)

void UUICommonAPI::STATIC_ShowWindowWithFocus(const struct FString& a_ControlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.ShowWindowWithFocus");

	UUICommonAPI_ShowWindowWithFocus_Params params;
	params.a_ControlID = a_ControlID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.ShowWindow
// (Final, Latent, Net, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 a_ControlID                    (Parm, NeedCtorLink)

void UUICommonAPI::STATIC_ShowWindow(const struct FString& a_ControlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.ShowWindow");

	UUICommonAPI_ShowWindow_Params params;
	params.a_ControlID = a_ControlID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.Split
// (Final, Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strInput                       (Parm, NeedCtorLink)
// struct FString                 delim                          (Parm, NeedCtorLink)
// TArray<struct FString>         arrToken                       (Parm, OutParm, NeedCtorLink)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UUICommonAPI::STATIC_Split(const struct FString& strInput, const struct FString& delim, TArray<struct FString>* arrToken)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.Split");

	UUICommonAPI_Split_Params params;
	params.strInput = strInput;
	params.delim = delim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (arrToken != nullptr)
		*arrToken = params.arrToken;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.DialogSetEditBoxMaxLength
// (Iterator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            maxLength                      (Parm)

void UUICommonAPI::STATIC_DialogSetEditBoxMaxLength(int maxLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetEditBoxMaxLength");

	UUICommonAPI_DialogSetEditBoxMaxLength_Params params;
	params.maxLength = maxLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogGetReservedItemInfo
// (Final, Defined, Latent, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               Info                           (Parm, OutParm, NeedCtorLink)

void UUICommonAPI::STATIC_DialogGetReservedItemInfo(struct FItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogGetReservedItemInfo");

	UUICommonAPI_DialogGetReservedItemInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;
}


// Function Interface.UICommonAPI.DialogGetReservedItemID
// (Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 ReturnValue                    (Parm, OutParm, ReturnParm)

struct FItemID UUICommonAPI::STATIC_DialogGetReservedItemID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogGetReservedItemID");

	UUICommonAPI_DialogGetReservedItemID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.DialogGetReservedInt3
// (Latent, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UUICommonAPI::STATIC_DialogGetReservedInt3()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogGetReservedInt3");

	UUICommonAPI_DialogGetReservedInt3_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.DialogGetReservedInt2
// (Defined, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FINT64 UUICommonAPI::STATIC_DialogGetReservedInt2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogGetReservedInt2");

	UUICommonAPI_DialogGetReservedInt2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.DialogGetReservedInt
// (Final, Defined, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UUICommonAPI::STATIC_DialogGetReservedInt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogGetReservedInt");

	UUICommonAPI_DialogGetReservedInt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.DialogSetReservedItemInfo
// (Final, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               Info                           (Parm, NeedCtorLink)

void UUICommonAPI::STATIC_DialogSetReservedItemInfo(const struct FItemInfo& Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetReservedItemInfo");

	UUICommonAPI_DialogSetReservedItemInfo_Params params;
	params.Info = Info;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogSetReservedItemID
// (Final, Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 Id                             (Parm)

void UUICommonAPI::STATIC_DialogSetReservedItemID(const struct FItemID& Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetReservedItemID");

	UUICommonAPI_DialogSetReservedItemID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogSetReservedInt3
// (Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Value                          (Parm)

void UUICommonAPI::STATIC_DialogSetReservedInt3(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetReservedInt3");

	UUICommonAPI_DialogSetReservedInt3_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogSetReservedInt2
// (Defined, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  Value                          (Parm)

void UUICommonAPI::STATIC_DialogSetReservedInt2(const struct FINT64& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetReservedInt2");

	UUICommonAPI_DialogSetReservedInt2_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogSetReservedInt
// (Final, Defined, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Value                          (Parm)

void UUICommonAPI::STATIC_DialogSetReservedInt(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetReservedInt");

	UUICommonAPI_DialogSetReservedInt_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogSetParamInt64
// (Final, Defined, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  param                          (Parm)

void UUICommonAPI::STATIC_DialogSetParamInt64(const struct FINT64& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetParamInt64");

	UUICommonAPI_DialogSetParamInt64_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogGetID
// (Final, Iterator, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UUICommonAPI::STATIC_DialogGetID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogGetID");

	UUICommonAPI_DialogGetID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.DialogSetString
// (Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strInput                       (Parm, NeedCtorLink)

void UUICommonAPI::STATIC_DialogSetString(const struct FString& strInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetString");

	UUICommonAPI_DialogSetString_Params params;
	params.strInput = strInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogGetString
// (Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UUICommonAPI::STATIC_DialogGetString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogGetString");

	UUICommonAPI_DialogGetString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.DialogSetEditType
// (Final, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strType                        (Parm, NeedCtorLink)

void UUICommonAPI::STATIC_DialogSetEditType(const struct FString& strType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetEditType");

	UUICommonAPI_DialogSetEditType_Params params;
	params.strType = strType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogSetID
// (Final, Iterator, Latent, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)

void UUICommonAPI::STATIC_DialogSetID(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetID");

	UUICommonAPI_DialogSetID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogIsMine
// (Iterator, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UUICommonAPI::STATIC_DialogIsMine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogIsMine");

	UUICommonAPI_DialogIsMine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UICommonAPI.DialogSetDefaultOK
// (Defined, Iterator, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUICommonAPI::STATIC_DialogSetDefaultOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogSetDefaultOK");

	UUICommonAPI_DialogSetDefaultOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogHide
// (Final, Defined, Iterator, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUICommonAPI::STATIC_DialogHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogHide");

	UUICommonAPI_DialogHide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UICommonAPI.DialogShow
// (Iterator, Latent, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EDialogType>       dialogType                     (Parm)
// struct FString                 strMessage                     (Parm, NeedCtorLink)

void UUICommonAPI::STATIC_DialogShow(TEnumAsByte<EDialogType> dialogType, const struct FString& strMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UICommonAPI.DialogShow");

	UUICommonAPI_DialogShow_Params params;
	params.dialogType = dialogType;
	params.strMessage = strMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.AddPrimeItemSymbol
// (Latent, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               item                           (Parm, NeedCtorLink)

void UToolTip::STATIC_AddPrimeItemSymbol(const struct FItemInfo& item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.AddPrimeItemSymbol");

	UToolTip_AddPrimeItemSymbol_Params params;
	params.item = item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.GetDefAttrLv
// (Final, Iterator, Latent, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            DefValue                       (Parm)

void UToolTip::STATIC_GetDefAttrLv(int DefValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.GetDefAttrLv");

	UToolTip_GetDefAttrLv_Params params;
	params.DefValue = DefValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.GetAttAttrLv
// (Defined, Iterator, Latent, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            AttValue                       (Parm)

void UToolTip::STATIC_GetAttAttrLv(int AttValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.GetAttAttrLv");

	UToolTip_GetAttAttrLv_Params params;
	params.AttValue = AttValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.AddTooltipItemQuestList
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               item                           (Parm, NeedCtorLink)

void UToolTip::STATIC_AddTooltipItemQuestList(const struct FItemInfo& item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.AddTooltipItemQuestList");

	UToolTip_AddTooltipItemQuestList_Params params;
	params.item = item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.AddTooltipItemAttributeGage
// (Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               item                           (Parm, NeedCtorLink)

void UToolTip::STATIC_AddTooltipItemAttributeGage(const struct FItemInfo& item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.AddTooltipItemAttributeGage");

	UToolTip_AddTooltipItemAttributeGage_Params params;
	params.item = item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.GetRefineryColor
// (Final, Defined, Iterator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Quality                        (Parm)
// int                            R                              (Parm, OutParm)
// int                            G                              (Parm, OutParm)
// int                            B                              (Parm, OutParm)

void UToolTip::STATIC_GetRefineryColor(int Quality, int* R, int* G, int* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.GetRefineryColor");

	UToolTip_GetRefineryColor_Params params;
	params.Quality = Quality;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (R != nullptr)
		*R = params.R;
	if (G != nullptr)
		*G = params.G;
	if (B != nullptr)
		*B = params.B;
}


// Function Interface.ToolTip.AddTooltipItemCount
// (Defined, Iterator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               item                           (Parm, NeedCtorLink)

void UToolTip::STATIC_AddTooltipItemCount(const struct FItemInfo& item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.AddTooltipItemCount");

	UToolTip_AddTooltipItemCount_Params params;
	params.item = item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.AddTooltipItemGrade
// (Iterator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               item                           (Parm, NeedCtorLink)

void UToolTip::STATIC_AddTooltipItemGrade(const struct FItemInfo& item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.AddTooltipItemGrade");

	UToolTip_AddTooltipItemGrade_Params params;
	params.item = item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.AddTooltipItemName
// (Final, Defined, Iterator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)
// struct FItemInfo               item                           (Parm, NeedCtorLink)
// int                            AddTooltipItemName             (Parm)

void UToolTip::STATIC_AddTooltipItemName(const struct FString& Name, const struct FItemInfo& item, int AddTooltipItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.AddTooltipItemName");

	UToolTip_AddTooltipItemName_Params params;
	params.Name = Name;
	params.item = item;
	params.AddTooltipItemName = AddTooltipItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.AddTooltipItemEnchant
// (Final, Iterator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               item                           (Parm, NeedCtorLink)

void UToolTip::STATIC_AddTooltipItemEnchant(const struct FItemInfo& item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.AddTooltipItemEnchant");

	UToolTip_AddTooltipItemEnchant_Params params;
	params.item = item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.AddTooltipItemBlank
// (Final, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Height                         (Parm)

void UToolTip::STATIC_AddTooltipItemBlank(int Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.AddTooltipItemBlank");

	UToolTip_AddTooltipItemBlank_Params params;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.SetTooltipItemColor
// (Defined, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            R                              (Parm)
// int                            G                              (Parm)
// int                            B                              (Parm)
// int                            offset                         (Parm)

void UToolTip::STATIC_SetTooltipItemColor(int R, int G, int B, int offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.SetTooltipItemColor");

	UToolTip_SetTooltipItemColor_Params params;
	params.R = R;
	params.G = G;
	params.B = B;
	params.offset = offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.AddTooltipItemOption2
// (Final, Defined, Iterator, Latent, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            TitleID                        (Parm)
// int                            ContentID                      (Parm)
// bool                           bTitle                         (Parm)
// bool                           bContent                       (Parm)
// bool                           IamFirst                       (Parm)

void UToolTip::STATIC_AddTooltipItemOption2(int TitleID, int ContentID, bool bTitle, bool bContent, bool IamFirst)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.AddTooltipItemOption2");

	UToolTip_AddTooltipItemOption2_Params params;
	params.TitleID = TitleID;
	params.ContentID = ContentID;
	params.bTitle = bTitle;
	params.bContent = bContent;
	params.IamFirst = IamFirst;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.AddTooltipItemOption
// (Defined, Iterator, Latent, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            TitleID                        (Parm)
// struct FString                 Content                        (Parm, NeedCtorLink)
// bool                           bTitle                         (Parm)
// bool                           bContent                       (Parm)
// bool                           IamFirst                       (Parm)

void UToolTip::STATIC_AddTooltipItemOption(int TitleID, const struct FString& Content, bool bTitle, bool bContent, bool IamFirst)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.AddTooltipItemOption");

	UToolTip_AddTooltipItemOption_Params params;
	params.TitleID = TitleID;
	params.Content = Content;
	params.bTitle = bTitle;
	params.bContent = bContent;
	params.IamFirst = IamFirst;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_MANOR
// (Iterator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// struct FString                 TooltipType                    (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_MANOR(const struct FString& param, const struct FString& TooltipType, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_MANOR");

	UToolTip_ReturnTooltip_NTT_MANOR_Params params;
	params.param = param;
	params.TooltipType = TooltipType;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_QUESTINFO
// (Final, Iterator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_QUESTINFO(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_QUESTINFO");

	UToolTip_ReturnTooltip_NTT_QUESTINFO_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_RAIDLIST
// (Defined, Iterator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_RAIDLIST(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_RAIDLIST");

	UToolTip_ReturnTooltip_NTT_RAIDLIST_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_QUESTLIST
// (Final, Defined, Iterator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_QUESTLIST(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_QUESTLIST");

	UToolTip_ReturnTooltip_NTT_QUESTLIST_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_PARTYMATCH
// (Latent, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_PARTYMATCH(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_PARTYMATCH");

	UToolTip_ReturnTooltip_NTT_PARTYMATCH_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_CLANINFO
// (Final, Latent, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_CLANINFO(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_CLANINFO");

	UToolTip_ReturnTooltip_NTT_CLANINFO_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_RECIPE_MANUFACTURE
// (Defined, Latent, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_RECIPE_MANUFACTURE(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_RECIPE_MANUFACTURE");

	UToolTip_ReturnTooltip_NTT_RECIPE_MANUFACTURE_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_SHORTCUT
// (Final, Defined, Latent, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_SHORTCUT(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_SHORTCUT");

	UToolTip_ReturnTooltip_NTT_SHORTCUT_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_RECIPE
// (Iterator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)
// bool                           bShowPrice                     (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_RECIPE(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType, bool bShowPrice)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_RECIPE");

	UToolTip_ReturnTooltip_NTT_RECIPE_Params params;
	params.param = param;
	params.eSourceType = eSourceType;
	params.bShowPrice = bShowPrice;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_NORMALITEM
// (Final, Iterator, Latent, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_NORMALITEM(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_NORMALITEM");

	UToolTip_ReturnTooltip_NTT_NORMALITEM_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_ABNORMALSTATUS
// (Defined, Iterator, Latent, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_ABNORMALSTATUS(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_ABNORMALSTATUS");

	UToolTip_ReturnTooltip_NTT_ABNORMALSTATUS_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_SKILL
// (Final, Defined, Iterator, Latent, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_SKILL(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_SKILL");

	UToolTip_ReturnTooltip_NTT_SKILL_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_ACTION
// (PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_ACTION(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_ACTION");

	UToolTip_ReturnTooltip_NTT_ACTION_Params params;
	params.param = param;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_ITEM
// (Final, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// struct FString                 TooltipType                    (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_ITEM(const struct FString& param, const struct FString& TooltipType, TEnumAsByte<ETooltipSourceType> eSourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_ITEM");

	UToolTip_ReturnTooltip_NTT_ITEM_Params params;
	params.param = param;
	params.TooltipType = TooltipType;
	params.eSourceType = eSourceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ReturnTooltip_NTT_TEXT
// (Final, Defined, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// TEnumAsByte<ETooltipSourceType> eSourceType                    (Parm)
// bool                           bDesc                          (Parm)

void UToolTip::STATIC_ReturnTooltip_NTT_TEXT(const struct FString& param, TEnumAsByte<ETooltipSourceType> eSourceType, bool bDesc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ReturnTooltip_NTT_TEXT");

	UToolTip_ReturnTooltip_NTT_TEXT_Params params;
	params.param = param;
	params.eSourceType = eSourceType;
	params.bDesc = bDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.EndItem
// (Final, Defined, Iterator, Latent, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UToolTip::STATIC_EndItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.EndItem");

	UToolTip_EndItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.StartItem
// (PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UToolTip::STATIC_StartItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.StartItem");

	UToolTip_StartItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.ClearTooltip
// (Final, Defined, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UToolTip::STATIC_ClearTooltip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.ClearTooltip");

	UToolTip_ClearTooltip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.IsEnchantableItem
// (Iterator, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EItemParamType>    type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UToolTip::STATIC_IsEnchantableItem(TEnumAsByte<EItemParamType> type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.IsEnchantableItem");

	UToolTip_IsEnchantableItem_Params params;
	params.type = type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ToolTip.HandleRequestTooltipInfo
// (Final, Iterator, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UToolTip::STATIC_HandleRequestTooltipInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.HandleRequestTooltipInfo");

	UToolTip_HandleRequestTooltipInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UToolTip::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.OnEvent");

	UToolTip_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.OnLoad
// (Final, Net, Operator, Static, Const)

void UToolTip::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.OnLoad");

	UToolTip_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ToolTip.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UToolTip::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ToolTip.OnRegisterEvent");

	UToolTip_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.TrimRight
// (Final, Defined, Iterator, Latent, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 S                              (Parm, NeedCtorLink)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UMiniGame1Wnd::STATIC_TrimRight(const struct FString& S)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.TrimRight");

	UMiniGame1Wnd_TrimRight_Params params;
	params.S = S;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MiniGame1Wnd.PutNumberScore
// (Defined, Iterator, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            LevelNo                        (Parm)

void UMiniGame1Wnd::STATIC_PutNumberScore(int LevelNo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.PutNumberScore");

	UMiniGame1Wnd_PutNumberScore_Params params;
	params.LevelNo = LevelNo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.PutNumberLevel
// (Final, Defined, Latent, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            LevelNo                        (Parm)

void UMiniGame1Wnd::STATIC_PutNumberLevel(int LevelNo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.PutNumberLevel");

	UMiniGame1Wnd_PutNumberLevel_Params params;
	params.LevelNo = LevelNo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.ProcEndGameDefaultSetting
// (Iterator, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 SetTextureName                 (Parm, NeedCtorLink)

void UMiniGame1Wnd::STATIC_ProcEndGameDefaultSetting(const struct FString& SetTextureName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.ProcEndGameDefaultSetting");

	UMiniGame1Wnd_ProcEndGameDefaultSetting_Params params;
	params.SetTextureName = SetTextureName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.EndGamewithTimeOut
// (Defined, Latent, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_EndGamewithTimeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.EndGamewithTimeOut");

	UMiniGame1Wnd_EndGamewithTimeOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.EndGame
// (Final, Defined, PreOperator, Singular, Net, Exec, Native)

void UMiniGame1Wnd::EndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.EndGame");

	UMiniGame1Wnd_EndGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.StartLevelUp
// (Final, Latent, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_StartLevelUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.StartLevelUp");

	UMiniGame1Wnd_StartLevelUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.EndGameRemoveBlock
// (Defined, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)

void UMiniGame1Wnd::STATIC_EndGameRemoveBlock(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.EndGameRemoveBlock");

	UMiniGame1Wnd_EndGameRemoveBlock_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.GetTargetScore
// (Latent, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            CurrentLevel                   (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UMiniGame1Wnd::STATIC_GetTargetScore(int CurrentLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.GetTargetScore");

	UMiniGame1Wnd_GetTargetScore_Params params;
	params.CurrentLevel = CurrentLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MiniGame1Wnd.GetCurrentTimeLimit
// (Final, Defined, Iterator, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            CurrentLevel                   (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UMiniGame1Wnd::STATIC_GetCurrentTimeLimit(int CurrentLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.GetCurrentTimeLimit");

	UMiniGame1Wnd_GetCurrentTimeLimit_Params params;
	params.CurrentLevel = CurrentLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MiniGame1Wnd.OnTextureAnimEnd
// (Final, Iterator, Latent, Operator, Static, Const)
// Parameters:
// class UAnimTextureHandle*      a_WindowHandle                 (Parm)

void UMiniGame1Wnd::STATIC_OnTextureAnimEnd(class UAnimTextureHandle* a_WindowHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnTextureAnimEnd");

	UMiniGame1Wnd_OnTextureAnimEnd_Params params;
	params.a_WindowHandle = a_WindowHandle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.OnProgressTimeUp
// (Final, Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMiniGame1Wnd::STATIC_OnProgressTimeUp(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnProgressTimeUp");

	UMiniGame1Wnd_OnProgressTimeUp_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.GetCellGridID
// (Final, Iterator, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            X                              (Parm)
// int                            Y                              (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UMiniGame1Wnd::STATIC_GetCellGridID(int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.GetCellGridID");

	UMiniGame1Wnd_GetCellGridID_Params params;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MiniGame1Wnd.CheckSwappable
// (Final, Iterator, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ID1                            (Parm)
// int                            ID2                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UMiniGame1Wnd::STATIC_CheckSwappable(int ID1, int ID2)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.CheckSwappable");

	UMiniGame1Wnd_CheckSwappable_Params params;
	params.ID1 = ID1;
	params.ID2 = ID2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MiniGame1Wnd.CheckMovesOnTimer
// (Iterator, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UMiniGame1Wnd::STATIC_CheckMovesOnTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.CheckMovesOnTimer");

	UMiniGame1Wnd_CheckMovesOnTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MiniGame1Wnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UMiniGame1Wnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnTimer");

	UMiniGame1Wnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.OnClickCellIcon
// (Final, Defined, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UMiniGame1Wnd::STATIC_OnClickCellIcon(int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnClickCellIcon");

	UMiniGame1Wnd_OnClickCellIcon_Params params;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.OnTimeOver
// (Defined, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_OnTimeOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnTimeOver");

	UMiniGame1Wnd_OnTimeOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.RestartCurrentGame
// (Singular, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_RestartCurrentGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.RestartCurrentGame");

	UMiniGame1Wnd_RestartCurrentGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.StartNewGameProc
// (Final, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_StartNewGameProc()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.StartNewGameProc");

	UMiniGame1Wnd_StartNewGameProc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.StartNewGame
// (Final, Defined, Latent, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_StartNewGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.StartNewGame");

	UMiniGame1Wnd_StartNewGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMiniGame1Wnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnHide");

	UMiniGame1Wnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.PauseGame
// (Iterator, Latent, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_PauseGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.PauseGame");

	UMiniGame1Wnd_PauseGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMiniGame1Wnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnClickButton");

	UMiniGame1Wnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.CheckMatches
// (Final, Defined, Latent, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           ClearButton                    (Parm)

void UMiniGame1Wnd::STATIC_CheckMatches(bool ClearButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.CheckMatches");

	UMiniGame1Wnd_CheckMatches_Params params;
	params.ClearButton = ClearButton;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.Randomize
// (Defined, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)

void UMiniGame1Wnd::STATIC_Randomize(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.Randomize");

	UMiniGame1Wnd_Randomize_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UMiniGame1Wnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.Initialize");

	UMiniGame1Wnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.PushDownRow
// (Final, Iterator, Latent, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)

void UMiniGame1Wnd::STATIC_PushDownRow(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.PushDownRow");

	UMiniGame1Wnd_PushDownRow_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.CheckMoves
// (Final, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_CheckMoves()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.CheckMoves");

	UMiniGame1Wnd_CheckMoves_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.CountMatches
// (Defined, Iterator, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_CountMatches()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.CountMatches");

	UMiniGame1Wnd_CountMatches_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.ClearCellGridDataFlag
// (Final, Singular, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_ClearCellGridDataFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.ClearCellGridDataFlag");

	UMiniGame1Wnd_ClearCellGridDataFlag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.MoveTillnoMatches
// (Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_MoveTillnoMatches()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.MoveTillnoMatches");

	UMiniGame1Wnd_MoveTillnoMatches_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.ReadyCells
// (Final, Defined, Iterator, Latent, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_ReadyCells()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.ReadyCells");

	UMiniGame1Wnd_ReadyCells_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMiniGame1Wnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnShow");

	UMiniGame1Wnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.ClearCellGridData
// (Iterator, Latent, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_ClearCellGridData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.ClearCellGridData");

	UMiniGame1Wnd_ClearCellGridData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.ClearScoreData
// (Defined, Singular, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UMiniGame1Wnd::STATIC_ClearScoreData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.ClearScoreData");

	UMiniGame1Wnd_ClearScoreData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            EvID                           (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UMiniGame1Wnd::STATIC_OnEvent(int EvID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnEvent");

	UMiniGame1Wnd_OnEvent_Params params;
	params.EvID = EvID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMiniGame1Wnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnLoad");

	UMiniGame1Wnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniGame1Wnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMiniGame1Wnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniGame1Wnd.OnRegisterEvent");

	UMiniGame1Wnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.GetSSQTimeAttackEventRoomName
// (Final, Latent, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            nID                            (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString USSQMainBoard::STATIC_GetSSQTimeAttackEventRoomName(int nID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.GetSSQTimeAttackEventRoomName");

	USSQMainBoard_GetSSQTimeAttackEventRoomName_Params params;
	params.nID = nID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.SSQMainBoard.GetSSQSealDesc
// (Latent, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            nID                            (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString USSQMainBoard::STATIC_GetSSQSealDesc(int nID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.GetSSQSealDesc");

	USSQMainBoard_GetSSQSealDesc_Params params;
	params.nID = nID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.SSQMainBoard.GetSSQTeamName
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            nID                            (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString USSQMainBoard::STATIC_GetSSQTeamName(int nID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.GetSSQTeamName");

	USSQMainBoard_GetSSQTeamName_Params params;
	params.nID = nID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.SSQMainBoard.GetSSQSealName
// (Final, Defined, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            nID                            (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString USSQMainBoard::STATIC_GetSSQSealName(int nID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.GetSSQSealName");

	USSQMainBoard_GetSSQSealName_Params params;
	params.nID = nID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.SSQMainBoard.AddSSQSealStatus
// (PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            m_nSSQStatus                   (Parm)
// int                            m_nNeedPoint1                  (Parm)
// int                            m_nNeedPoint2                  (Parm)
// int                            m_nSealID                      (Parm)
// int                            m_nOwnerTeamID                 (Parm)
// int                            m_nTeam1Mark                   (Parm)
// int                            m_nTeam2Mark                   (Parm)

void USSQMainBoard::STATIC_AddSSQSealStatus(int m_nSSQStatus, int m_nNeedPoint1, int m_nNeedPoint2, int m_nSealID, int m_nOwnerTeamID, int m_nTeam1Mark, int m_nTeam2Mark)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.AddSSQSealStatus");

	USSQMainBoard_AddSSQSealStatus_Params params;
	params.m_nSSQStatus = m_nSSQStatus;
	params.m_nNeedPoint1 = m_nNeedPoint1;
	params.m_nNeedPoint2 = m_nNeedPoint2;
	params.m_nSealID = m_nSealID;
	params.m_nOwnerTeamID = m_nOwnerTeamID;
	params.m_nTeam1Mark = m_nTeam1Mark;
	params.m_nTeam2Mark = m_nTeam2Mark;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.ShowSSQSealStatus
// (Iterator, Latent, NetReliable, Operator, Static, HasOptionalParms, Const)

void USSQMainBoard::STATIC_ShowSSQSealStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.ShowSSQSealStatus");

	USSQMainBoard_ShowSSQSealStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.AddSSQMainEvent
// (Defined, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FSSQMainEventInfo       Info                           (Parm, NeedCtorLink)

void USSQMainBoard::STATIC_AddSSQMainEvent(const struct FSSQMainEventInfo& Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.AddSSQMainEvent");

	USSQMainBoard_AddSSQMainEvent_Params params;
	params.Info = Info;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.ShowSSQMainEvent
// (Final, Iterator, Latent, NetReliable, Operator, Static, HasOptionalParms, Const)

void USSQMainBoard::STATIC_ShowSSQMainEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.ShowSSQMainEvent");

	USSQMainBoard_ShowSSQMainEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.ClearSSQMainEventInfo
// (Final, Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FSSQMainEventInfo       Info                           (Parm, OutParm, NeedCtorLink)

void USSQMainBoard::STATIC_ClearSSQMainEventInfo(struct FSSQMainEventInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.ClearSSQMainEventInfo");

	USSQMainBoard_ClearSSQMainEventInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;
}


// Function Interface.SSQMainBoard.AddSSQPreInfoSealStatus
// (Final, Defined, Iterator, Latent, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void USSQMainBoard::STATIC_AddSSQPreInfoSealStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.AddSSQPreInfoSealStatus");

	USSQMainBoard_AddSSQPreInfoSealStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.SetSSQPreInfo
// (Final, Defined, Iterator, Latent, NetReliable, Operator, Static, HasOptionalParms, Const)

void USSQMainBoard::STATIC_SetSSQPreInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.SetSSQPreInfo");

	USSQMainBoard_SetSSQPreInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.ClearSSQPreInfo
// (Defined, Latent, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void USSQMainBoard::STATIC_ClearSSQPreInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.ClearSSQPreInfo");

	USSQMainBoard_ClearSSQPreInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.SetSSQStatusInfo
// (Final, Defined, Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void USSQMainBoard::STATIC_SetSSQStatusInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.SetSSQStatusInfo");

	USSQMainBoard_SetSSQStatusInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.SetSSQStatus
// (Defined, Iterator, Latent, PreOperator, Net, Exec, Native, Event, Static, Const)

void USSQMainBoard::STATIC_SetSSQStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.SetSSQStatus");

	USSQMainBoard_SetSSQStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void USSQMainBoard::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.OnClickButton");

	USSQMainBoard_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USSQMainBoard::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.OnEvent");

	USSQMainBoard_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USSQMainBoard::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.OnHide");

	USSQMainBoard_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USSQMainBoard::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.OnShow");

	USSQMainBoard_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.OnLoad
// (Final, Net, Operator, Static, Const)

void USSQMainBoard::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.OnLoad");

	USSQMainBoard_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SSQMainBoard.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USSQMainBoard::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SSQMainBoard.OnRegisterEvent");

	USSQMainBoard_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.GetCurrentChatTypeID
// (Defined, Latent, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ChatTypeUI                     (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UChatWnd::STATIC_GetCurrentChatTypeID(int ChatTypeUI)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.GetCurrentChatTypeID");

	UChatWnd_GetCurrentChatTypeID_Params params;
	params.ChatTypeUI = ChatTypeUI;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ChatWnd.AssignCurrentChatTypeID
// (Latent, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ChatTypeID                     (Parm)
// int                            ChatTypeUI                     (Parm)

void UChatWnd::STATIC_AssignCurrentChatTypeID(int ChatTypeID, int ChatTypeUI)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.AssignCurrentChatTypeID");

	UChatWnd_AssignCurrentChatTypeID_Params params;
	params.ChatTypeID = ChatTypeID;
	params.ChatTypeUI = ChatTypeUI;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.GetAllcurrentAssignedChatTypeID
// (Final, Defined, Latent, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_GetAllcurrentAssignedChatTypeID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.GetAllcurrentAssignedChatTypeID");

	UChatWnd_GetAllcurrentAssignedChatTypeID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.SetCurrentAssignedChatType2Ini
// (Iterator, Latent, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ChannelIndex                   (Parm)
// int                            ChatType                       (Parm)

void UChatWnd::STATIC_SetCurrentAssignedChatType2Ini(int ChannelIndex, int ChatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.SetCurrentAssignedChatType2Ini");

	UChatWnd_SetCurrentAssignedChatType2Ini_Params params;
	params.ChannelIndex = ChannelIndex;
	params.ChatType = ChatType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.ChangeTabChannel
// (Final, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            ChannelIndex                   (Parm)

void UChatWnd::STATIC_ChangeTabChannel(int ChannelIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.ChangeTabChannel");

	UChatWnd_ChangeTabChannel_Params params;
	params.ChannelIndex = ChannelIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.HandleDominionWarChannelSet
// (Final, Iterator, Latent, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UChatWnd::STATIC_HandleDominionWarChannelSet(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.HandleDominionWarChannelSet");

	UChatWnd_HandleDominionWarChannelSet_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.HandleTextLinkLButtonClick
// (Defined, Iterator, Latent, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UChatWnd::STATIC_HandleTextLinkLButtonClick(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.HandleTextLinkLButtonClick");

	UChatWnd_HandleTextLinkLButtonClick_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.GetChatTypeByTabIndex
// (Final, Defined, Iterator, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// TEnumAsByte<EChatType>         ReturnValue                    (Parm, OutParm, ReturnParm)

TEnumAsByte<EChatType> UChatWnd::STATIC_GetChatTypeByTabIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.GetChatTypeByTabIndex");

	UChatWnd_GetChatTypeByTabIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ChatWnd.HandleMsnStatus
// (PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UChatWnd::STATIC_HandleMsnStatus(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.HandleMsnStatus");

	UChatWnd_HandleMsnStatus_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.Print
// (Defined, Iterator, Singular, Native, Event, Static, Const)
// Parameters:
// int                            Index                          (Parm)

void UChatWnd::STATIC_Print(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.Print");

	UChatWnd_Print_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.HandleSetFocus
// (Final, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_HandleSetFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.HandleSetFocus");

	UChatWnd_HandleSetFocus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.HandleSetString
// (Defined, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UChatWnd::STATIC_HandleSetString(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.HandleSetString");

	UChatWnd_HandleSetString_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.HandleChatWndStatusChange
// (Final, Defined, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_HandleChatWndStatusChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.HandleChatWndStatusChange");

	UChatWnd_HandleChatWndStatusChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.SetChatFilterButton
// (Final, Defined, Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_SetChatFilterButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.SetChatFilterButton");

	UChatWnd_SetChatFilterButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.SetDefaultFilterValue
// (Iterator, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_SetDefaultFilterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.SetDefaultFilterValue");

	UChatWnd_SetDefaultFilterValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.SetDefaultFilterOn
// (Final, Iterator, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_SetDefaultFilterOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.SetDefaultFilterOn");

	UChatWnd_SetDefaultFilterOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.InitFilterInfo
// (Defined, Iterator, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_InitFilterInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.InitFilterInfo");

	UChatWnd_InitFilterInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.CheckFilter
// (Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EChatType>         type                           (Parm)
// int                            WindowType                     (Parm)
// TEnumAsByte<ESystemMsgType>    systemType                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UChatWnd::STATIC_CheckFilter(TEnumAsByte<EChatType> type, int WindowType, TEnumAsByte<ESystemMsgType> systemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.CheckFilter");

	UChatWnd_CheckFilter_Params params;
	params.type = type;
	params.WindowType = WindowType;
	params.systemType = systemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ChatWnd.HandleIMEStatusChange
// (Defined, Iterator, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_HandleIMEStatusChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.HandleIMEStatusChange");

	UChatWnd_HandleIMEStatusChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.ShowAnnounceMessgage
// (Latent, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Msg                            (Parm, NeedCtorLink)

void UChatWnd::STATIC_ShowAnnounceMessgage(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.ShowAnnounceMessgage");

	UChatWnd_ShowAnnounceMessgage_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.ShowUnionCommanderMessgage
// (Final, Latent, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Msg                            (Parm, NeedCtorLink)

void UChatWnd::STATIC_ShowUnionCommanderMessgage(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.ShowUnionCommanderMessgage");

	UChatWnd_ShowUnionCommanderMessgage_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.HandleChatmessage
// (Final, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UChatWnd::STATIC_HandleChatmessage(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.HandleChatmessage");

	UChatWnd_HandleChatmessage_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.HandleChatWndMacroCommand
// (Defined, Latent, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UChatWnd::STATIC_HandleChatWndMacroCommand(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.HandleChatWndMacroCommand");

	UChatWnd_HandleChatWndMacroCommand_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UChatWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnEvent");

	UChatWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PrevStateName                (Parm)

void UChatWnd::STATIC_OnEnterState(const struct FName& a_PrevStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnEnterState");

	UChatWnd_OnEnterState_Params params;
	params.a_PrevStateName = a_PrevStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.HandleTabClick
// (Final, Iterator, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UChatWnd::STATIC_HandleTabClick(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.HandleTabClick");

	UChatWnd_HandleTabClick_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnTabMerge
// (Defined, Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 sTabButton                     (Parm, NeedCtorLink)

void UChatWnd::STATIC_OnTabMerge(const struct FString& sTabButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnTabMerge");

	UChatWnd_OnTabMerge_Params params;
	params.sTabButton = sTabButton;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnTabSplit
// (Final, Defined, Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 sTabButton                     (Parm, NeedCtorLink)

void UChatWnd::STATIC_OnTabSplit(const struct FString& sTabButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnTabSplit");

	UChatWnd_OnTabSplit_Params params;
	params.sTabButton = sTabButton;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UChatWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnTimer");

	UChatWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.ClosePartyMatchingWnd
// (Final, Iterator, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_ClosePartyMatchingWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.ClosePartyMatchingWnd");

	UChatWnd_ClosePartyMatchingWnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UChatWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnClickButton");

	UChatWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UChatWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnShow");

	UChatWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UChatWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.Clear");

	UChatWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnCompleteEditBox
// (Final, Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UChatWnd::STATIC_OnCompleteEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnCompleteEditBox");

	UChatWnd_OnCompleteEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.InitScrollBarPosition
// (Iterator, Latent, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_InitScrollBarPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.InitScrollBarPosition");

	UChatWnd_InitScrollBarPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.InitHandleCOD");

	UChatWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.InitHandle");

	UChatWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.InitGlobalSetting
// (Final, Defined, Latent, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UChatWnd::STATIC_InitGlobalSetting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.InitGlobalSetting");

	UChatWnd_InitGlobalSetting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnDefaultPosition
// (Defined, Iterator, PreOperator, Singular, Operator, Static, Const)

void UChatWnd::STATIC_OnDefaultPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnDefaultPosition");

	UChatWnd_OnDefaultPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UChatWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnLoad");

	UChatWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UChatWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatWnd.OnRegisterEvent");

	UChatWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.ResetOpeningVariables
// (Final, Defined, Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_ResetOpeningVariables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.ResetOpeningVariables");

	UClanWnd_ResetOpeningVariables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.HandleClanMyAuth
// (Final, Iterator, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanWnd::STATIC_HandleClanMyAuth(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.HandleClanMyAuth");

	UClanWnd_HandleClanMyAuth_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.AskJoin
// (Final, Defined, Iterator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_AskJoin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.AskJoin");

	UClanWnd_AskJoin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.HandleSubClanUpdated
// (Iterator, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanWnd::STATIC_HandleSubClanUpdated(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.HandleSubClanUpdated");

	UClanWnd_HandleSubClanUpdated_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.RefreshCombobox
// (Final, Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_RefreshCombobox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.RefreshCombobox");

	UClanWnd_RefreshCombobox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.HandleDeleteMember
// (Final, Defined, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanWnd::STATIC_HandleDeleteMember(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.HandleDeleteMember");

	UClanWnd_HandleDeleteMember_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.GetIndexFromType
// (Final, Defined, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            type                           (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UClanWnd::STATIC_GetIndexFromType(int type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.GetIndexFromType");

	UClanWnd_GetIndexFromType_Params params;
	params.type = type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanWnd.HandleAddClanMember
// (Iterator, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanWnd::STATIC_HandleAddClanMember(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.HandleAddClanMember");

	UClanWnd_HandleAddClanMember_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.RefreshCombobox1
// (Defined, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ClanT                          (Parm)

void UClanWnd::STATIC_RefreshCombobox1(int ClanT)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.RefreshCombobox1");

	UClanWnd_RefreshCombobox1_Params params;
	params.ClanT = ClanT;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.HandleMemberInfoUpdate
// (Final, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanWnd::STATIC_HandleMemberInfoUpdate(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.HandleMemberInfoUpdate");

	UClanWnd_HandleMemberInfoUpdate_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.GetSelectedListCtrlItem
// (Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FLVDataRecord           Record                         (Parm, OutParm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UClanWnd::STATIC_GetSelectedListCtrlItem(struct FLVDataRecord* Record)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.GetSelectedListCtrlItem");

	UClanWnd_GetSelectedListCtrlItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Record != nullptr)
		*Record = params.Record;

	return params.ReturnValue;
}


// Function Interface.ClanWnd.AddToList
// (PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)

void UClanWnd::STATIC_AddToList(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.AddToList");

	UClanWnd_AddToList_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.getClanKnighthoodMasterInfo
// (Latent, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 NameVal                        (Parm, NeedCtorLink)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UClanWnd::STATIC_getClanKnighthoodMasterInfo(const struct FString& NameVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.getClanKnighthoodMasterInfo");

	UClanWnd_getClanKnighthoodMasterInfo_Params params;
	params.NameVal = NameVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanWnd.ShowList
// (Final, Iterator, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            clanType                       (Parm)

void UClanWnd::STATIC_ShowList(int clanType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.ShowList");

	UClanWnd_ShowList_Params params;
	params.clanType = clanType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.ClearList
// (Final, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_ClearList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.ClearList");

	UClanWnd_ClearList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.HandleAddClanMemberMultiple
// (Final, Iterator, Latent, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanWnd::STATIC_HandleAddClanMemberMultiple(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.HandleAddClanMemberMultiple");

	UClanWnd_HandleAddClanMemberMultiple_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.HandleClanInfoUpdate
// (Iterator, Latent, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanWnd::STATIC_HandleClanInfoUpdate(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.HandleClanInfoUpdate");

	UClanWnd_HandleClanInfoUpdate_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.HandleClanInfo
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanWnd::STATIC_HandleClanInfo(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.HandleClanInfo");

	UClanWnd_HandleClanInfo_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.HandleEV_ResultJoinDominionWar
// (Final, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_HandleEV_ResultJoinDominionWar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.HandleEV_ResultJoinDominionWar");

	UClanWnd_HandleEV_ResultJoinDominionWar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UClanWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.Clear");

	UClanWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.resetBtnShowHide
// (Final, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_resetBtnShowHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.resetBtnShowHide");

	UClanWnd_resetBtnShowHide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ListCtrlID                     (Parm, NeedCtorLink)

void UClanWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& ListCtrlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.OnDBClickListCtrlRecord");

	UClanWnd_OnDBClickListCtrlRecord_Params params;
	params.ListCtrlID = ListCtrlID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.OnClickListCtrlRecord
// (Defined, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ListCtrlID                     (Parm, NeedCtorLink)

void UClanWnd::STATIC_OnClickListCtrlRecord(const struct FString& ListCtrlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.OnClickListCtrlRecord");

	UClanWnd_OnClickListCtrlRecord_Params params;
	params.ListCtrlID = ListCtrlID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 sName                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UClanWnd::STATIC_OnComboBoxItemSelected(const struct FString& sName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.OnComboBoxItemSelected");

	UClanWnd_OnComboBoxItemSelected_Params params;
	params.sName = sName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.OnEvent");

	UClanWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UClanWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.OnClickButton");

	UClanWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UClanWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.OnEnterState");

	UClanWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UClanWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.OnHide");

	UClanWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.NoblessMenuValidate
// (Final, Defined, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_NoblessMenuValidate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.NoblessMenuValidate");

	UClanWnd_NoblessMenuValidate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UClanWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.OnShow");

	UClanWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.GetClanTypeNameFromIndex
// (Final, Defined, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UClanWnd::STATIC_GetClanTypeNameFromIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.GetClanTypeNameFromIndex");

	UClanWnd_GetClanTypeNameFromIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanWnd.GetClanTypeFromIndex
// (Final, Defined, Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UClanWnd::STATIC_GetClanTypeFromIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.GetClanTypeFromIndex");

	UClanWnd_GetClanTypeFromIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UClanWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.OnRegisterEvent");

	UClanWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.Load");

	UClanWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.InitHandleCOD");

	UClanWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.InitHandle");

	UClanWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UClanWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.OnLoad");

	UClanWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanWnd.findmyClanData
// (Final, Defined, Iterator, Latent, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 C_Name                         (Parm, NeedCtorLink)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UClanWnd::STATIC_findmyClanData(const struct FString& C_Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.findmyClanData");

	UClanWnd_findmyClanData_Params params;
	params.C_Name = C_Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanWnd.getmyClanInfo
// (Final, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanWnd::STATIC_getmyClanInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanWnd.getmyClanInfo");

	UClanWnd_getmyClanInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleChangeCharacterPawn
// (Latent, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_HandleChangeCharacterPawn(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleChangeCharacterPawn");

	UInventoryWnd_HandleChangeCharacterPawn_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleSetMaxCount
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_HandleSetMaxCount(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleSetMaxCount");

	UInventoryWnd_HandleSetMaxCount_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.UpdateCloakSlotActivation
// (Final, Latent, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_UpdateCloakSlotActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.UpdateCloakSlotActivation");

	UInventoryWnd_UpdateCloakSlotActivation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.UpdateTalismanSlotActivation
// (Defined, Latent, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_UpdateTalismanSlotActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.UpdateTalismanSlotActivation");

	UInventoryWnd_UpdateTalismanSlotActivation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.SortItem
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// class UItemWindowHandle*       ItemWnd                        (Parm)

void UInventoryWnd::STATIC_SortItem(class UItemWindowHandle* ItemWnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.SortItem");

	UInventoryWnd_SortItem_Params params;
	params.ItemWnd = ItemWnd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnLButtonUp
// (Final, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UInventoryWnd::STATIC_OnLButtonUp(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnLButtonUp");

	UInventoryWnd_OnLButtonUp_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnLButtonDown
// (Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UInventoryWnd::STATIC_OnLButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnLButtonDown");

	UInventoryWnd_OnLButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnClickButton");

	UInventoryWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.SaveInventoryOrder
// (Final, Latent, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_SaveInventoryOrder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.SaveInventoryOrder");

	UInventoryWnd_SaveInventoryOrder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.InvenClear
// (Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_InvenClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.InvenClear");

	UInventoryWnd_InvenClear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.InvenDelete
// (PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               item                           (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_InvenDelete(const struct FItemInfo& item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.InvenDelete");

	UInventoryWnd_InvenDelete_Params params;
	params.item = item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.InvenAddItem
// (Latent, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               NewItem                        (Parm, NeedCtorLink)
// int                            ORDER                          (Parm)

void UInventoryWnd::STATIC_InvenAddItem(const struct FItemInfo& NewItem, int ORDER)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.InvenAddItem");

	UInventoryWnd_InvenAddItem_Params params;
	params.NewItem = NewItem;
	params.ORDER = ORDER;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.InvenLimitUpdate
// (Final, Iterator, Latent, PreOperator, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_InvenLimitUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.InvenLimitUpdate");

	UInventoryWnd_InvenLimitUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.IsArrow
// (Final, Defined, Iterator, Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               a_Info                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UInventoryWnd::STATIC_IsArrow(const struct FItemInfo& a_Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.IsArrow");

	UInventoryWnd_IsArrow_Params params;
	params.a_Info = a_Info;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.IsDecoItem
// (Final, Iterator, Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               a_Info                         (Parm, NeedCtorLink)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UInventoryWnd::STATIC_IsDecoItem(const struct FItemInfo& a_Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.IsDecoItem");

	UInventoryWnd_IsDecoItem_Params params;
	params.a_Info = a_Info;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.IsBowOrFishingRod
// (Defined, Iterator, Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               a_Info                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UInventoryWnd::STATIC_IsBowOrFishingRod(const struct FItemInfo& a_Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.IsBowOrFishingRod");

	UInventoryWnd_IsBowOrFishingRod_Params params;
	params.a_Info = a_Info;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.IsLOrRFinger
// (Final, Iterator, Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 sID                            (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UInventoryWnd::STATIC_IsLOrRFinger(const struct FItemID& sID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.IsLOrRFinger");

	UInventoryWnd_IsLOrRFinger_Params params;
	params.sID = sID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.IsLOrREar
// (Iterator, Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 sID                            (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UInventoryWnd::STATIC_IsLOrREar(const struct FItemID& sID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.IsLOrREar");

	UInventoryWnd_IsLOrREar_Params params;
	params.sID = sID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.IsShowInventoryWndUponEvent
// (Defined, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UInventoryWnd::STATIC_IsShowInventoryWndUponEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.IsShowInventoryWndUponEvent");

	UInventoryWnd_IsShowInventoryWndUponEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.HandleToggleWindow
// (Defined, Iterator, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_HandleToggleWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleToggleWindow");

	UInventoryWnd_HandleToggleWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleUpdateUserInfo
// (Iterator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_HandleUpdateUserInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleUpdateUserInfo");

	UInventoryWnd_HandleUpdateUserInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleDialogOK");

	UInventoryWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.SetItemCount
// (Iterator, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_SetItemCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.SetItemCount");

	UInventoryWnd_SetItemCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.GetMyInventoryLimit
// (Final, Defined, Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UInventoryWnd::STATIC_GetMyInventoryLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.GetMyInventoryLimit");

	UInventoryWnd_GetMyInventoryLimit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.UseItem
// (Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// class UItemWindowHandle*       a_hItemWindow                  (Parm)
// int                            Index                          (Parm)

void UInventoryWnd::STATIC_UseItem(class UItemWindowHandle* a_hItemWindow, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.UseItem");

	UInventoryWnd_UseItem_Params params;
	params.a_hItemWindow = a_hItemWindow;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.SetAdenaText
// (Final, Iterator, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_SetAdenaText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.SetAdenaText");

	UInventoryWnd_SetAdenaText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.UpdateHennaInfo
// (Iterator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_UpdateHennaInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.UpdateHennaInfo");

	UInventoryWnd_UpdateHennaInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleUpdateHennaInfo
// (Final, Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_HandleUpdateHennaInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleUpdateHennaInfo");

	UInventoryWnd_HandleUpdateHennaInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleAddHennaInfo
// (Final, Iterator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_HandleAddHennaInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleAddHennaInfo");

	UInventoryWnd_HandleAddHennaInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleItemListEnd
// (Defined, Iterator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_HandleItemListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleItemListEnd");

	UInventoryWnd_HandleItemListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleUpdateItem
// (Final, Defined, Iterator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_HandleUpdateItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleUpdateItem");

	UInventoryWnd_HandleUpdateItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_HandleAddItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleAddItem");

	UInventoryWnd_HandleAddItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleHideWindow
// (Latent, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_HandleHideWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleHideWindow");

	UInventoryWnd_HandleHideWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OpenWindow
// (Final, Defined, Latent, PreOperator, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_OpenWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OpenWindow");

	UInventoryWnd_OpenWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleOpenWindow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_HandleOpenWindow(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleOpenWindow");

	UInventoryWnd_HandleOpenWindow_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.EquipItemUpdate
// (Defined, Iterator, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               a_Info                         (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_EquipItemUpdate(const struct FItemInfo& a_Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.EquipItemUpdate");

	UInventoryWnd_EquipItemUpdate_Params params;
	params.a_Info = a_Info;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.FingerItemUpdate
// (Final, Defined, Iterator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_FingerItemUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.FingerItemUpdate");

	UInventoryWnd_FingerItemUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.EarItemUpdate
// (Defined, Iterator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_EarItemUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.EarItemUpdate");

	UInventoryWnd_EarItemUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.EquipItemDelete
// (Latent, PreOperator, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 sID                            (Parm)

void UInventoryWnd::STATIC_EquipItemDelete(const struct FItemID& sID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.EquipItemDelete");

	UInventoryWnd_EquipItemDelete_Params params;
	params.sID = sID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.EquipItemFind
// (Final, Defined, Latent, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 sID                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UInventoryWnd::STATIC_EquipItemFind(const struct FItemID& sID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.EquipItemFind");

	UInventoryWnd_EquipItemFind_Params params;
	params.sID = sID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.EquipItemClear
// (Iterator, Latent, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_EquipItemClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.EquipItemClear");

	UInventoryWnd_EquipItemClear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.EquipItemGetItemNum
// (Final, Iterator, Latent, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UInventoryWnd::STATIC_EquipItemGetItemNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.EquipItemGetItemNum");

	UInventoryWnd_EquipItemGetItemNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.HandleClear
// (PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_HandleClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleClear");

	UInventoryWnd_HandleClear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.IsQuestItem
// (Final, Defined, Iterator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               Info                           (Parm, OutParm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UInventoryWnd::STATIC_IsQuestItem(struct FItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.IsQuestItem");

	UInventoryWnd_IsQuestItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.IsEquipItem
// (Iterator, Singular, Net, NetReliable, Native, Operator, Static, Const)
// Parameters:
// struct FItemInfo               Info                           (Parm, OutParm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UInventoryWnd::STATIC_IsEquipItem(struct FItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.IsEquipItem");

	UInventoryWnd_IsEquipItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;

	return params.ReturnValue;
}


// Function Interface.InventoryWnd.OnDropItemSource
// (Final, Iterator, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strTarget                      (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_OnDropItemSource(const struct FString& strTarget, const struct FItemInfo& Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnDropItemSource");

	UInventoryWnd_OnDropItemSource_Params params;
	params.strTarget = strTarget;
	params.Info = Info;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strTarget                      (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UInventoryWnd::STATIC_OnDropItem(const struct FString& strTarget, const struct FItemInfo& Info, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnDropItem");

	UInventoryWnd_OnDropItem_Params params;
	params.strTarget = strTarget;
	params.Info = Info;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnSelectItemWithHandle
// (PreOperator, Operator, Static, Const)
// Parameters:
// class UItemWindowHandle*       a_hItemWindow                  (Parm)
// int                            a_Index                        (Parm)

void UInventoryWnd::STATIC_OnSelectItemWithHandle(class UItemWindowHandle* a_hItemWindow, int a_Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnSelectItemWithHandle");

	UInventoryWnd_OnSelectItemWithHandle_Params params;
	params.a_hItemWindow = a_hItemWindow;
	params.a_Index = a_Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnRClickItemWithHandle
// (Defined, PreOperator, Operator, Static, Const)
// Parameters:
// class UItemWindowHandle*       a_hItemWindow                  (Parm)
// int                            Index                          (Parm)

void UInventoryWnd::STATIC_OnRClickItemWithHandle(class UItemWindowHandle* a_hItemWindow, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnRClickItemWithHandle");

	UInventoryWnd_OnRClickItemWithHandle_Params params;
	params.a_hItemWindow = a_hItemWindow;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnDBClickItemWithHandle
// (Final, PreOperator, Operator, Static, Const)
// Parameters:
// class UItemWindowHandle*       a_hItemWindow                  (Parm)
// int                            Index                          (Parm)

void UInventoryWnd::STATIC_OnDBClickItemWithHandle(class UItemWindowHandle* a_hItemWindow, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnDBClickItemWithHandle");

	UInventoryWnd_OnDBClickItemWithHandle_Params params;
	params.a_hItemWindow = a_hItemWindow;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UInventoryWnd::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnExitState");

	UInventoryWnd_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PrevStateName                (Parm)

void UInventoryWnd::STATIC_OnEnterState(const struct FName& a_PrevStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnEnterState");

	UInventoryWnd_OnEnterState_Params params;
	params.a_PrevStateName = a_PrevStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.HandleRestart
// (Final, Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_HandleRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.HandleRestart");

	UInventoryWnd_HandleRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UInventoryWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnHide");

	UInventoryWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.CheckShowCrystallizeButton
// (Final, Iterator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_CheckShowCrystallizeButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.CheckShowCrystallizeButton");

	UInventoryWnd_CheckShowCrystallizeButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UInventoryWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnShow");

	UInventoryWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UInventoryWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnEvent");

	UInventoryWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.InitScrollBar
// (Final, Defined, Iterator, Latent, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_InitScrollBar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.InitScrollBar");

	UInventoryWnd_InitScrollBar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.InitHandleCOD");

	UInventoryWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInventoryWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.InitHandle");

	UInventoryWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UInventoryWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnLoad");

	UInventoryWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InventoryWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UInventoryWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InventoryWnd.OnRegisterEvent");

	UInventoryWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.GetSelectedJournalLevelID
// (Final, Defined, Iterator, Latent, PreOperator, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 CurrentSelectedNodeID          (Parm, NeedCtorLink)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UQuestTreeWnd::STATIC_GetSelectedJournalLevelID(const struct FString& CurrentSelectedNodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.GetSelectedJournalLevelID");

	UQuestTreeWnd_GetSelectedJournalLevelID_Params params;
	params.CurrentSelectedNodeID = CurrentSelectedNodeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.QuestTreeWnd.GetSelectedJournalQuestID
// (Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 CurrentSelectedNodeID          (Parm, NeedCtorLink)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UQuestTreeWnd::STATIC_GetSelectedJournalQuestID(const struct FString& CurrentSelectedNodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.GetSelectedJournalQuestID");

	UQuestTreeWnd_GetSelectedJournalQuestID_Params params;
	params.CurrentSelectedNodeID = CurrentSelectedNodeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.QuestTreeWnd.SetCurrentQuestJournalOnDrawerWnd
// (Final, Defined, Latent, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            QuestID                        (Parm)
// int                            QuestLevel                     (Parm)
// int                            Completed                      (Parm)

void UQuestTreeWnd::STATIC_SetCurrentQuestJournalOnDrawerWnd(int QuestID, int QuestLevel, int Completed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.SetCurrentQuestJournalOnDrawerWnd");

	UQuestTreeWnd_SetCurrentQuestJournalOnDrawerWnd_Params params;
	params.QuestID = QuestID;
	params.QuestLevel = QuestLevel;
	params.Completed = Completed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.InsertQuestTrackList
// (Defined, Singular, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_InsertQuestTrackList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.InsertQuestTrackList");

	UQuestTreeWnd_InsertQuestTrackList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.ProcInsertNode
// (Defined, Latent, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            QuestID                        (Parm)
// int                            Level                          (Parm)
// struct FString                 strParentName                  (Parm, NeedCtorLink)
// struct FXMLTreeNodeInfo        infNode                        (Parm, NeedCtorLink)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UQuestTreeWnd::STATIC_ProcInsertNode(int QuestID, int Level, const struct FString& strParentName, const struct FXMLTreeNodeInfo& infNode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.ProcInsertNode");

	UQuestTreeWnd_ProcInsertNode_Params params;
	params.QuestID = QuestID;
	params.Level = Level;
	params.strParentName = strParentName;
	params.infNode = infNode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.QuestTreeWnd.InsertNodeItem
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Exec, Native, Event, Static, Const)
// Parameters:
// int                            QuestID                        (Parm)
// int                            Level                          (Parm)
// struct FString                 strRetName                     (Parm, NeedCtorLink)
// struct FXMLTreeNodeItemInfo    infNodeItem                    (Parm, NeedCtorLink)

void UQuestTreeWnd::STATIC_InsertNodeItem(int QuestID, int Level, const struct FString& strRetName, const struct FXMLTreeNodeItemInfo& infNodeItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.InsertNodeItem");

	UQuestTreeWnd_InsertNodeItem_Params params;
	params.QuestID = QuestID;
	params.Level = Level;
	params.strRetName = strRetName;
	params.infNodeItem = infNodeItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.GetNodeInfo_Alarm
// (Final, Singular, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_GetNodeInfo_Alarm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.GetNodeInfo_Alarm");

	UQuestTreeWnd_GetNodeInfo_Alarm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.ButtonEnableCheck
// (Final, Defined, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_ButtonEnableCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.ButtonEnableCheck");

	UQuestTreeWnd_ButtonEnableCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.HandleDeleteAlarm
// (Final, Defined, Iterator, Latent, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_HandleDeleteAlarm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.HandleDeleteAlarm");

	UQuestTreeWnd_HandleDeleteAlarm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.HandleAddAlarm
// (Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_HandleAddAlarm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.HandleAddAlarm");

	UQuestTreeWnd_HandleAddAlarm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.HandleLanguageChanged
// (Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_HandleLanguageChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.HandleLanguageChanged");

	UQuestTreeWnd_HandleLanguageChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.InitQuestTooltip
// (Singular, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_InitQuestTooltip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.InitQuestTooltip");

	UQuestTreeWnd_InitQuestTooltip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.AddQuestInfo
// (Final, Latent, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strParentName                  (Parm, NeedCtorLink)
// int                            QuestID                        (Parm)
// int                            Level                          (Parm)
// int                            Completed                      (Parm)

void UQuestTreeWnd::STATIC_AddQuestInfo(const struct FString& strParentName, int QuestID, int Level, int Completed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.AddQuestInfo");

	UQuestTreeWnd_AddQuestInfo_Params params;
	params.strParentName = strParentName;
	params.QuestID = QuestID;
	params.Level = Level;
	params.Completed = Completed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.HandleQuestCancel
// (Defined, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_HandleQuestCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.HandleQuestCancel");

	UQuestTreeWnd_HandleQuestCancel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.GetExpandedNode
// (NetReliable, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UQuestTreeWnd::STATIC_GetExpandedNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.GetExpandedNode");

	UQuestTreeWnd_GetExpandedNode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.QuestTreeWnd.SetQuestOff
// (Iterator, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_SetQuestOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.SetQuestOff");

	UQuestTreeWnd_SetQuestOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.UpdateTargetInfo
// (Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_UpdateTargetInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.UpdateTargetInfo");

	UQuestTreeWnd_UpdateTargetInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.UpdateQuestCount
// (Final, Defined, Iterator, Latent, PreOperator, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_UpdateQuestCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.UpdateQuestCount");

	UQuestTreeWnd_UpdateQuestCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.UpdateItemCountWhenAdd
// (Final, Defined, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ClassID                        (Parm)

void UQuestTreeWnd::STATIC_UpdateItemCountWhenAdd(int ClassID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.UpdateItemCountWhenAdd");

	UQuestTreeWnd_UpdateItemCountWhenAdd_Params params;
	params.ClassID = ClassID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.UpdateItemCount
// (Defined, Latent, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            ClassID                        (Parm)
// struct FINT64                  a_ItemCount                    (OptionalParm, Parm)

void UQuestTreeWnd::STATIC_UpdateItemCount(int ClassID, const struct FINT64& a_ItemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.UpdateItemCount");

	UQuestTreeWnd_UpdateItemCount_Params params;
	params.ClassID = ClassID;
	params.a_ItemCount = a_ItemCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.HandleQuestSetCurrentIDfromMiniMap
// (Iterator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            QuestID                        (Parm)
// int                            Level                          (Parm)

void UQuestTreeWnd::STATIC_HandleQuestSetCurrentIDfromMiniMap(int QuestID, int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.HandleQuestSetCurrentIDfromMiniMap");

	UQuestTreeWnd_HandleQuestSetCurrentIDfromMiniMap_Params params;
	params.QuestID = QuestID;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.HandleQuestSetCurrentID
// (Final, Iterator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UQuestTreeWnd::STATIC_HandleQuestSetCurrentID(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.HandleQuestSetCurrentID");

	UQuestTreeWnd_HandleQuestSetCurrentID_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UQuestTreeWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.OnEvent");

	UQuestTreeWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.HandleQuestListEnd
// (Defined, Iterator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_HandleQuestListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.HandleQuestListEnd");

	UQuestTreeWnd_HandleQuestListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.HandleQuestList
// (Latent, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UQuestTreeWnd::STATIC_HandleQuestList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.HandleQuestList");

	UQuestTreeWnd_HandleQuestList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.HandleQuestListStart
// (Iterator, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_HandleQuestListStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.HandleQuestListStart");

	UQuestTreeWnd_HandleQuestListStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.InitTree
// (Final, Latent, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_InitTree()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.InitTree");

	UQuestTreeWnd_InitTree_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.ShowQuestList
// (Final, Defined, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UQuestTreeWnd::STATIC_ShowQuestList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.ShowQuestList");

	UQuestTreeWnd_ShowQuestList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UQuestTreeWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.Clear");

	UQuestTreeWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.OnClickCheckBox
// (Final, Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UQuestTreeWnd::STATIC_OnClickCheckBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.OnClickCheckBox");

	UQuestTreeWnd_OnClickCheckBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.GetCurrentJournalID
// (Final, Defined, Latent, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UQuestTreeWnd::STATIC_GetCurrentJournalID(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.GetCurrentJournalID");

	UQuestTreeWnd_GetCurrentJournalID_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UQuestTreeWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.OnClickButton");

	UQuestTreeWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UQuestTreeWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.OnHide");

	UQuestTreeWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UQuestTreeWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.OnShow");

	UQuestTreeWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.OnDefaultPosition
// (Defined, Iterator, PreOperator, Singular, Operator, Static, Const)

void UQuestTreeWnd::STATIC_OnDefaultPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.OnDefaultPosition");

	UQuestTreeWnd_OnDefaultPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UQuestTreeWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.OnLoad");

	UQuestTreeWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UQuestTreeWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeWnd.OnRegisterEvent");

	UQuestTreeWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.QuestItemSlotIdx
// (Final, Defined, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            QuestIdx                       (Parm)
// int                            ItemID                         (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UQuestAlarmWnd::STATIC_QuestItemSlotIdx(int QuestIdx, int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.QuestItemSlotIdx");

	UQuestAlarmWnd_QuestItemSlotIdx_Params params;
	params.QuestIdx = QuestIdx;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.QuestAlarmWnd.FindEmptyItemSlot
// (Iterator, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            QuestIdx                       (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UQuestAlarmWnd::STATIC_FindEmptyItemSlot(int QuestIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.FindEmptyItemSlot");

	UQuestAlarmWnd_FindEmptyItemSlot_Params params;
	params.QuestIdx = QuestIdx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.QuestAlarmWnd.QuestSlotIdx
// (Final, Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            QuestID                        (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UQuestAlarmWnd::STATIC_QuestSlotIdx(int QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.QuestSlotIdx");

	UQuestAlarmWnd_QuestSlotIdx_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.QuestAlarmWnd.FindEmptyQuestSlot
// (Final, Iterator, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UQuestAlarmWnd::STATIC_FindEmptyQuestSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.FindEmptyQuestSlot");

	UQuestAlarmWnd_FindEmptyQuestSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.QuestAlarmWnd.UpdateAlarmItem
// (Defined, Iterator, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ItemID                         (Parm)
// struct FINT64                  Count                          (Parm)

void UQuestAlarmWnd::STATIC_UpdateAlarmItem(int ItemID, const struct FINT64& Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.UpdateAlarmItem");

	UQuestAlarmWnd_UpdateAlarmItem_Params params;
	params.ItemID = ItemID;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.DeleteQuestAlarm
// (Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            QuestID                        (Parm)

void UQuestAlarmWnd::STATIC_DeleteQuestAlarm(int QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.DeleteQuestAlarm");

	UQuestAlarmWnd_DeleteQuestAlarm_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.AddQuestAlarm
// (Defined, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            QuestID                        (Parm)
// int                            Level                          (Parm)
// int                            ItemID                         (Parm)
// struct FINT64                  ItemNum                        (Parm)

void UQuestAlarmWnd::STATIC_AddQuestAlarm(int QuestID, int Level, int ItemID, const struct FINT64& ItemNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.AddQuestAlarm");

	UQuestAlarmWnd_AddQuestAlarm_Params params;
	params.QuestID = QuestID;
	params.Level = Level;
	params.ItemID = ItemID;
	params.ItemNum = ItemNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.FitWindowSize
// (Final, Defined, Iterator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UQuestAlarmWnd::STATIC_FitWindowSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.FitWindowSize");

	UQuestAlarmWnd_FitWindowSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.ContractWindowSize
// (Latent, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)

void UQuestAlarmWnd::STATIC_ContractWindowSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.ContractWindowSize");

	UQuestAlarmWnd_ContractWindowSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.ExpendWindowSize
// (Final, Latent, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)

void UQuestAlarmWnd::STATIC_ExpendWindowSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.ExpendWindowSize");

	UQuestAlarmWnd_ExpendWindowSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.OnbtnCloseClick
// (Defined, Iterator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UQuestAlarmWnd::STATIC_OnbtnCloseClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.OnbtnCloseClick");

	UQuestAlarmWnd_OnbtnCloseClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UQuestAlarmWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.OnClickButton");

	UQuestAlarmWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UQuestAlarmWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.OnTimer");

	UQuestAlarmWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UQuestAlarmWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.OnEvent");

	UQuestAlarmWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.InitData
// (Final, Iterator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UQuestAlarmWnd::STATIC_InitData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.InitData");

	UQuestAlarmWnd_InitData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UQuestAlarmWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.Load");

	UQuestAlarmWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UQuestAlarmWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.InitializeCOD");

	UQuestAlarmWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UQuestAlarmWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.Initialize");

	UQuestAlarmWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UQuestAlarmWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.OnLoad");

	UQuestAlarmWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestAlarmWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UQuestAlarmWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestAlarmWnd.OnRegisterEvent");

	UQuestAlarmWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.GetContinent
// (Defined, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FVector                 Loc                            (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UMinimapWnd::STATIC_GetContinent(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.GetContinent");

	UMinimapWnd_GetContinent_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MinimapWnd.SetLocContinent
// (PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FVector                 Loc                            (Parm)

void UMinimapWnd::STATIC_SetLocContinent(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.SetLocContinent");

	UMinimapWnd_SetLocContinent_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.SetContinent
// (Defined, Latent, Singular, Net, Exec, Operator, Static, Const)
// Parameters:
// int                            Continent                      (Parm)

void UMinimapWnd::STATIC_SetContinent(int Continent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.SetContinent");

	UMinimapWnd_SetContinent_Params params;
	params.Continent = Continent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.DrawCleftStatus
// (Defined, Iterator, Latent, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_DrawCleftStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.DrawCleftStatus");

	UMinimapWnd_DrawCleftStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleDominionsOwnPos
// (Final, Iterator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleDominionsOwnPos(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleDominionsOwnPos");

	UMinimapWnd_HandleDominionsOwnPos_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.InitializeLocation
// (Final, Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_InitializeLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.InitializeLocation");

	UMinimapWnd_InitializeLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.DrawMapMainInfo
// (Defined, Iterator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnInt                      (Parm)

void UMinimapWnd::STATIC_DrawMapMainInfo(int ReturnInt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.DrawMapMainInfo");

	UMinimapWnd_DrawMapMainInfo_Params params;
	params.ReturnInt = ReturnInt;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.DrawMapAfterBarrack
// (Final, Defined, Iterator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnInt                      (Parm)

void UMinimapWnd::STATIC_DrawMapAfterBarrack(int ReturnInt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.DrawMapAfterBarrack");

	UMinimapWnd_DrawMapAfterBarrack_Params params;
	params.ReturnInt = ReturnInt;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.DrawMapBasicInfo
// (Iterator, Latent, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnInt                      (Parm)

void UMinimapWnd::STATIC_DrawMapBasicInfo(int ReturnInt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.DrawMapBasicInfo");

	UMinimapWnd_DrawMapBasicInfo_Params params;
	params.ReturnInt = ReturnInt;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.BarrackID2Int
// (Final, Defined, Latent, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            FortressID                     (Parm)
// int                            BarrackID                      (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UMinimapWnd::STATIC_BarrackID2Int(int FortressID, int BarrackID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.BarrackID2Int");

	UMinimapWnd_BarrackID2Int_Params params;
	params.FortressID = FortressID;
	params.BarrackID = BarrackID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MinimapWnd.BarrackID2Text
// (Defined, Latent, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            FortressID                     (Parm)
// int                            BarrackID                      (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UMinimapWnd::STATIC_BarrackID2Text(int FortressID, int BarrackID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.BarrackID2Text");

	UMinimapWnd_BarrackID2Text_Params params;
	params.FortressID = FortressID;
	params.BarrackID = BarrackID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MinimapWnd.BarrackID2YLoc
// (Final, Defined, Latent, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            FortressID                     (Parm)
// int                            BarrackID                      (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UMinimapWnd::STATIC_BarrackID2YLoc(int FortressID, int BarrackID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.BarrackID2YLoc");

	UMinimapWnd_BarrackID2YLoc_Params params;
	params.FortressID = FortressID;
	params.BarrackID = BarrackID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MinimapWnd.BarrackID2XLoc
// (Iterator, Latent, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            FortressID                     (Parm)
// int                            BarrackID                      (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UMinimapWnd::STATIC_BarrackID2XLoc(int FortressID, int BarrackID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.BarrackID2XLoc");

	UMinimapWnd_BarrackID2XLoc_Params params;
	params.FortressID = FortressID;
	params.BarrackID = BarrackID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MinimapWnd.HandleFortressMapBarrackInfo
// (Final, Iterator, Latent, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleFortressMapBarrackInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleFortressMapBarrackInfo");

	UMinimapWnd_HandleFortressMapBarrackInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleShowFortressMapInfo
// (Defined, Iterator, Latent, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleShowFortressMapInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleShowFortressMapInfo");

	UMinimapWnd_HandleShowFortressMapInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.DrawPeaceStatusFortressSiegeStatus
// (Final, Defined, Iterator, Latent, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_DrawPeaceStatusFortressSiegeStatus(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.DrawPeaceStatusFortressSiegeStatus");

	UMinimapWnd_DrawPeaceStatusFortressSiegeStatus_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.SelectSunOrMoon
// (Final, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            GameHour                       (Parm)

void UMinimapWnd::STATIC_SelectSunOrMoon(int GameHour)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.SelectSunOrMoon");

	UMinimapWnd_SelectSunOrMoon_Params params;
	params.GameHour = GameHour;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleMinimapTravel
// (PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleMinimapTravel(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleMinimapTravel");

	UMinimapWnd_HandleMinimapTravel_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleUpdateGameTime
// (Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleUpdateGameTime(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleUpdateGameTime");

	UMinimapWnd_HandleUpdateGameTime_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.DrawCursedWeapon
// (Final, Iterator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 WindowName                     (Parm, NeedCtorLink)
// int                            ItemID                         (Parm)
// struct FString                 cursedName                     (Parm, NeedCtorLink)
// struct FVector                 vecLoc                         (Parm)
// bool                           bDropped                       (Parm)
// bool                           bRefresh                       (Parm)

void UMinimapWnd::STATIC_DrawCursedWeapon(const struct FString& WindowName, int ItemID, const struct FString& cursedName, const struct FVector& vecLoc, bool bDropped, bool bRefresh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.DrawCursedWeapon");

	UMinimapWnd_DrawCursedWeapon_Params params;
	params.WindowName = WindowName;
	params.ItemID = ItemID;
	params.cursedName = cursedName;
	params.vecLoc = vecLoc;
	params.bDropped = bDropped;
	params.bRefresh = bRefresh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleCursedWeaponLoctaion
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleCursedWeaponLoctaion(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleCursedWeaponLoctaion");

	UMinimapWnd_HandleCursedWeaponLoctaion_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleCursedWeaponList
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleCursedWeaponList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleCursedWeaponList");

	UMinimapWnd_HandleCursedWeaponList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.OnClickPartyLocButton
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_OnClickPartyLocButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.OnClickPartyLocButton");

	UMinimapWnd_OnClickPartyLocButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.AdjustMapToPlayerPosition
// (Latent, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           a_ZoomToTownMap                (Parm)

void UMinimapWnd::STATIC_AdjustMapToPlayerPosition(bool a_ZoomToTownMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.AdjustMapToPlayerPosition");

	UMinimapWnd_AdjustMapToPlayerPosition_Params params;
	params.a_ZoomToTownMap = a_ZoomToTownMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.OnClickMyLocButton
// (Final, Latent, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_OnClickMyLocButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.OnClickMyLocButton");

	UMinimapWnd_OnClickMyLocButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.OnClickTargetButton
// (Final, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_OnClickTargetButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.OnClickTargetButton");

	UMinimapWnd_OnClickTargetButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.OnClickReduceButton
// (Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_OnClickReduceButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.OnClickReduceButton");

	UMinimapWnd_OnClickReduceButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_ButtonID                     (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_OnClickButton(const struct FString& a_ButtonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.OnClickButton");

	UMinimapWnd_OnClickButton_Params params;
	params.a_ButtonID = a_ButtonID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleMinimapHideQuest
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_HandleMinimapHideQuest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleMinimapHideQuest");

	UMinimapWnd_HandleMinimapHideQuest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleMinimapShowQuest
// (Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_HandleMinimapShowQuest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleMinimapShowQuest");

	UMinimapWnd_HandleMinimapShowQuest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleMinimapDeleteAllTarget
// (Final, Defined, Iterator, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_HandleMinimapDeleteAllTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleMinimapDeleteAllTarget");

	UMinimapWnd_HandleMinimapDeleteAllTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleMinimapDeleteTarget
// (Defined, Iterator, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleMinimapDeleteTarget(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleMinimapDeleteTarget");

	UMinimapWnd_HandleMinimapDeleteTarget_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleMinimapAddTarget
// (Final, Iterator, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleMinimapAddTarget(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleMinimapAddTarget");

	UMinimapWnd_HandleMinimapAddTarget_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleShowMinimap
// (Final, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleShowMinimap(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleShowMinimap");

	UMinimapWnd_HandleShowMinimap_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.IsExpandState
// (Defined, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UMinimapWnd::STATIC_IsExpandState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.IsExpandState");

	UMinimapWnd_IsExpandState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MinimapWnd.SetExpandState
// (Final, Latent, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bExpandState                   (Parm)

void UMinimapWnd::STATIC_SetExpandState(bool bExpandState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.SetExpandState");

	UMinimapWnd_SetExpandState_Params params;
	params.bExpandState = bExpandState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandlePartyMemberChanged
// (Iterator, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandlePartyMemberChanged(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandlePartyMemberChanged");

	UMinimapWnd_HandlePartyMemberChanged_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMinimapWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.OnHide");

	UMinimapWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.SetCurrentLocation
// (Iterator, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_SetCurrentLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.SetCurrentLocation");

	UMinimapWnd_SetCurrentLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.SetSSQTypeText
// (Final, Defined, Iterator, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_SetSSQTypeText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.SetSSQTypeText");

	UMinimapWnd_SetSSQTypeText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.ContinentLoc
// (Iterator, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_ContinentLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.ContinentLoc");

	UMinimapWnd_ContinentLoc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMinimapWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.OnShow");

	UMinimapWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.FilterDungeonMap
// (Final, Defined, PreOperator, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_FilterDungeonMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.FilterDungeonMap");

	UMinimapWnd_FilterDungeonMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleDungeonMapRefresh
// (Final, Iterator, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleDungeonMapRefresh(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleDungeonMapRefresh");

	UMinimapWnd_HandleDungeonMapRefresh_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleZoneTitle
// (Final, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_HandleZoneTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleZoneTitle");

	UMinimapWnd_HandleZoneTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleChatmessage
// (Final, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleChatmessage(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleChatmessage");

	UMinimapWnd_HandleChatmessage_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleSeedMapInfo
// (Defined, Iterator, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_HandleSeedMapInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleSeedMapInfo");

	UMinimapWnd_HandleSeedMapInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.DrawDominionTarget
// (Defined, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_DrawDominionTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.DrawDominionTarget");

	UMinimapWnd_DrawDominionTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleDominionWarEnd
// (Final, Defined, Iterator, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_HandleDominionWarEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleDominionWarEnd");

	UMinimapWnd_HandleDominionWarEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.HandleDominionWarStart
// (Latent, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_HandleDominionWarStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.HandleDominionWarStart");

	UMinimapWnd_HandleDominionWarStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.OnEvent");

	UMinimapWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMinimapWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.OnLoad");

	UMinimapWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMinimapWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.OnRegisterEvent");

	UMinimapWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.GetLocData
// (Final, Latent, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd::STATIC_GetLocData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.GetLocData");

	UMinimapWnd_GetLocData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.IsHideMinimapZone_new
// (Defined, Latent, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            nZoneID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UMinimapWnd::STATIC_IsHideMinimapZone_new(int nZoneID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.IsHideMinimapZone_new");

	UMinimapWnd_IsHideMinimapZone_new_Params params;
	params.nZoneID = nZoneID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MinimapWnd.IsHideMinimapZone
// (Final, Defined, Latent, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            nZoneID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UMinimapWnd::STATIC_IsHideMinimapZone(int nZoneID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.IsHideMinimapZone");

	UMinimapWnd_IsHideMinimapZone_Params params;
	params.nZoneID = nZoneID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MinimapWnd.ExecuteFortressSiegeStatus
// (Final, Defined, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd::STATIC_ExecuteFortressSiegeStatus(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.ExecuteFortressSiegeStatus");

	UMinimapWnd_ExecuteFortressSiegeStatus_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd.FortressID2ZoneNameID
// (PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            LocalID                        (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UMinimapWnd::STATIC_FortressID2ZoneNameID(int LocalID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd.FortressID2ZoneNameID");

	UMinimapWnd_FortressID2ZoneNameID_Params params;
	params.LocalID = LocalID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShopWnd.HandleOKButton
// (Final, Defined, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShopWnd::STATIC_HandleOKButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.HandleOKButton");

	UShopWnd_HandleOKButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.AddPrice
// (Final, Defined, Iterator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  Price                          (Parm)

void UShopWnd::STATIC_AddPrice(const struct FINT64& Price)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.AddPrice");

	UShopWnd_AddPrice_Params params;
	params.Price = Price;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UShopWnd::STATIC_HandleAddItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.HandleAddItem");

	UShopWnd_HandleAddItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.HandleOpenWindow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UShopWnd::STATIC_HandleOpenWindow(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.HandleOpenWindow");

	UShopWnd_HandleOpenWindow_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShopWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.HandleDialogOK");

	UShopWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.MoveItemBottomToTop
// (Final, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// bool                           bAllItem                       (Parm)

void UShopWnd::STATIC_MoveItemBottomToTop(int Index, bool bAllItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.MoveItemBottomToTop");

	UShopWnd_MoveItemBottomToTop_Params params;
	params.Index = Index;
	params.bAllItem = bAllItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.MoveItemTopToBottom
// (Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// bool                           bAllItem                       (Parm)

void UShopWnd::STATIC_MoveItemTopToBottom(int Index, bool bAllItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.MoveItemTopToBottom");

	UShopWnd_MoveItemTopToBottom_Params params;
	params.Index = Index;
	params.bAllItem = bAllItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UShopWnd::STATIC_OnDropItem(const struct FString& strID, const struct FItemInfo& Info, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.OnDropItem");

	UShopWnd_OnDropItem_Params params;
	params.strID = strID;
	params.Info = Info;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.OnDBClickItem
// (Final, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UShopWnd::STATIC_OnDBClickItem(const struct FString& ControlName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.OnDBClickItem");

	UShopWnd_OnDBClickItem_Params params;
	params.ControlName = ControlName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)

void UShopWnd::STATIC_OnClickButton(const struct FString& ControlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.OnClickButton");

	UShopWnd_OnClickButton_Params params;
	params.ControlName = ControlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UShopWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.OnEvent");

	UShopWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UShopWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.Clear");

	UShopWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UShopWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.OnLoad");

	UShopWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShopWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UShopWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShopWnd.OnRegisterEvent");

	UShopWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.UpdateSkillMsg
// (Defined, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchObserverWnd::STATIC_UpdateSkillMsg()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.UpdateSkillMsg");

	UEventMatchObserverWnd_UpdateSkillMsg_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.AddSkillMsg
// (Final, Defined, Latent, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_AttackerTeamID               (Parm)
// int                            a_AttackerUserID               (Parm)
// struct FString                 a_AttackerName                 (Parm, NeedCtorLink)
// int                            a_DefenderTeamID               (Parm)
// int                            a_DefenderUserID               (Parm)
// struct FString                 a_DefenderName                 (Parm, NeedCtorLink)
// struct FString                 a_SkillName                    (Parm, NeedCtorLink)

void UEventMatchObserverWnd::STATIC_AddSkillMsg(int a_AttackerTeamID, int a_AttackerUserID, const struct FString& a_AttackerName, int a_DefenderTeamID, int a_DefenderUserID, const struct FString& a_DefenderName, const struct FString& a_SkillName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.AddSkillMsg");

	UEventMatchObserverWnd_AddSkillMsg_Params params;
	params.a_AttackerTeamID = a_AttackerTeamID;
	params.a_AttackerUserID = a_AttackerUserID;
	params.a_AttackerName = a_AttackerName;
	params.a_DefenderTeamID = a_DefenderTeamID;
	params.a_DefenderUserID = a_DefenderUserID;
	params.a_DefenderName = a_DefenderName;
	params.a_SkillName = a_SkillName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.GetTeamUserID
// (Final, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_UserClassID                  (Parm)
// int                            a_TeamID                       (Parm, OutParm)
// int                            a_UserID                       (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UEventMatchObserverWnd::STATIC_GetTeamUserID(int a_UserClassID, int* a_TeamID, int* a_UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.GetTeamUserID");

	UEventMatchObserverWnd_GetTeamUserID_Params params;
	params.a_UserClassID = a_UserClassID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (a_TeamID != nullptr)
		*a_TeamID = params.a_TeamID;
	if (a_UserID != nullptr)
		*a_UserID = params.a_UserID;

	return params.ReturnValue;
}


// Function Interface.EventMatchObserverWnd.ClearMsg
// (Final, Iterator, Latent, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UEventMatchObserverWnd::STATIC_ClearMsg()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.ClearMsg");

	UEventMatchObserverWnd_ClearMsg_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.IsSelectedUser
// (Defined, Iterator, Latent, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_TeamID                       (Parm)
// int                            a_UserID                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UEventMatchObserverWnd::STATIC_IsSelectedUser(int a_TeamID, int a_UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.IsSelectedUser");

	UEventMatchObserverWnd_IsSelectedUser_Params params;
	params.a_TeamID = a_TeamID;
	params.a_UserID = a_UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.EventMatchObserverWnd.SetSelectedUser
// (Final, Latent, Exec, Operator, Static, Const)
// Parameters:
// int                            a_TeamID                       (Parm)
// int                            a_UserID                       (Parm)

void UEventMatchObserverWnd::STATIC_SetSelectedUser(int a_TeamID, int a_UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.SetSelectedUser");

	UEventMatchObserverWnd_SetSelectedUser_Params params;
	params.a_TeamID = a_TeamID;
	params.a_UserID = a_UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.UpdateUserInfo
// (Final, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_TeamID                       (Parm)
// int                            a_UserID                       (Parm)

void UEventMatchObserverWnd::STATIC_UpdateUserInfo(int a_TeamID, int a_UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.UpdateUserInfo");

	UEventMatchObserverWnd_UpdateUserInfo_Params params;
	params.a_TeamID = a_TeamID;
	params.a_UserID = a_UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.UpdateScore
// (Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchObserverWnd::STATIC_UpdateScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.UpdateScore");

	UEventMatchObserverWnd_UpdateScore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.UpdateTeamInfo
// (Iterator, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_TeamID                       (Parm)

void UEventMatchObserverWnd::STATIC_UpdateTeamInfo(int a_TeamID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.UpdateTeamInfo");

	UEventMatchObserverWnd_UpdateTeamInfo_Params params;
	params.a_TeamID = a_TeamID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.UpdateTeamName
// (Final, Defined, Iterator, Latent, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchObserverWnd::STATIC_UpdateTeamName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.UpdateTeamName");

	UEventMatchObserverWnd_UpdateTeamName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.RefreshClassOrName
// (Defined, Iterator, Latent, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchObserverWnd::STATIC_RefreshClassOrName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.RefreshClassOrName");

	UEventMatchObserverWnd_RefreshClassOrName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.HandleShortcutCommand
// (Final, Iterator, PreOperator, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchObserverWnd::STATIC_HandleShortcutCommand(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.HandleShortcutCommand");

	UEventMatchObserverWnd_HandleShortcutCommand_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.HandleReceiveMagicSkillUse
// (Defined, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchObserverWnd::STATIC_HandleReceiveMagicSkillUse(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.HandleReceiveMagicSkillUse");

	UEventMatchObserverWnd_HandleReceiveMagicSkillUse_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.HandleEventMatchUpdateUserInfo
// (Final, Defined, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchObserverWnd::STATIC_HandleEventMatchUpdateUserInfo(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.HandleEventMatchUpdateUserInfo");

	UEventMatchObserverWnd_HandleEventMatchUpdateUserInfo_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.HandleEventMatchUpdateTeamInfo
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchObserverWnd::STATIC_HandleEventMatchUpdateTeamInfo(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.HandleEventMatchUpdateTeamInfo");

	UEventMatchObserverWnd_HandleEventMatchUpdateTeamInfo_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.HandleStartEventMatchObserver
// (Iterator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchObserverWnd::STATIC_HandleStartEventMatchObserver(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.HandleStartEventMatchObserver");

	UEventMatchObserverWnd_HandleStartEventMatchObserver_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.OnLButtonDown
// (Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UEventMatchObserverWnd::STATIC_OnLButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.OnLButtonDown");

	UEventMatchObserverWnd_OnLButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_TimerID                      (Parm)

void UEventMatchObserverWnd::STATIC_OnTimer(int a_TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.OnTimer");

	UEventMatchObserverWnd_OnTimer_Params params;
	params.a_TimerID = a_TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchObserverWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.OnEvent");

	UEventMatchObserverWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UEventMatchObserverWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.OnEnterState");

	UEventMatchObserverWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchObserverWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.InitHandleCOD");

	UEventMatchObserverWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchObserverWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.InitHandle");

	UEventMatchObserverWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UEventMatchObserverWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.OnLoad");

	UEventMatchObserverWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchObserverWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UEventMatchObserverWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchObserverWnd.OnRegisterEvent");

	UEventMatchObserverWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.RunUnTransformManage
// (Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UDetailStatusWnd::STATIC_RunUnTransformManage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.RunUnTransformManage");

	UDetailStatusWnd_RunUnTransformManage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.RunTransformManage
// (Iterator, Latent, Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UDetailStatusWnd::STATIC_RunTransformManage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.RunTransformManage");

	UDetailStatusWnd_RunTransformManage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.UpdateVp
// (Defined, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Vitality                       (Parm)

void UDetailStatusWnd::STATIC_UpdateVp(int Vitality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.UpdateVp");

	UDetailStatusWnd_UpdateVp_Params params;
	params.Vitality = Vitality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.HandleVitalityPointInfo
// (Final, Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDetailStatusWnd::STATIC_HandleVitalityPointInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.HandleVitalityPointInfo");

	UDetailStatusWnd_HandleVitalityPointInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.OnKeyDown
// (Iterator, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// TEnumAsByte<EInputKey>         nKey                           (Parm)

void UDetailStatusWnd::STATIC_OnKeyDown(class UWindowHandle* a_WindowHandle, TEnumAsByte<EInputKey> nKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.OnKeyDown");

	UDetailStatusWnd_OnKeyDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.nKey = nKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.ToggleOpenCharInfoWnd
// (Latent, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UDetailStatusWnd::STATIC_ToggleOpenCharInfoWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.ToggleOpenCharInfoWnd");

	UDetailStatusWnd_ToggleOpenCharInfoWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.UpdateCPBar
// (Final, Defined, Iterator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Value                          (Parm)
// int                            MaxValue                       (Parm)

void UDetailStatusWnd::STATIC_UpdateCPBar(int Value, int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.UpdateCPBar");

	UDetailStatusWnd_UpdateCPBar_Params params;
	params.Value = Value;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.UpdateEXPBar
// (Defined, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  Value                          (Parm)
// int                            Level                          (Parm)

void UDetailStatusWnd::STATIC_UpdateEXPBar(const struct FINT64& Value, int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.UpdateEXPBar");

	UDetailStatusWnd_UpdateEXPBar_Params params;
	params.Value = Value;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.UpdateMPBar
// (Defined, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Value                          (Parm)
// int                            MaxValue                       (Parm)

void UDetailStatusWnd::STATIC_UpdateMPBar(int Value, int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.UpdateMPBar");

	UDetailStatusWnd_UpdateMPBar_Params params;
	params.Value = Value;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.UpdateHPBar
// (Final, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Value                          (Parm)
// int                            MaxValue                       (Parm)

void UDetailStatusWnd::STATIC_UpdateHPBar(int Value, int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.UpdateHPBar");

	UDetailStatusWnd_UpdateHPBar_Params params;
	params.Value = Value;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.UpdateInterface
// (Iterator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UDetailStatusWnd::STATIC_UpdateInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.UpdateInterface");

	UDetailStatusWnd_UpdateInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.HandleUpdateUserInfo
// (Iterator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDetailStatusWnd::STATIC_HandleUpdateUserInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.HandleUpdateUserInfo");

	UDetailStatusWnd_HandleUpdateUserInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.HandleUpdateUserGauge
// (Final, Iterator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            type                           (Parm)

void UDetailStatusWnd::STATIC_HandleUpdateUserGauge(int type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.HandleUpdateUserGauge");

	UDetailStatusWnd_HandleUpdateUserGauge_Params params;
	params.type = type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.GetMyExpRate
// (Final, Defined, Iterator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ReturnParm)

float UDetailStatusWnd::STATIC_GetMyExpRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.GetMyExpRate");

	UDetailStatusWnd_GetMyExpRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.DetailStatusWnd.GetMovingSpeed
// (Defined, Iterator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FUserInfo               a_UserInfo                     (Parm, NeedCtorLink)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UDetailStatusWnd::STATIC_GetMovingSpeed(const struct FUserInfo& a_UserInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.GetMovingSpeed");

	UDetailStatusWnd_GetMovingSpeed_Params params;
	params.a_UserInfo = a_UserInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.DetailStatusWnd.GetMyUserInfo
// (Defined, Iterator, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FUserInfo               a_MyUserInfo                   (Parm, OutParm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UDetailStatusWnd::STATIC_GetMyUserInfo(struct FUserInfo* a_MyUserInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.GetMyUserInfo");

	UDetailStatusWnd_GetMyUserInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (a_MyUserInfo != nullptr)
		*a_MyUserInfo = params.a_MyUserInfo;

	return params.ReturnValue;
}


// Function Interface.DetailStatusWnd.HandleUpdateHennaInfo
// (Final, Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDetailStatusWnd::STATIC_HandleUpdateHennaInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.HandleUpdateHennaInfo");

	UDetailStatusWnd_HandleUpdateHennaInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.HandleUpdateStatusGauge
// (Iterator, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// int                            type                           (Parm)

void UDetailStatusWnd::STATIC_HandleUpdateStatusGauge(const struct FString& param, int type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.HandleUpdateStatusGauge");

	UDetailStatusWnd_HandleUpdateStatusGauge_Params params;
	params.param = param;
	params.type = type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.HandleToggle
// (Latent, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UDetailStatusWnd::STATIC_HandleToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.HandleToggle");

	UDetailStatusWnd_HandleToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UDetailStatusWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.OnEvent");

	UDetailStatusWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UDetailStatusWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.OnShow");

	UDetailStatusWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UDetailStatusWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.OnEnterState");

	UDetailStatusWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDetailStatusWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.InitializeCOD");

	UDetailStatusWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UDetailStatusWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.Initialize");

	UDetailStatusWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UDetailStatusWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.OnLoad");

	UDetailStatusWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DetailStatusWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UDetailStatusWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DetailStatusWnd.OnRegisterEvent");

	UDetailStatusWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantInfoWnd.AddSkillEnchantInfoExtend
// (Final, Defined, Iterator, Latent, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strIconName                    (Parm, NeedCtorLink)
// struct FString                 strName                        (Parm, NeedCtorLink)
// struct FINT64                  iNumOfItem                     (Parm)

void USkillEnchantInfoWnd::STATIC_AddSkillEnchantInfoExtend(const struct FString& strIconName, const struct FString& strName, const struct FINT64& iNumOfItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantInfoWnd.AddSkillEnchantInfoExtend");

	USkillEnchantInfoWnd_AddSkillEnchantInfoExtend_Params params;
	params.strIconName = strIconName;
	params.strName = strName;
	params.iNumOfItem = iNumOfItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantInfoWnd.InsertNodeItem
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 strNodeName                    (Parm, NeedCtorLink)
// struct FXMLTreeNodeItemInfo    infNodeItemName                (Parm, NeedCtorLink)

void USkillEnchantInfoWnd::STATIC_InsertNodeItem(const struct FString& strNodeName, const struct FXMLTreeNodeItemInfo& infNodeItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantInfoWnd.InsertNodeItem");

	USkillEnchantInfoWnd_InsertNodeItem_Params params;
	params.strNodeName = strNodeName;
	params.infNodeItemName = infNodeItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantInfoWnd.ClearDetailInfo
// (Final, Defined, Iterator, Latent, Net, Operator, Static, HasOptionalParms, Const)

void USkillEnchantInfoWnd::STATIC_ClearDetailInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantInfoWnd.ClearDetailInfo");

	USkillEnchantInfoWnd_ClearDetailInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantInfoWnd.AddSkillEnchantInfoListItem
// (PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strIconName                    (Parm, NeedCtorLink)
// struct FString                 strName                        (Parm, NeedCtorLink)
// int                            iID                            (Parm)
// int                            iLevel                         (Parm)
// int                            iSPConsume                     (Parm)
// struct FString                 strEnchantName                 (Parm, NeedCtorLink)

void USkillEnchantInfoWnd::STATIC_AddSkillEnchantInfoListItem(const struct FString& strIconName, const struct FString& strName, int iID, int iLevel, int iSPConsume, const struct FString& strEnchantName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantInfoWnd.AddSkillEnchantInfoListItem");

	USkillEnchantInfoWnd_AddSkillEnchantInfoListItem_Params params;
	params.strIconName = strIconName;
	params.strName = strName;
	params.iID = iID;
	params.iLevel = iLevel;
	params.iSPConsume = iSPConsume;
	params.strEnchantName = strEnchantName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantInfoWnd.ShowSkillEnchantInfoWnd
// (Final, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iType                          (Parm)

void USkillEnchantInfoWnd::STATIC_ShowSkillEnchantInfoWnd(int iType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantInfoWnd.ShowSkillEnchantInfoWnd");

	USkillEnchantInfoWnd_ShowSkillEnchantInfoWnd_Params params;
	params.iType = iType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantInfoWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USkillEnchantInfoWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantInfoWnd.OnEvent");

	USkillEnchantInfoWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantInfoWnd.OnLearn
// (Final, Iterator, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void USkillEnchantInfoWnd::STATIC_OnLearn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantInfoWnd.OnLearn");

	USkillEnchantInfoWnd_OnLearn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantInfoWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strItemID                      (Parm, NeedCtorLink)

void USkillEnchantInfoWnd::STATIC_OnClickButton(const struct FString& strItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantInfoWnd.OnClickButton");

	USkillEnchantInfoWnd_OnClickButton_Params params;
	params.strItemID = strItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantInfoWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USkillEnchantInfoWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantInfoWnd.OnLoad");

	USkillEnchantInfoWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantInfoWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USkillEnchantInfoWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantInfoWnd.OnRegisterEvent");

	USkillEnchantInfoWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.IsChangeSkillID
// (Final, Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SkillID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UMagicSkillWnd::STATIC_IsChangeSkillID(int SkillID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.IsChangeSkillID");

	UMagicSkillWnd_IsChangeSkillID_Params params;
	params.SkillID = SkillID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MagicSkillWnd.IsItemSkillID
// (Defined, Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SkillID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UMagicSkillWnd::STATIC_IsItemSkillID(int SkillID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.IsItemSkillID");

	UMagicSkillWnd_IsItemSkillID_Params params;
	params.SkillID = SkillID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MagicSkillWnd.IsHeroSkillID
// (Final, Defined, Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SkillID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UMagicSkillWnd::STATIC_IsHeroSkillID(int SkillID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.IsHeroSkillID");

	UMagicSkillWnd_IsHeroSkillID_Params params;
	params.SkillID = SkillID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MagicSkillWnd.GroupingSkill
// (Final, Defined, Iterator, Latent, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SkillID                        (Parm)
// int                            SkillLevel                     (Parm)

void UMagicSkillWnd::STATIC_GroupingSkill(int SkillID, int SkillLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.GroupingSkill");

	UMagicSkillWnd_GroupingSkill_Params params;
	params.SkillID = SkillID;
	params.SkillLevel = SkillLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.ComputeItemWndAnchor
// (Defined, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UMagicSkillWnd::STATIC_ComputeItemWndAnchor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.ComputeItemWndAnchor");

	UMagicSkillWnd_ComputeItemWndAnchor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.ComputeItemWndHeight
// (Final, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UMagicSkillWnd::STATIC_ComputeItemWndHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.ComputeItemWndHeight");

	UMagicSkillWnd_ComputeItemWndHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.HandleSkillList
// (Final, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMagicSkillWnd::STATIC_HandleSkillList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.HandleSkillList");

	UMagicSkillWnd_HandleSkillList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UMagicSkillWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.Clear");

	UMagicSkillWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.HandleSkillListStart
// (Defined, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMagicSkillWnd::STATIC_HandleSkillListStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.HandleSkillListStart");

	UMagicSkillWnd_HandleSkillListStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.HandleLanguageChanged
// (Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMagicSkillWnd::STATIC_HandleLanguageChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.HandleLanguageChanged");

	UMagicSkillWnd_HandleLanguageChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMagicSkillWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.OnClickButton");

	UMagicSkillWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UMagicSkillWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.OnClickItem");

	UMagicSkillWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UMagicSkillWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.OnEvent");

	UMagicSkillWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMagicSkillWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.OnHide");

	UMagicSkillWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMagicSkillWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.OnShow");

	UMagicSkillWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMagicSkillWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.OnLoad");

	UMagicSkillWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MagicSkillWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMagicSkillWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MagicSkillWnd.OnRegisterEvent");

	UMagicSkillWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMMagicSkillWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UGMMagicSkillWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMMagicSkillWnd.OnClickItem");

	UGMMagicSkillWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMMagicSkillWnd.HadleGMObservingSkillList
// (Iterator, Latent, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMMagicSkillWnd::STATIC_HadleGMObservingSkillList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMMagicSkillWnd.HadleGMObservingSkillList");

	UGMMagicSkillWnd_HadleGMObservingSkillList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMMagicSkillWnd.HadleGMObservingSkillListStart
// (Final, Iterator, Latent, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMMagicSkillWnd::STATIC_HadleGMObservingSkillListStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMMagicSkillWnd.HadleGMObservingSkillListStart");

	UGMMagicSkillWnd_HadleGMObservingSkillListStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMMagicSkillWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMMagicSkillWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMMagicSkillWnd.OnEvent");

	UGMMagicSkillWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMMagicSkillWnd.ShowMagicSkill
// (Defined, Iterator, Latent, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMMagicSkillWnd::STATIC_ShowMagicSkill(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMMagicSkillWnd.ShowMagicSkill");

	UGMMagicSkillWnd_ShowMagicSkill_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMMagicSkillWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMMagicSkillWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMMagicSkillWnd.OnHide");

	UGMMagicSkillWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMMagicSkillWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMMagicSkillWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMMagicSkillWnd.OnShow");

	UGMMagicSkillWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMMagicSkillWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UGMMagicSkillWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMMagicSkillWnd.OnLoad");

	UGMMagicSkillWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMMagicSkillWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UGMMagicSkillWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMMagicSkillWnd.OnRegisterEvent");

	UGMMagicSkillWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyListWnd.SetTooltip
// (Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)
// struct FString                 Description                    (Parm, NeedCtorLink)
// struct FINT64                  MakingFee                      (Parm)
// struct FCustomTooltip          ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FCustomTooltip URecipeBuyListWnd::STATIC_SetTooltip(const struct FString& Name, const struct FString& Description, const struct FINT64& MakingFee)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyListWnd.SetTooltip");

	URecipeBuyListWnd_SetTooltip_Params params;
	params.Name = Name;
	params.Description = Description;
	params.MakingFee = MakingFee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.RecipeBuyListWnd.AddRecipeShopSellItem
// (Latent, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            RecipeID                       (Parm)
// int                            CanbeMade                      (Parm)
// struct FINT64                  MakingFee                      (Parm)

void URecipeBuyListWnd::STATIC_AddRecipeShopSellItem(int RecipeID, int CanbeMade, const struct FINT64& MakingFee)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyListWnd.AddRecipeShopSellItem");

	URecipeBuyListWnd_AddRecipeShopSellItem_Params params;
	params.RecipeID = RecipeID;
	params.CanbeMade = CanbeMade;
	params.MakingFee = MakingFee;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyListWnd.SetMPBar
// (Final, Defined, Iterator, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            currentMP                      (Parm)

void URecipeBuyListWnd::STATIC_SetMPBar(int currentMP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyListWnd.SetMPBar");

	URecipeBuyListWnd_SetMPBar_Params params;
	params.currentMP = currentMP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyListWnd.ReceiveRecipeShopSellList
// (PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ServerID                       (Parm)
// int                            currentMP                      (Parm)
// int                            MaxMP                          (Parm)
// struct FINT64                  Adena                          (Parm)

void URecipeBuyListWnd::STATIC_ReceiveRecipeShopSellList(int ServerID, int currentMP, int MaxMP, const struct FINT64& Adena)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyListWnd.ReceiveRecipeShopSellList");

	URecipeBuyListWnd_ReceiveRecipeShopSellList_Params params;
	params.ServerID = ServerID;
	params.currentMP = currentMP;
	params.MaxMP = MaxMP;
	params.Adena = Adena;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyListWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void URecipeBuyListWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyListWnd.Clear");

	URecipeBuyListWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyListWnd.CloseWindow
// (Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URecipeBuyListWnd::STATIC_CloseWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyListWnd.CloseWindow");

	URecipeBuyListWnd_CloseWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyListWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void URecipeBuyListWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyListWnd.OnClickButton");

	URecipeBuyListWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyListWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void URecipeBuyListWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyListWnd.OnEvent");

	URecipeBuyListWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyListWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void URecipeBuyListWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyListWnd.OnLoad");

	URecipeBuyListWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyListWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void URecipeBuyListWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyListWnd.OnRegisterEvent");

	URecipeBuyListWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeTreeWnd.AddRecipeItem
// (Defined, Latent, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ProductID                      (Parm)
// int                            SuccessRate                    (Parm)
// struct FINT64                  NeedCount                      (Parm)
// struct FString                 NodeName                       (Parm, NeedCtorLink)

void URecipeTreeWnd::STATIC_AddRecipeItem(int ProductID, int SuccessRate, const struct FINT64& NeedCount, const struct FString& NodeName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeTreeWnd.AddRecipeItem");

	URecipeTreeWnd_AddRecipeItem_Params params;
	params.ProductID = ProductID;
	params.SuccessRate = SuccessRate;
	params.NeedCount = NeedCount;
	params.NodeName = NodeName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeTreeWnd.SetRecipeInfo
// (PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            RecipeID                       (Parm)
// int                            SuccessRate                    (Parm)

void URecipeTreeWnd::STATIC_SetRecipeInfo(int RecipeID, int SuccessRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeTreeWnd.SetRecipeInfo");

	URecipeTreeWnd_SetRecipeInfo_Params params;
	params.RecipeID = RecipeID;
	params.SuccessRate = SuccessRate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeTreeWnd.StartRecipeTreeWnd
// (Final, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            RecipeID                       (Parm)
// int                            SuccessRate                    (Parm)

void URecipeTreeWnd::STATIC_StartRecipeTreeWnd(int RecipeID, int SuccessRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeTreeWnd.StartRecipeTreeWnd");

	URecipeTreeWnd_StartRecipeTreeWnd_Params params;
	params.RecipeID = RecipeID;
	params.SuccessRate = SuccessRate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeTreeWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void URecipeTreeWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeTreeWnd.Clear");

	URecipeTreeWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeTreeWnd.CloseWindow
// (Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URecipeTreeWnd::STATIC_CloseWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeTreeWnd.CloseWindow");

	URecipeTreeWnd_CloseWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeTreeWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void URecipeTreeWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeTreeWnd.OnClickButton");

	URecipeTreeWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeTreeWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void URecipeTreeWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeTreeWnd.OnEvent");

	URecipeTreeWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeTreeWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void URecipeTreeWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeTreeWnd.OnLoad");

	URecipeTreeWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeTreeWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void URecipeTreeWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeTreeWnd.OnRegisterEvent");

	URecipeTreeWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainListWnd.InsertNodeItem
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 strNodeName                    (Parm, NeedCtorLink)
// struct FXMLTreeNodeItemInfo    infNodeItemName                (Parm, NeedCtorLink)

void USkillTrainListWnd::STATIC_InsertNodeItem(const struct FString& strNodeName, const struct FXMLTreeNodeItemInfo& infNodeItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainListWnd.InsertNodeItem");

	USkillTrainListWnd_InsertNodeItem_Params params;
	params.strNodeName = strNodeName;
	params.infNodeItemName = infNodeItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainListWnd.AddSkillTrainListItem
// (Defined, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strIconName                    (Parm, NeedCtorLink)
// struct FString                 strName                        (Parm, NeedCtorLink)
// int                            iID                            (Parm)
// int                            iLevel                         (Parm)
// int                            iSPConsume                     (Parm)
// struct FString                 strEnchantName                 (Parm, NeedCtorLink)

void USkillTrainListWnd::STATIC_AddSkillTrainListItem(const struct FString& strIconName, const struct FString& strName, int iID, int iLevel, int iSPConsume, const struct FString& strEnchantName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainListWnd.AddSkillTrainListItem");

	USkillTrainListWnd_AddSkillTrainListItem_Params params;
	params.strIconName = strIconName;
	params.strName = strName;
	params.iID = iID;
	params.iLevel = iLevel;
	params.iSPConsume = iSPConsume;
	params.strEnchantName = strEnchantName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainListWnd.ShowSkillTrainListWnd
// (Final, Defined, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iType                          (Parm)

void USkillTrainListWnd::STATIC_ShowSkillTrainListWnd(int iType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainListWnd.ShowSkillTrainListWnd");

	USkillTrainListWnd_ShowSkillTrainListWnd_Params params;
	params.iType = iType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainListWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USkillTrainListWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainListWnd.OnShow");

	USkillTrainListWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainListWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USkillTrainListWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainListWnd.OnEvent");

	USkillTrainListWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainListWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void USkillTrainListWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainListWnd.Clear");

	USkillTrainListWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainListWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strItemID                      (Parm, NeedCtorLink)

void USkillTrainListWnd::STATIC_OnClickButton(const struct FString& strItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainListWnd.OnClickButton");

	USkillTrainListWnd_OnClickButton_Params params;
	params.strItemID = strItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainListWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USkillTrainListWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainListWnd.OnLoad");

	USkillTrainListWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainListWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USkillTrainListWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainListWnd.OnRegisterEvent");

	USkillTrainListWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaListWnd.AddHennaListItem
// (Latent, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strName                        (Parm, NeedCtorLink)
// struct FString                 strIconName                    (Parm, NeedCtorLink)
// struct FString                 strDescription                 (Parm, NeedCtorLink)
// struct FINT64                  iFee                           (Parm)
// int                            iHennaID                       (Parm)

void UHennaListWnd::STATIC_AddHennaListItem(const struct FString& strName, const struct FString& strIconName, const struct FString& strDescription, const struct FINT64& iFee, int iHennaID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaListWnd.AddHennaListItem");

	UHennaListWnd_AddHennaListItem_Params params;
	params.strName = strName;
	params.strIconName = strIconName;
	params.strDescription = strDescription;
	params.iFee = iFee;
	params.iHennaID = iHennaID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaListWnd.ShowHennaListWnd
// (Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  iAdena                         (Parm)

void UHennaListWnd::STATIC_ShowHennaListWnd(const struct FINT64& iAdena)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaListWnd.ShowHennaListWnd");

	UHennaListWnd_ShowHennaListWnd_Params params;
	params.iAdena = iAdena;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaListWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UHennaListWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaListWnd.OnEvent");

	UHennaListWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaListWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UHennaListWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaListWnd.Clear");

	UHennaListWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaListWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UHennaListWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaListWnd.OnClickButton");

	UHennaListWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaListWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UHennaListWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaListWnd.OnLoad");

	UHennaListWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaListWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UHennaListWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaListWnd.OnRegisterEvent");

	UHennaListWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.SetCameraChar
// (Defined, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_CharIndex                    (Parm)

void UCharacterCreateMenuWnd::STATIC_SetCameraChar(int a_CharIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.SetCameraChar");

	UCharacterCreateMenuWnd_SetCameraChar_Params params;
	params.a_CharIndex = a_CharIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.EnableRotate
// (Defined, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bRotate                        (Parm)

void UCharacterCreateMenuWnd::STATIC_EnableRotate(bool bRotate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.EnableRotate");

	UCharacterCreateMenuWnd_EnableRotate_Params params;
	params.bRotate = bRotate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.CameraMoveBackward
// (Iterator, Latent, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            State                          (Parm)
// int                            Race                           (Parm)
// int                            Job                            (Parm)
// int                            gender                         (Parm)

void UCharacterCreateMenuWnd::STATIC_CameraMoveBackward(int State, int Race, int Job, int gender)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.CameraMoveBackward");

	UCharacterCreateMenuWnd_CameraMoveBackward_Params params;
	params.State = State;
	params.Race = Race;
	params.Job = Job;
	params.gender = gender;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.CameraMoveParallelTransference
// (Final, Iterator, Latent, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            State                          (Parm)
// int                            Race                           (Parm)
// int                            Job                            (Parm)
// int                            gender                         (Parm)

void UCharacterCreateMenuWnd::STATIC_CameraMoveParallelTransference(int State, int Race, int Job, int gender)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.CameraMoveParallelTransference");

	UCharacterCreateMenuWnd_CameraMoveParallelTransference_Params params;
	params.State = State;
	params.Race = Race;
	params.Job = Job;
	params.gender = gender;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.CameraMoveForward
// (Defined, Iterator, Latent, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Race                           (Parm)
// int                            Job                            (Parm)
// int                            gender                         (Parm)

void UCharacterCreateMenuWnd::STATIC_CameraMoveForward(int Race, int Job, int gender)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.CameraMoveForward");

	UCharacterCreateMenuWnd_CameraMoveForward_Params params;
	params.Race = Race;
	params.Job = Job;
	params.gender = gender;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.CameraMove
// (Final, Defined, Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            State                          (Parm)

void UCharacterCreateMenuWnd::STATIC_CameraMove(int State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.CameraMove");

	UCharacterCreateMenuWnd_CameraMove_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.GetIndex
// (Final, Defined, Iterator, Latent, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Race                           (Parm)
// int                            Job                            (Parm)
// int                            gender                         (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UCharacterCreateMenuWnd::STATIC_GetIndex(int Race, int Job, int gender)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.GetIndex");

	UCharacterCreateMenuWnd_GetIndex_Params params;
	params.Race = Race;
	params.Job = Job;
	params.gender = gender;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.CharacterCreateMenuWnd.GetDefaultCharacterIndex
// (Final, Iterator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Race                           (Parm)
// int                            Job                            (Parm)
// int                            Sex                            (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UCharacterCreateMenuWnd::STATIC_GetDefaultCharacterIndex(int Race, int Job, int Sex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.GetDefaultCharacterIndex");

	UCharacterCreateMenuWnd_GetDefaultCharacterIndex_Params params;
	params.Race = Race;
	params.Job = Job;
	params.Sex = Sex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.CharacterCreateMenuWnd.ErrorInSex
// (Final, Iterator, Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCharacterCreateMenuWnd::STATIC_ErrorInSex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.ErrorInSex");

	UCharacterCreateMenuWnd_ErrorInSex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.ErrorInJob
// (Defined, Iterator, Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCharacterCreateMenuWnd::STATIC_ErrorInJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.ErrorInJob");

	UCharacterCreateMenuWnd_ErrorInJob_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.ErrorInRace
// (Final, Defined, Iterator, Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCharacterCreateMenuWnd::STATIC_ErrorInRace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.ErrorInRace");

	UCharacterCreateMenuWnd_ErrorInRace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnFaceType
// (Final, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)

void UCharacterCreateMenuWnd::STATIC_OnFaceType(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnFaceType");

	UCharacterCreateMenuWnd_OnFaceType_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnHairColor
// (Defined, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)

void UCharacterCreateMenuWnd::STATIC_OnHairColor(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnHairColor");

	UCharacterCreateMenuWnd_OnHairColor_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnHairType
// (Final, Defined, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)

void UCharacterCreateMenuWnd::STATIC_OnHairType(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnHairType");

	UCharacterCreateMenuWnd_OnHairType_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnSexSelect
// (Iterator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)

void UCharacterCreateMenuWnd::STATIC_OnSexSelect(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnSexSelect");

	UCharacterCreateMenuWnd_OnSexSelect_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnJobSelect
// (Final, Iterator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)

void UCharacterCreateMenuWnd::STATIC_OnJobSelect(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnJobSelect");

	UCharacterCreateMenuWnd_OnJobSelect_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnRaceSelect
// (Final, Iterator, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)

void UCharacterCreateMenuWnd::STATIC_OnRaceSelect(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnRaceSelect");

	UCharacterCreateMenuWnd_OnRaceSelect_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UCharacterCreateMenuWnd::STATIC_OnComboBoxItemSelected(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnComboBoxItemSelected");

	UCharacterCreateMenuWnd_OnComboBoxItemSelected_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.HandleSetClassDescription
// (Final, Defined, Iterator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UCharacterCreateMenuWnd::STATIC_HandleSetClassDescription(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.HandleSetClassDescription");

	UCharacterCreateMenuWnd_HandleSetClassDescription_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.HandleClearSetupWnd
// (Iterator, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)

void UCharacterCreateMenuWnd::STATIC_HandleClearSetupWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.HandleClearSetupWnd");

	UCharacterCreateMenuWnd_HandleClearSetupWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.HandleClear
// (PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCharacterCreateMenuWnd::STATIC_HandleClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.HandleClear");

	UCharacterCreateMenuWnd_HandleClear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.HandleEnableRotate
// (Final, Latent, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UCharacterCreateMenuWnd::STATIC_HandleEnableRotate(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.HandleEnableRotate");

	UCharacterCreateMenuWnd_HandleEnableRotate_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UCharacterCreateMenuWnd::STATIC_OnEvent(int Event_ID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnEvent");

	UCharacterCreateMenuWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnLButtonUp
// (Final, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UCharacterCreateMenuWnd::STATIC_OnLButtonUp(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnLButtonUp");

	UCharacterCreateMenuWnd_OnLButtonUp_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnLButtonDown
// (Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UCharacterCreateMenuWnd::STATIC_OnLButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnLButtonDown");

	UCharacterCreateMenuWnd_OnLButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.HandleZoom
// (Defined, Latent, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UCharacterCreateMenuWnd::STATIC_HandleZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.HandleZoom");

	UCharacterCreateMenuWnd_HandleZoom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.IsValidData
// (Final, Defined, Iterator, Latent, Exec, Native, Event, Static, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UCharacterCreateMenuWnd::STATIC_IsValidData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.IsValidData");

	UCharacterCreateMenuWnd_IsValidData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.CharacterCreateMenuWnd.HandleBtnCreateCharacter
// (Final, Defined, Latent, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UCharacterCreateMenuWnd::STATIC_HandleBtnCreateCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.HandleBtnCreateCharacter");

	UCharacterCreateMenuWnd_HandleBtnCreateCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UCharacterCreateMenuWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnClickButton");

	UCharacterCreateMenuWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UCharacterCreateMenuWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnShow");

	UCharacterCreateMenuWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.InitString
// (Iterator, Latent, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UCharacterCreateMenuWnd::STATIC_InitString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.InitString");

	UCharacterCreateMenuWnd_InitString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UCharacterCreateMenuWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnLoad");

	UCharacterCreateMenuWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CharacterCreateMenuWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UCharacterCreateMenuWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CharacterCreateMenuWnd.OnRegisterEvent");

	UCharacterCreateMenuWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandleStateChange
// (Final, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 State                          (Parm, NeedCtorLink)

void UShortcut::STATIC_HandleStateChange(const struct FString& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandleStateChange");

	UShortcut_HandleStateChange_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandleCloseAllWindow
// (Defined, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UShortcut::STATIC_HandleCloseAllWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandleCloseAllWindow");

	UShortcut_HandleCloseAllWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandleSetNextChatType
// (Final, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UShortcut::STATIC_HandleSetNextChatType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandleSetNextChatType");

	UShortcut_HandleSetNextChatType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandleSetPrevChatType
// (PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UShortcut::STATIC_HandleSetPrevChatType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandleSetPrevChatType");

	UShortcut_HandleSetPrevChatType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandleShowChatWindow
// (Final, Defined, Iterator, Latent, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UShortcut::STATIC_HandleShowChatWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandleShowChatWindow");

	UShortcut_HandleShowChatWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandleShortcutTest
// (Latent, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UShortcut::STATIC_HandleShortcutTest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandleShortcutTest");

	UShortcut_HandleShortcutTest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandlePrintShortcut
// (Defined, Iterator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UShortcut::STATIC_HandlePrintShortcut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandlePrintShortcut");

	UShortcut_HandlePrintShortcut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandleShortcutCommand
// (Final, Iterator, PreOperator, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShortcut::STATIC_HandleShortcutCommand(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandleShortcutCommand");

	UShortcut_HandleShortcutCommand_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UShortcut::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.OnExitState");

	UShortcut_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UShortcut::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.OnTimer");

	UShortcut_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandlePartyMatchingOnOff
// (Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UShortcut::STATIC_HandlePartyMatchingOnOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandlePartyMatchingOnOff");

	UShortcut_HandlePartyMatchingOnOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandleShowHelpHtmlWnd
// (Final, Iterator, Latent, Operator, Static, HasOptionalParms, Const)

void UShortcut::STATIC_HandleShowHelpHtmlWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandleShowHelpHtmlWnd");

	UShortcut_HandleShowHelpHtmlWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.ClosePartyMatchingWnd
// (Final, Iterator, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcut::STATIC_ClosePartyMatchingWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.ClosePartyMatchingWnd");

	UShortcut_ClosePartyMatchingWnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.HandleShortcutKeyEvent
// (Final, Defined, Iterator, PreOperator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShortcut::STATIC_HandleShortcutKeyEvent(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.HandleShortcutKeyEvent");

	UShortcut_HandleShortcutKeyEvent_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShortcut::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.OnEvent");

	UShortcut_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.OnLoad
// (Final, Net, Operator, Static, Const)

void UShortcut::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.OnLoad");

	UShortcut_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.Shortcut.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UShortcut::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.Shortcut.OnRegisterEvent");

	UShortcut_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantWnd.InsertNodeItem
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 strNodeName                    (Parm, NeedCtorLink)
// struct FXMLTreeNodeItemInfo    infNodeItemName                (Parm, NeedCtorLink)

void USkillEnchantWnd::STATIC_InsertNodeItem(const struct FString& strNodeName, const struct FXMLTreeNodeItemInfo& infNodeItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantWnd.InsertNodeItem");

	USkillEnchantWnd_InsertNodeItem_Params params;
	params.strNodeName = strNodeName;
	params.infNodeItemName = infNodeItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantWnd.AddSkillEnchantListItem
// (Final, Iterator, Latent, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strIconName                    (Parm, NeedCtorLink)
// struct FString                 strName                        (Parm, NeedCtorLink)
// int                            iID                            (Parm)
// int                            iLevel                         (Parm)
// int                            iSPConsume                     (Parm)
// struct FString                 strEnchantName                 (Parm, NeedCtorLink)

void USkillEnchantWnd::STATIC_AddSkillEnchantListItem(const struct FString& strIconName, const struct FString& strName, int iID, int iLevel, int iSPConsume, const struct FString& strEnchantName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantWnd.AddSkillEnchantListItem");

	USkillEnchantWnd_AddSkillEnchantListItem_Params params;
	params.strIconName = strIconName;
	params.strName = strName;
	params.iID = iID;
	params.iLevel = iLevel;
	params.iSPConsume = iSPConsume;
	params.strEnchantName = strEnchantName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantWnd.ShowSkillEnchantWnd
// (Defined, Iterator, Latent, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iType                          (Parm)

void USkillEnchantWnd::STATIC_ShowSkillEnchantWnd(int iType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantWnd.ShowSkillEnchantWnd");

	USkillEnchantWnd_ShowSkillEnchantWnd_Params params;
	params.iType = iType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USkillEnchantWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantWnd.OnShow");

	USkillEnchantWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USkillEnchantWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantWnd.OnEvent");

	USkillEnchantWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strItemID                      (Parm, NeedCtorLink)

void USkillEnchantWnd::STATIC_OnClickButton(const struct FString& strItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantWnd.OnClickButton");

	USkillEnchantWnd_OnClickButton_Params params;
	params.strItemID = strItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USkillEnchantWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantWnd.OnLoad");

	USkillEnchantWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillEnchantWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USkillEnchantWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillEnchantWnd.OnRegisterEvent");

	USkillEnchantWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestHTMLWnd.HandleLoadHtmlFromString
// (Final, Defined, Iterator, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UQuestHTMLWnd::STATIC_HandleLoadHtmlFromString(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestHTMLWnd.HandleLoadHtmlFromString");

	UQuestHTMLWnd_HandleLoadHtmlFromString_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestHTMLWnd.OnHtmlMsgHideWindow
// (Final, Defined, Latent, Operator, Static, Const)
// Parameters:
// class UHtmlHandle*             a_HtmlHandle                   (Parm)

void UQuestHTMLWnd::STATIC_OnHtmlMsgHideWindow(class UHtmlHandle* a_HtmlHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestHTMLWnd.OnHtmlMsgHideWindow");

	UQuestHTMLWnd_OnHtmlMsgHideWindow_Params params;
	params.a_HtmlHandle = a_HtmlHandle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestHTMLWnd.HandleQuestIDLoadHtmlFromString
// (Defined, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UQuestHTMLWnd::STATIC_HandleQuestIDLoadHtmlFromString(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestHTMLWnd.HandleQuestIDLoadHtmlFromString");

	UQuestHTMLWnd_HandleQuestIDLoadHtmlFromString_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestHTMLWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UQuestHTMLWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestHTMLWnd.OnEvent");

	UQuestHTMLWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestHTMLWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UQuestHTMLWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestHTMLWnd.OnLoad");

	UQuestHTMLWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestHTMLWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UQuestHTMLWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestHTMLWnd.OnRegisterEvent");

	UQuestHTMLWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.MakeDrawInfo_Blank
// (Final, Defined, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FDrawItemInfo           Info                           (Parm, OutParm, NeedCtorLink)
// int                            Height                         (Parm)

void UBR_CashShopWnd::STATIC_MakeDrawInfo_Blank(int Height, struct FDrawItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.MakeDrawInfo_Blank");

	UBR_CashShopWnd_MakeDrawInfo_Blank_Params params;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;
}


// Function Interface.BR_CashShopWnd.MakeDrawInfo_Image
// (Iterator, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FDrawItemInfo           Info                           (Parm, OutParm, NeedCtorLink)
// struct FString                 TextureName                    (Parm, NeedCtorLink)
// int                            Width                          (Parm)
// int                            Height                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBR_CashShopWnd::STATIC_MakeDrawInfo_Image(const struct FString& TextureName, int Width, int Height, struct FDrawItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.MakeDrawInfo_Image");

	UBR_CashShopWnd_MakeDrawInfo_Image_Params params;
	params.TextureName = TextureName;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;

	return params.ReturnValue;
}


// Function Interface.BR_CashShopWnd.MakeDrawInfo_Desc
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FDrawItemInfo           Info                           (Parm, OutParm, NeedCtorLink)
// struct FString                 Str                            (Parm, NeedCtorLink)
// int                            R                              (Parm)
// int                            G                              (Parm)
// int                            B                              (Parm)

void UBR_CashShopWnd::STATIC_MakeDrawInfo_Desc(const struct FString& Str, int R, int G, int B, struct FDrawItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.MakeDrawInfo_Desc");

	UBR_CashShopWnd_MakeDrawInfo_Desc_Params params;
	params.Str = Str;
	params.R = R;
	params.G = G;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;
}


// Function Interface.BR_CashShopWnd.MakeDrawInfo_Text
// (Final, Iterator, Latent, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FDrawItemInfo           Info                           (Parm, OutParm, NeedCtorLink)
// struct FString                 Str                            (Parm, NeedCtorLink)
// int                            R                              (Parm)
// int                            G                              (Parm)
// int                            B                              (Parm)

void UBR_CashShopWnd::STATIC_MakeDrawInfo_Text(const struct FString& Str, int R, int G, int B, struct FDrawItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.MakeDrawInfo_Text");

	UBR_CashShopWnd_MakeDrawInfo_Text_Params params;
	params.Str = Str;
	params.R = R;
	params.G = G;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;
}


// Function Interface.BR_CashShopWnd.MakeText
// (Defined, Iterator, PreOperator, Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FDrawItemInfo           Info                           (Parm, OutParm, NeedCtorLink)
// struct FString                 Str                            (Parm, NeedCtorLink)

void UBR_CashShopWnd::STATIC_MakeText(const struct FString& Str, struct FDrawItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.MakeText");

	UBR_CashShopWnd_MakeText_Params params;
	params.Str = Str;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;
}


// Function Interface.BR_CashShopWnd.MakeCashItemIcon
// (Final, Iterator, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FDrawItemInfo           Info                           (Parm, OutParm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBR_CashShopWnd::STATIC_MakeCashItemIcon(struct FDrawItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.MakeCashItemIcon");

	UBR_CashShopWnd_MakeCashItemIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;

	return params.ReturnValue;
}


// Function Interface.BR_CashShopWnd.ResetScrollHeight
// (Final, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_ResetScrollHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.ResetScrollHeight");

	UBR_CashShopWnd_ResetScrollHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.CalcTextHeight
// (Final, Defined, Iterator, PreOperator, Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 tempStr                        (Parm, NeedCtorLink)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UBR_CashShopWnd::STATIC_CalcTextHeight(const struct FString& tempStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.CalcTextHeight");

	UBR_CashShopWnd_CalcTextHeight_Params params;
	params.tempStr = tempStr;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.BR_CashShopWnd.AddEachProductInfo
// (Defined, Iterator, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iID                            (Parm)
// int                            iAmount                        (Parm)
// struct FString                 ItemName                       (Parm, NeedCtorLink)
// struct FString                 IconName                       (Parm, NeedCtorLink)
// struct FString                 Desc                           (Parm, NeedCtorLink)
// int                            Weight                         (Parm)
// int                            trade                          (Parm)

void UBR_CashShopWnd::STATIC_AddEachProductInfo(int iID, int iAmount, const struct FString& ItemName, const struct FString& IconName, const struct FString& Desc, int Weight, int trade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.AddEachProductInfo");

	UBR_CashShopWnd_AddEachProductInfo_Params params;
	params.iID = iID;
	params.iAmount = iAmount;
	params.ItemName = ItemName;
	params.IconName = IconName;
	params.Desc = Desc;
	params.Weight = Weight;
	params.trade = trade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.SetNewProductInfo
// (Final, Defined, Iterator, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iID                            (Parm)
// int                            Price                          (Parm)
// struct FString                 ItemName                       (Parm, NeedCtorLink)
// struct FString                 Desc                           (Parm, NeedCtorLink)

void UBR_CashShopWnd::STATIC_SetNewProductInfo(int iID, int Price, const struct FString& ItemName, const struct FString& Desc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.SetNewProductInfo");

	UBR_CashShopWnd_SetNewProductInfo_Params params;
	params.iID = iID;
	params.Price = Price;
	params.ItemName = ItemName;
	params.Desc = Desc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.AddProductItem
// (Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iID                            (Parm)
// int                            category                       (Parm)
// int                            showtab                        (Parm)
// int                            Price                          (Parm)
// struct FString                 ItemName                       (Parm, NeedCtorLink)
// struct FString                 IconName                       (Parm, NeedCtorLink)

void UBR_CashShopWnd::STATIC_AddProductItem(int iID, int category, int showtab, int Price, const struct FString& ItemName, const struct FString& IconName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.AddProductItem");

	UBR_CashShopWnd_AddProductItem_Params params;
	params.iID = iID;
	params.category = category;
	params.showtab = showtab;
	params.Price = Price;
	params.ItemName = ItemName;
	params.IconName = IconName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.AddFilteredProductList
// (PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iID                            (Parm)
// int                            category                       (Parm)
// int                            showtab                        (Parm)
// int                            Price                          (Parm)
// struct FString                 ItemName                       (Parm, NeedCtorLink)
// struct FString                 IconName                       (Parm, NeedCtorLink)

void UBR_CashShopWnd::STATIC_AddFilteredProductList(int iID, int category, int showtab, int Price, const struct FString& ItemName, const struct FString& IconName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.AddFilteredProductList");

	UBR_CashShopWnd_AddFilteredProductList_Params params;
	params.iID = iID;
	params.category = category;
	params.showtab = showtab;
	params.Price = Price;
	params.ItemName = ItemName;
	params.IconName = IconName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.AddFilteredProductListAll
// (Defined, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_AddFilteredProductListAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.AddFilteredProductListAll");

	UBR_CashShopWnd_AddFilteredProductListAll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.CheckTabIndex
// (Final, Defined, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            category                       (Parm)
// int                            showtab                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBR_CashShopWnd::STATIC_CheckTabIndex(int category, int showtab)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.CheckTabIndex");

	UBR_CashShopWnd_CheckTabIndex_Params params;
	params.category = category;
	params.showtab = showtab;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.BR_CashShopWnd.ShowCashShopWnd
// (Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_ShowCashShopWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.ShowCashShopWnd");

	UBR_CashShopWnd_ShowCashShopWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.InitProductList
// (Defined, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_InitProductList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.InitProductList");

	UBR_CashShopWnd_InitProductList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.OnBtnInputQuantity
// (Final, Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_OnBtnInputQuantity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.OnBtnInputQuantity");

	UBR_CashShopWnd_OnBtnInputQuantity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.OnBtnCashChargeClick
// (Defined, Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_OnBtnCashChargeClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.OnBtnCashChargeClick");

	UBR_CashShopWnd_OnBtnCashChargeClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.OnbtnCancelClick
// (Final, Defined, Iterator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_OnbtnCancelClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.OnbtnCancelClick");

	UBR_CashShopWnd_OnbtnCancelClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.GetProductItem
// (Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// struct FProductInfo            ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FProductInfo UBR_CashShopWnd::STATIC_GetProductItem(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.GetProductItem");

	UBR_CashShopWnd_GetProductItem_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.BR_CashShopWnd.OnBtnBuyClick
// (Defined, Iterator, Operator, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_OnBtnBuyClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.OnBtnBuyClick");

	UBR_CashShopWnd_OnBtnBuyClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.OnTabCategory
// (Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            tabindex                       (Parm)

void UBR_CashShopWnd::STATIC_OnTabCategory(int tabindex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.OnTabCategory");

	UBR_CashShopWnd_OnTabCategory_Params params;
	params.tabindex = tabindex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.PrepareProductList
// (Final, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iOption                        (Parm)

void UBR_CashShopWnd::STATIC_PrepareProductList(int iOption)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.PrepareProductList");

	UBR_CashShopWnd_PrepareProductList_Params params;
	params.iOption = iOption;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.HandleDialogOK");

	UBR_CashShopWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.HandleToggleWindow
// (Defined, Iterator, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_HandleToggleWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.HandleToggleWindow");

	UBR_CashShopWnd_HandleToggleWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.ClearItemInfo
// (Operator, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_ClearItemInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.ClearItemInfo");

	UBR_CashShopWnd_ClearItemInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.ClearItemList
// (Final, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            allclear                       (Parm)

void UBR_CashShopWnd::STATIC_ClearItemList(int allclear)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.ClearItemList");

	UBR_CashShopWnd_ClearItemList_Params params;
	params.allclear = allclear;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.SetGamePoint
// (Defined, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  iGamePoint                     (Parm)

void UBR_CashShopWnd::STATIC_SetGamePoint(const struct FINT64& iGamePoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.SetGamePoint");

	UBR_CashShopWnd_SetGamePoint_Params params;
	params.iGamePoint = iGamePoint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.OnChangeEditBox
// (Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UBR_CashShopWnd::STATIC_OnChangeEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.OnChangeEditBox");

	UBR_CashShopWnd_OnChangeEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UBR_CashShopWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.OnClickButton");

	UBR_CashShopWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UBR_CashShopWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.OnEvent");

	UBR_CashShopWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UBR_CashShopWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.Initialize");

	UBR_CashShopWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_CashShopWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.InitHandle");

	UBR_CashShopWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBR_CashShopWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.OnLoad");

	UBR_CashShopWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBR_CashShopWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopWnd.OnRegisterEvent");

	UBR_CashShopWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.AddProductList
// (Iterator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iID                            (Parm)
// int                            iAmount                        (Parm)
// int                            Price                          (Parm)
// struct FString                 ItemName                       (Parm, NeedCtorLink)
// struct FString                 IconName                       (Parm, NeedCtorLink)

void UBR_BuyingWnd::STATIC_AddProductList(int iID, int iAmount, int Price, const struct FString& ItemName, const struct FString& IconName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.AddProductList");

	UBR_BuyingWnd_AddProductList_Params params;
	params.iID = iID;
	params.iAmount = iAmount;
	params.Price = Price;
	params.ItemName = ItemName;
	params.IconName = IconName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.InitProductList
// (Defined, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_BuyingWnd::STATIC_InitProductList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.InitProductList");

	UBR_BuyingWnd_InitProductList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.ShowBuyWindow
// (Final, Defined, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bShow                          (Parm)

void UBR_BuyingWnd::STATIC_ShowBuyWindow(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.ShowBuyWindow");

	UBR_BuyingWnd_ShowBuyWindow_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.ResultBuy
// (Final, Iterator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iResult                        (Parm)
// struct FINT64                  iGamePoint                     (Parm)

void UBR_BuyingWnd::STATIC_ResultBuy(int iResult, const struct FINT64& iGamePoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.ResultBuy");

	UBR_BuyingWnd_ResultBuy_Params params;
	params.iResult = iResult;
	params.iGamePoint = iGamePoint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.CalculateBalance
// (Final, Iterator, Operator, Static, HasOptionalParms, Const)

void UBR_BuyingWnd::STATIC_CalculateBalance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.CalculateBalance");

	UBR_BuyingWnd_CalculateBalance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.OnBtnChargeClick
// (Defined, Iterator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UBR_BuyingWnd::STATIC_OnBtnChargeClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.OnBtnChargeClick");

	UBR_BuyingWnd_OnBtnChargeClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.OnBtnBuyClick
// (Defined, Iterator, Operator, Static, HasOptionalParms, Const)

void UBR_BuyingWnd::STATIC_OnBtnBuyClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.OnBtnBuyClick");

	UBR_BuyingWnd_OnBtnBuyClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.OnbtnCancelClick
// (Final, Defined, Iterator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_BuyingWnd::STATIC_OnbtnCancelClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.OnbtnCancelClick");

	UBR_BuyingWnd_OnbtnCancelClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBR_BuyingWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.OnShow");

	UBR_BuyingWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBR_BuyingWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.OnHide");

	UBR_BuyingWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UBR_BuyingWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.OnEvent");

	UBR_BuyingWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UBR_BuyingWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.OnClickButton");

	UBR_BuyingWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBR_BuyingWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.OnRegisterEvent");

	UBR_BuyingWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_BuyingWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.InitHandle");

	UBR_BuyingWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_BuyingWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBR_BuyingWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_BuyingWnd.OnLoad");

	UBR_BuyingWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.ResetBulkOnlyShop
// (Simulated, Operator, Static, HasOptionalParms, Const)

void UPrivateShopWnd::STATIC_ResetBulkOnlyShop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.ResetBulkOnlyShop");

	UPrivateShopWnd_ResetBulkOnlyShop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.SwithBulkOnlyShop
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UPrivateShopWnd::STATIC_SwithBulkOnlyShop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.SwithBulkOnlyShop");

	UPrivateShopWnd_SwithBulkOnlyShop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.IsProperPrice
// (Final, Defined, Latent, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               Info                           (Parm, OutParm, NeedCtorLink)
// struct FINT64                  Price                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UPrivateShopWnd::STATIC_IsProperPrice(const struct FINT64& Price, struct FItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.IsProperPrice");

	UPrivateShopWnd_IsProperPrice_Params params;
	params.Price = Price;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;

	return params.ReturnValue;
}


// Function Interface.PrivateShopWnd.HandleSetMaxCount
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPrivateShopWnd::STATIC_HandleSetMaxCount(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.HandleSetMaxCount");

	UPrivateShopWnd_HandleSetMaxCount_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.HandleOKButton
// (Final, Defined, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bPriceCheck                    (Parm)

void UPrivateShopWnd::STATIC_HandleOKButton(bool bPriceCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.HandleOKButton");

	UPrivateShopWnd_HandleOKButton_Params params;
	params.bPriceCheck = bPriceCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.AdjustWeight
// (Iterator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UPrivateShopWnd::STATIC_AdjustWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.AdjustWeight");

	UPrivateShopWnd_AdjustWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.AdjustCount
// (Defined, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPrivateShopWnd::STATIC_AdjustCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.AdjustCount");

	UPrivateShopWnd_AdjustCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.AdjustPrice
// (Final, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPrivateShopWnd::STATIC_AdjustPrice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.AdjustPrice");

	UPrivateShopWnd_AdjustPrice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPrivateShopWnd::STATIC_HandleAddItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.HandleAddItem");

	UPrivateShopWnd_HandleAddItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.HandleOpenWindow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPrivateShopWnd::STATIC_HandleOpenWindow(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.HandleOpenWindow");

	UPrivateShopWnd_HandleOpenWindow_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPrivateShopWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.HandleDialogOK");

	UPrivateShopWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.MoveItemBottomToTop
// (Final, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// bool                           bAllItem                       (Parm)

void UPrivateShopWnd::STATIC_MoveItemBottomToTop(int Index, bool bAllItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.MoveItemBottomToTop");

	UPrivateShopWnd_MoveItemBottomToTop_Params params;
	params.Index = Index;
	params.bAllItem = bAllItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.MoveItemTopToBottom
// (Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// bool                           bAllItem                       (Parm)

void UPrivateShopWnd::STATIC_MoveItemTopToBottom(int Index, bool bAllItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.MoveItemTopToBottom");

	UPrivateShopWnd_MoveItemTopToBottom_Params params;
	params.Index = Index;
	params.bAllItem = bAllItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.RequestQuit
// (Final, Defined, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UPrivateShopWnd::STATIC_RequestQuit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.RequestQuit");

	UPrivateShopWnd_RequestQuit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UPrivateShopWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.Clear");

	UPrivateShopWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UPrivateShopWnd::STATIC_OnDropItem(const struct FString& strID, const struct FItemInfo& Info, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.OnDropItem");

	UPrivateShopWnd_OnDropItem_Params params;
	params.strID = strID;
	params.Info = Info;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UPrivateShopWnd::STATIC_OnClickItem(const struct FString& ControlName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.OnClickItem");

	UPrivateShopWnd_OnClickItem_Params params;
	params.ControlName = ControlName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.OnDBClickItem
// (Final, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UPrivateShopWnd::STATIC_OnDBClickItem(const struct FString& ControlName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.OnDBClickItem");

	UPrivateShopWnd_OnDBClickItem_Params params;
	params.ControlName = ControlName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)

void UPrivateShopWnd::STATIC_OnClickButton(const struct FString& ControlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.OnClickButton");

	UPrivateShopWnd_OnClickButton_Params params;
	params.ControlName = ControlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPrivateShopWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.OnEvent");

	UPrivateShopWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPrivateShopWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.OnHide");

	UPrivateShopWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.OnSendPacketWhenHiding
// (Final, Defined, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPrivateShopWnd::STATIC_OnSendPacketWhenHiding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.OnSendPacketWhenHiding");

	UPrivateShopWnd_OnSendPacketWhenHiding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPrivateShopWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.OnLoad");

	UPrivateShopWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PrivateShopWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPrivateShopWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PrivateShopWnd.OnRegisterEvent");

	UPrivateShopWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.ActiveFlightShort
// (Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_ActiveFlightShort()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.ActiveFlightShort");

	UShortcutAssignWnd_ActiveFlightShort_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.SwapReduntedShortcutItemwithCurrentShortcutItem
// (Final, Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_SwapReduntedShortcutItemwithCurrentShortcutItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.SwapReduntedShortcutItemwithCurrentShortcutItem");

	UShortcutAssignWnd_SwapReduntedShortcutItemwithCurrentShortcutItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.CheckShortcutItemRedundency
// (Defined, Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UShortcutAssignWnd::STATIC_CheckShortcutItemRedundency()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.CheckShortcutItemRedundency");

	UShortcutAssignWnd_CheckShortcutItemRedundency_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShortcutAssignWnd.DeleteCurrentShortcutItem
// (Final, Defined, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_DeleteCurrentShortcutItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.DeleteCurrentShortcutItem");

	UShortcutAssignWnd_DeleteCurrentShortcutItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.SetCurrentKeyAsShortKey
// (Defined, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_SetCurrentKeyAsShortKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.SetCurrentKeyAsShortKey");

	UShortcutAssignWnd_SetCurrentKeyAsShortKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.Switch2KeyBrowsingMode
// (Defined, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_Switch2KeyBrowsingMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.Switch2KeyBrowsingMode");

	UShortcutAssignWnd_Switch2KeyBrowsingMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.Switch2KeyInputMode
// (Final, Defined, Iterator, Latent, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_Switch2KeyInputMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.Switch2KeyInputMode");

	UShortcutAssignWnd_Switch2KeyInputMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.AssignCurrentSelectedKeyfromtheListCtrl
// (Final, NetReliable, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_AssignCurrentSelectedKeyfromtheListCtrl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.AssignCurrentSelectedKeyfromtheListCtrl");

	UShortcutAssignWnd_AssignCurrentSelectedKeyfromtheListCtrl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnResetAllBtnClickPopUpMessage
// (Defined, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_OnResetAllBtnClickPopUpMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnResetAllBtnClickPopUpMessage");

	UShortcutAssignWnd_OnResetAllBtnClickPopUpMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.HandleUpdateAirTransKeyListControl
// (Iterator, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_HandleUpdateAirTransKeyListControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.HandleUpdateAirTransKeyListControl");

	UShortcutAssignWnd_HandleUpdateAirTransKeyListControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.HandleUpdateAirKeyListControl
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_HandleUpdateAirKeyListControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.HandleUpdateAirKeyListControl");

	UShortcutAssignWnd_HandleUpdateAirKeyListControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.HandleUpdateEnterKeyListControl
// (Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_HandleUpdateEnterKeyListControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.HandleUpdateEnterKeyListControl");

	UShortcutAssignWnd_HandleUpdateEnterKeyListControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.HandleUpdateGeneralKeyListControl
// (Final, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_HandleUpdateGeneralKeyListControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.HandleUpdateGeneralKeyListControl");

	UShortcutAssignWnd_HandleUpdateGeneralKeyListControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.HandleResetUI2Default
// (Defined, Iterator, Latent, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_HandleResetUI2Default()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.HandleResetUI2Default");

	UShortcutAssignWnd_HandleResetUI2Default_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.HandleSwitchEnterchatting
// (NetReliable, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_HandleSwitchEnterchatting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.HandleSwitchEnterchatting");

	UShortcutAssignWnd_HandleSwitchEnterchatting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.ResetGMKeyActivate
// (Final, Latent, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_ResetGMKeyActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.ResetGMKeyActivate");

	UShortcutAssignWnd_ResetGMKeyActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.UIActivationUponStateChanges
// (Final, Iterator, Latent, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bTurnOff                       (Parm)

void UShortcutAssignWnd::STATIC_UIActivationUponStateChanges(bool bTurnOff)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.UIActivationUponStateChanges");

	UShortcutAssignWnd_UIActivationUponStateChanges_Params params;
	params.bTurnOff = bTurnOff;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UShortcutAssignWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnRegisterEvent");

	UShortcutAssignWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.InitializeWindowHandlesCOD
// (Final, Iterator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_InitializeWindowHandlesCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.InitializeWindowHandlesCOD");

	UShortcutAssignWnd_InitializeWindowHandlesCOD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.InitializeWindowHandles
// (Defined, Iterator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_InitializeWindowHandles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.InitializeWindowHandles");

	UShortcutAssignWnd_InitializeWindowHandles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.HandleDialogCancel
// (Final, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_HandleDialogCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.HandleDialogCancel");

	UShortcutAssignWnd_HandleDialogCancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.HandleDialogOK");

	UShortcutAssignWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnKeyDown
// (Iterator, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// TEnumAsByte<EInputKey>         Key                            (Parm)

void UShortcutAssignWnd::STATIC_OnKeyDown(class UWindowHandle* a_WindowHandle, TEnumAsByte<EInputKey> Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnKeyDown");

	UShortcutAssignWnd_OnKeyDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShortcutAssignWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnEvent");

	UShortcutAssignWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UShortcutAssignWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnHide");

	UShortcutAssignWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UShortcutAssignWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnShow");

	UShortcutAssignWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnClickCheckBox
// (Final, Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UShortcutAssignWnd::STATIC_OnClickCheckBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnClickCheckBox");

	UShortcutAssignWnd_OnClickCheckBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 Id                             (Parm, NeedCtorLink)

void UShortcutAssignWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnDBClickListCtrlRecord");

	UShortcutAssignWnd_OnDBClickListCtrlRecord_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UShortcutAssignWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnClickButton");

	UShortcutAssignWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnClickListCtrlRecord
// (Defined, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 Id                             (Parm, NeedCtorLink)

void UShortcutAssignWnd::STATIC_OnClickListCtrlRecord(const struct FString& Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnClickListCtrlRecord");

	UShortcutAssignWnd_OnClickListCtrlRecord_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UShortcutAssignWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.OnLoad");

	UShortcutAssignWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.GetUserReadableKeyName
// (Final, Defined, Iterator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Input                          (Parm, NeedCtorLink)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UShortcutAssignWnd::STATIC_GetUserReadableKeyName(const struct FString& Input)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.GetUserReadableKeyName");

	UShortcutAssignWnd_GetUserReadableKeyName_Params params;
	params.Input = Input;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShortcutAssignWnd.GetKeySettingDescriptionWithID
// (Iterator, Latent, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UShortcutAssignWnd::STATIC_GetKeySettingDescriptionWithID(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.GetKeySettingDescriptionWithID");

	UShortcutAssignWnd_GetKeySettingDescriptionWithID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShortcutAssignWnd.MakeFullShortcutKeyCombinationName
// (Final, Defined, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 MainKey                        (Parm, NeedCtorLink)
// struct FString                 subkey1                        (Parm, NeedCtorLink)
// struct FString                 subkey2                        (Parm, NeedCtorLink)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UShortcutAssignWnd::STATIC_MakeFullShortcutKeyCombinationName(const struct FString& MainKey, const struct FString& subkey1, const struct FString& subkey2)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.MakeFullShortcutKeyCombinationName");

	UShortcutAssignWnd_MakeFullShortcutKeyCombinationName_Params params;
	params.MainKey = MainKey;
	params.subkey1 = subkey1;
	params.subkey2 = subkey2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShortcutAssignWnd.GetShortcutItemNameWithID
// (Iterator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UShortcutAssignWnd::STATIC_GetShortcutItemNameWithID(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.GetShortcutItemNameWithID");

	UShortcutAssignWnd_GetShortcutItemNameWithID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShortcutAssignWnd.MakeSystemUserInputKeyCombination
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 MainKey                        (Parm, NeedCtorLink)
// bool                           subkeybool1                    (Parm)
// bool                           subkeybool2                    (Parm)
// bool                           subkeybool3                    (Parm)

void UShortcutAssignWnd::STATIC_MakeSystemUserInputKeyCombination(const struct FString& MainKey, bool subkeybool1, bool subkeybool2, bool subkeybool3)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.MakeSystemUserInputKeyCombination");

	UShortcutAssignWnd_MakeSystemUserInputKeyCombination_Params params;
	params.MainKey = MainKey;
	params.subkeybool1 = subkeybool1;
	params.subkeybool2 = subkeybool2;
	params.subkeybool3 = subkeybool3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutAssignWnd.MakeUserInputKeyCombinationName
// (Final, Iterator, Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 MainKey                        (Parm, NeedCtorLink)
// bool                           subkeybool1                    (Parm)
// bool                           subkeybool2                    (Parm)
// bool                           subkeybool3                    (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UShortcutAssignWnd::STATIC_MakeUserInputKeyCombinationName(const struct FString& MainKey, bool subkeybool1, bool subkeybool2, bool subkeybool3)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.MakeUserInputKeyCombinationName");

	UShortcutAssignWnd_MakeUserInputKeyCombinationName_Params params;
	params.MainKey = MainKey;
	params.subkeybool1 = subkeybool1;
	params.subkeybool2 = subkeybool2;
	params.subkeybool3 = subkeybool3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShortcutAssignWnd.IsReleaseActionItems
// (Final, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ActionName                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UShortcutAssignWnd::STATIC_IsReleaseActionItems(const struct FString& ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.IsReleaseActionItems");

	UShortcutAssignWnd_IsReleaseActionItems_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShortcutAssignWnd.IsValidKey
// (Final, Defined, Latent, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 KeyName                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UShortcutAssignWnd::STATIC_IsValidKey(const struct FString& KeyName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.IsValidKey");

	UShortcutAssignWnd_IsValidKey_Params params;
	params.KeyName = KeyName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShortcutAssignWnd.IsStandAloneKey
// (Iterator, Latent, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 KeyName                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UShortcutAssignWnd::STATIC_IsStandAloneKey(const struct FString& KeyName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.IsStandAloneKey");

	UShortcutAssignWnd_IsStandAloneKey_Params params;
	params.KeyName = KeyName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShortcutAssignWnd.DataSheetAssignKeyReplacement
// (Final, Iterator, Latent, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutAssignWnd::STATIC_DataSheetAssignKeyReplacement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutAssignWnd.DataSheetAssignKeyReplacement");

	UShortcutAssignWnd_DataSheetAssignKeyReplacement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.DoDefaultAction
// (Latent, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UDialogBox::STATIC_DoDefaultAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.DoDefaultAction");

	UDialogBox_DoDefaultAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.OnProgressTimeUp
// (Final, Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UDialogBox::STATIC_OnProgressTimeUp(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.OnProgressTimeUp");

	UDialogBox_OnProgressTimeUp_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.HandleNumberClick
// (Final, Latent, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UDialogBox::STATIC_HandleNumberClick(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.HandleNumberClick");

	UDialogBox_HandleNumberClick_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.HandleCancel
// (Final, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDialogBox::STATIC_HandleCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.HandleCancel");

	UDialogBox_HandleCancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.HandleOK
// (Iterator, Latent, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UDialogBox::STATIC_HandleOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.HandleOK");

	UDialogBox_HandleOK_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.SetButtonName
// (Final, Defined, Latent, PreOperator, Exec, Native, Event, Static, Const)
// Parameters:
// int                            indexOK                        (Parm)
// int                            indexCancel                    (Parm)

void UDialogBox::STATIC_SetButtonName(int indexOK, int indexCancel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetButtonName");

	UDialogBox_SetButtonName_Params params;
	params.indexOK = indexOK;
	params.indexCancel = indexCancel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.SetMessage
// (Defined, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strMessage                     (Parm, NeedCtorLink)

void UDialogBox::STATIC_SetMessage(const struct FString& strMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetMessage");

	UDialogBox_SetMessage_Params params;
	params.strMessage = strMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.SetWindowStyle
// (Iterator, Latent, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EDialogType>       Style                          (Parm)

void UDialogBox::STATIC_SetWindowStyle(TEnumAsByte<EDialogType> Style)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetWindowStyle");

	UDialogBox_SetWindowStyle_Params params;
	params.Style = Style;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.HideAll
// (Final, Iterator, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDialogBox::STATIC_HideAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.HideAll");

	UDialogBox_HideAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UDialogBox::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.Initialize");

	UDialogBox_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.OnChangeEditBox
// (Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UDialogBox::STATIC_OnChangeEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.OnChangeEditBox");

	UDialogBox_OnChangeEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UDialogBox::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.OnHide");

	UDialogBox_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UDialogBox::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.OnClickButton");

	UDialogBox_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.OnLoad
// (Final, Net, Operator, Static, Const)

void UDialogBox::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.OnLoad");

	UDialogBox_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.SetEditBoxMaxLength
// (Final, Iterator, Latent, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            maxLength                      (Parm)

void UDialogBox::STATIC_SetEditBoxMaxLength(int maxLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetEditBoxMaxLength");

	UDialogBox_SetEditBoxMaxLength_Params params;
	params.maxLength = maxLength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.GetReservedItemInfo
// (Defined, Iterator, Latent, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               Info                           (Parm, OutParm, NeedCtorLink)

void UDialogBox::STATIC_GetReservedItemInfo(struct FItemInfo* Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.GetReservedItemInfo");

	UDialogBox_GetReservedItemInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Info != nullptr)
		*Info = params.Info;
}


// Function Interface.DialogBox.GetReservedItemID
// (Final, Defined, Iterator, Latent, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 ReturnValue                    (Parm, OutParm, ReturnParm)

struct FItemID UDialogBox::STATIC_GetReservedItemID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.GetReservedItemID");

	UDialogBox_GetReservedItemID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.DialogBox.GetReservedInt3
// (PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UDialogBox::STATIC_GetReservedInt3()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.GetReservedInt3");

	UDialogBox_GetReservedInt3_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.DialogBox.GetReservedInt2
// (Final, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FINT64 UDialogBox::STATIC_GetReservedInt2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.GetReservedInt2");

	UDialogBox_GetReservedInt2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.DialogBox.GetReservedInt
// (Defined, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UDialogBox::STATIC_GetReservedInt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.GetReservedInt");

	UDialogBox_GetReservedInt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.DialogBox.SetReservedItemInfo
// (Final, Defined, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               Info                           (Parm, NeedCtorLink)

void UDialogBox::STATIC_SetReservedItemInfo(const struct FItemInfo& Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetReservedItemInfo");

	UDialogBox_SetReservedItemInfo_Params params;
	params.Info = Info;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.SetReservedItemID
// (Iterator, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 Id                             (Parm)

void UDialogBox::STATIC_SetReservedItemID(const struct FItemID& Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetReservedItemID");

	UDialogBox_SetReservedItemID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.SetReservedInt3
// (Final, Iterator, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Value                          (Parm)

void UDialogBox::STATIC_SetReservedInt3(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetReservedInt3");

	UDialogBox_SetReservedInt3_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.SetReservedInt2
// (Defined, Iterator, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  Value                          (Parm)

void UDialogBox::STATIC_SetReservedInt2(const struct FINT64& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetReservedInt2");

	UDialogBox_SetReservedInt2_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.SetReservedInt
// (Final, Defined, Iterator, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Value                          (Parm)

void UDialogBox::STATIC_SetReservedInt(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetReservedInt");

	UDialogBox_SetReservedInt_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.SetParamInt64
// (Latent, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  param                          (Parm)

void UDialogBox::STATIC_SetParamInt64(const struct FINT64& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetParamInt64");

	UDialogBox_SetParamInt64_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.SetEditType
// (Final, Defined, Latent, PreOperator, Singular, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 strType                        (Parm, NeedCtorLink)

void UDialogBox::STATIC_SetEditType(const struct FString& strType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetEditType");

	UDialogBox_SetEditType_Params params;
	params.strType = strType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.setId
// (Final, Singular, NetReliable, Simulated, Exec, Native, Operator, Static, Const)
// Parameters:
// int                            Id                             (Parm)

void UDialogBox::STATIC_setId(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.setId");

	UDialogBox_setId_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.GetID
// (Final, Latent, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UDialogBox::STATIC_GetID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.GetID");

	UDialogBox_GetID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.DialogBox.SetEditMessage
// (Final, Defined, Latent, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strMsg                         (Parm, NeedCtorLink)

void UDialogBox::STATIC_SetEditMessage(const struct FString& strMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetEditMessage");

	UDialogBox_SetEditMessage_Params params;
	params.strMsg = strMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.GetEditMessage
// (Final, Defined, Latent, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UDialogBox::STATIC_GetEditMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.GetEditMessage");

	UDialogBox_GetEditMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.DialogBox.GetTarget
// (Iterator, Latent, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UDialogBox::STATIC_GetTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.GetTarget");

	UDialogBox_GetTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.DialogBox.SetDefaultAction
// (Final, Defined, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EDialogDefaultAction> defaultAction                  (Parm)

void UDialogBox::STATIC_SetDefaultAction(TEnumAsByte<EDialogDefaultAction> defaultAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.SetDefaultAction");

	UDialogBox_SetDefaultAction_Params params;
	params.defaultAction = defaultAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.HideDialog
// (Final, Iterator, Latent, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UDialogBox::STATIC_HideDialog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.HideDialog");

	UDialogBox_HideDialog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DialogBox.ShowDialog
// (Final, Defined, Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EDialogType>       Style                          (Parm)
// struct FString                 Message                        (Parm, NeedCtorLink)
// struct FString                 Target                         (Parm, NeedCtorLink)

void UDialogBox::STATIC_ShowDialog(TEnumAsByte<EDialogType> Style, const struct FString& Message, const struct FString& Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DialogBox.ShowDialog");

	UDialogBox_ShowDialog_Params params;
	params.Style = Style;
	params.Message = Message;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.HandleDominionInfo
// (Final, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UGuideWnd::STATIC_HandleDominionInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.HandleDominionInfo");

	UGuideWnd_HandleDominionInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.HandleDominionInfoCnt
// (Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UGuideWnd::STATIC_HandleDominionInfoCnt(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.HandleDominionInfoCnt");

	UGuideWnd_HandleDominionInfoCnt_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.SetCastleLocData
// (Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_SetCastleLocData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.SetCastleLocData");

	UGuideWnd_SetCastleLocData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadFortressSeigeInfo
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UGuideWnd::STATIC_LoadFortressSeigeInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadFortressSeigeInfo");

	UGuideWnd_LoadFortressSeigeInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadAgitInfo
// (Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UGuideWnd::STATIC_LoadAgitInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadAgitInfo");

	UGuideWnd_LoadAgitInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadFortressInfo
// (Final, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UGuideWnd::STATIC_LoadFortressInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadFortressInfo");

	UGuideWnd_LoadFortressInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadCastleInfo
// (Final, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UGuideWnd::STATIC_LoadCastleInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadCastleInfo");

	UGuideWnd_LoadCastleInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.GetMapCastleID
// (Defined, Iterator, Singular, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 CastleName                     (Parm, NeedCtorLink)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UGuideWnd::STATIC_GetMapCastleID(const struct FString& CastleName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.GetMapCastleID");

	UGuideWnd_GetMapCastleID_Params params;
	params.CastleName = CastleName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GuideWnd.FortressSeigeInfoReq
// (Latent, Singular, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_FortressSeigeInfoReq()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.FortressSeigeInfoReq");

	UGuideWnd_FortressSeigeInfoReq_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.AgitInfo
// (PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_AgitInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.AgitInfo");

	UGuideWnd_AgitInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.FortressInfo
// (Defined, Latent, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_FortressInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.FortressInfo");

	UGuideWnd_FortressInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.CastleInfo
// (Latent, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_CastleInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.CastleInfo");

	UGuideWnd_CastleInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.conv_zoneName
// (PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            search_zoneid                  (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UGuideWnd::STATIC_conv_zoneName(int search_zoneid)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.conv_zoneName");

	UGuideWnd_conv_zoneName_Params params;
	params.search_zoneid = search_zoneid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GuideWnd.conv_zoneType
// (Defined, Iterator, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            ZoneTypeNum                    (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UGuideWnd::STATIC_conv_zoneType(int ZoneTypeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.conv_zoneType");

	UGuideWnd_conv_zoneType_Params params;
	params.ZoneTypeNum = ZoneTypeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GuideWnd.conv_dom
// (Final, Iterator, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ZoneNameNum                    (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UGuideWnd::STATIC_conv_dom(int ZoneNameNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.conv_dom");

	UGuideWnd_conv_dom_Params params;
	params.ZoneNameNum = ZoneNameNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GuideWnd.proc_combox
// (Defined, Latent, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ComboboxName                   (Parm, NeedCtorLink)

void UGuideWnd::STATIC_proc_combox(const struct FString& ComboboxName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.proc_combox");

	UGuideWnd_proc_combox_Params params;
	params.ComboboxName = ComboboxName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.comboxFiller
// (Latent, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ComboboxName                   (Parm, NeedCtorLink)

void UGuideWnd::STATIC_comboxFiller(const struct FString& ComboboxName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.comboxFiller");

	UGuideWnd_comboxFiller_Params params;
	params.ComboboxName = ComboboxName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadAreaInfoListSearchResult
// (Defined, Iterator, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SearchZone                     (Parm)

void UGuideWnd::STATIC_LoadAreaInfoListSearchResult(int SearchZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadAreaInfoListSearchResult");

	UGuideWnd_LoadAreaInfoListSearchResult_Params params;
	params.SearchZone = SearchZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.ResetArray
// (Final, Iterator, Latent, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_ResetArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.ResetArray");

	UGuideWnd_ResetArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadAreaInfoList
// (Final, Defined, Iterator, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_LoadAreaInfoList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadAreaInfoList");

	UGuideWnd_LoadAreaInfoList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadQuestSearchResult
// (Final, Iterator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SearchZone                     (Parm)

void UGuideWnd::STATIC_LoadQuestSearchResult(int SearchZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadQuestSearchResult");

	UGuideWnd_LoadQuestSearchResult_Params params;
	params.SearchZone = SearchZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.JustdisplayCurrentDataOnTheMap
// (Iterator, Singular, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_JustdisplayCurrentDataOnTheMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.JustdisplayCurrentDataOnTheMap");

	UGuideWnd_JustdisplayCurrentDataOnTheMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.displayCurrentDataOnTheMap
// (Final, Defined, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FVector                 currentloc                     (Parm)
// int                            txtureint                      (Parm)

void UGuideWnd::STATIC_displayCurrentDataOnTheMap(const struct FVector& currentloc, int txtureint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.displayCurrentDataOnTheMap");

	UGuideWnd_displayCurrentDataOnTheMap_Params params;
	params.currentloc = currentloc;
	params.txtureint = txtureint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadQuestList
// (Iterator, Latent, PreOperator, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_LoadQuestList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadQuestList");

	UGuideWnd_LoadQuestList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadRaidSearchResult
// (Final, Defined, Iterator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SearchZone                     (Parm)

void UGuideWnd::STATIC_LoadRaidSearchResult(int SearchZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadRaidSearchResult");

	UGuideWnd_LoadRaidSearchResult_Params params;
	params.SearchZone = SearchZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadRaidList2
// (Final, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_LoadRaidList2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadRaidList2");

	UGuideWnd_LoadRaidList2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadRaidList3
// (Defined, Iterator, Latent, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_LoadRaidList3()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadRaidList3");

	UGuideWnd_LoadRaidList3_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadRaidList
// (Final, Iterator, Latent, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGuideWnd::STATIC_LoadRaidList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadRaidList");

	UGuideWnd_LoadRaidList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadRaidRanking
// (Final, Latent, Singular, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_LoadRaidRanking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadRaidRanking");

	UGuideWnd_LoadRaidRanking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadHuntingZoneListSearchResult
// (Final, Latent, PreOperator, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SearchZone                     (Parm)

void UGuideWnd::STATIC_LoadHuntingZoneListSearchResult(int SearchZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadHuntingZoneListSearchResult");

	UGuideWnd_LoadHuntingZoneListSearchResult_Params params;
	params.SearchZone = SearchZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.LoadHuntingZoneList
// (Iterator, Latent, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_LoadHuntingZoneList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.LoadHuntingZoneList");

	UGuideWnd_LoadHuntingZoneList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGuideWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.OnEvent");

	UGuideWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.OnClickListCtrlRecord
// (Defined, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 Id                             (Parm, NeedCtorLink)

void UGuideWnd::STATIC_OnClickListCtrlRecord(const struct FString& Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.OnClickListCtrlRecord");

	UGuideWnd_OnClickListCtrlRecord_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 sName                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UGuideWnd::STATIC_OnComboBoxItemSelected(const struct FString& sName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.OnComboBoxItemSelected");

	UGuideWnd_OnComboBoxItemSelected_Params params;
	params.sName = sName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.swapReset
// (Defined, Latent, Singular, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_swapReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.swapReset");

	UGuideWnd_swapReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.swaptab2
// (Final, Defined, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_swaptab2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.swaptab2");

	UGuideWnd_swaptab2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.swaptab1
// (Final, Iterator, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_swaptab1()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.swaptab1");

	UGuideWnd_swaptab1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Id                             (Parm, NeedCtorLink)

void UGuideWnd::STATIC_OnClickButton(const struct FString& Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.OnClickButton");

	UGuideWnd_OnClickButton_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGuideWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.OnHide");

	UGuideWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGuideWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.OnShow");

	UGuideWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.DisableTabBtn
// (Defined, Latent, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGuideWnd::STATIC_DisableTabBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.DisableTabBtn");

	UGuideWnd_DisableTabBtn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UGuideWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.OnTimer");

	UGuideWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UGuideWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.OnLoad");

	UGuideWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GuideWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UGuideWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GuideWnd.OnRegisterEvent");

	UGuideWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatFilterWnd.SetComboxIDSelect
// (Final, Iterator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// int                            Id                             (Parm)

void UChatFilterWnd::STATIC_SetComboxIDSelect(int Index, int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatFilterWnd.SetComboxIDSelect");

	UChatFilterWnd_SetComboxIDSelect_Params params;
	params.Index = Index;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatFilterWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            IndexID                        (Parm)

void UChatFilterWnd::STATIC_OnComboBoxItemSelected(const struct FString& strID, int IndexID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatFilterWnd.OnComboBoxItemSelected");

	UChatFilterWnd_OnComboBoxItemSelected_Params params;
	params.strID = strID;
	params.IndexID = IndexID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatFilterWnd.SaveChatFilterOption
// (Defined, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UChatFilterWnd::STATIC_SaveChatFilterOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatFilterWnd.SaveChatFilterOption");

	UChatFilterWnd_SaveChatFilterOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatFilterWnd.OnClickCheckBox
// (Final, Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UChatFilterWnd::STATIC_OnClickCheckBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatFilterWnd.OnClickCheckBox");

	UChatFilterWnd_OnClickCheckBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatFilterWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UChatFilterWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatFilterWnd.OnClickButton");

	UChatFilterWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatFilterWnd.FillOutComboBoxHandle
// (Iterator, Latent, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)

void UChatFilterWnd::STATIC_FillOutComboBoxHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatFilterWnd.FillOutComboBoxHandle");

	UChatFilterWnd_FillOutComboBoxHandle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatFilterWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UChatFilterWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatFilterWnd.OnShow");

	UChatFilterWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatFilterWnd.InitTabOrder
// (Final, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UChatFilterWnd::STATIC_InitTabOrder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatFilterWnd.InitTabOrder");

	UChatFilterWnd_InitTabOrder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ChatFilterWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UChatFilterWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ChatFilterWnd.OnLoad");

	UChatFilterWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.LoadGameOption
// (Final, Latent, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_LoadGameOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.LoadGameOption");

	UOptionWnd_LoadGameOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.LoadAudioOption
// (Defined, Latent, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_LoadAudioOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.LoadAudioOption");

	UOptionWnd_LoadAudioOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.LoadVideoOption
// (Final, Defined, Latent, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_LoadVideoOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.LoadVideoOption");

	UOptionWnd_LoadVideoOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.SetTutorialData
// (Defined, Latent, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bOption                        (Parm)

void UOptionWnd::STATIC_SetTutorialData(bool bOption)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.SetTutorialData");

	UOptionWnd_SetTutorialData_Params params;
	params.bOption = bOption;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UOptionWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnTimer");

	UOptionWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.SetStuck
// (Final, Latent, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           A                              (Parm)

void UOptionWnd::STATIC_SetStuck(bool A)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.SetStuck");

	UOptionWnd_SetStuck_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.OnDefaultPosition
// (Defined, Iterator, PreOperator, Singular, Operator, Static, Const)

void UOptionWnd::STATIC_OnDefaultPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnDefaultPosition");

	UOptionWnd_OnDefaultPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.OnModifyCurrentTickSliderCtrl
// (Final, Defined, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            iCurrentTick                   (Parm)

void UOptionWnd::STATIC_OnModifyCurrentTickSliderCtrl(const struct FString& strID, int iCurrentTick)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnModifyCurrentTickSliderCtrl");

	UOptionWnd_OnModifyCurrentTickSliderCtrl_Params params;
	params.strID = strID;
	params.iCurrentTick = iCurrentTick;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 sName                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UOptionWnd::STATIC_OnComboBoxItemSelected(const struct FString& sName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnComboBoxItemSelected");

	UOptionWnd_OnComboBoxItemSelected_Params params;
	params.sName = sName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UOptionWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnEvent");

	UOptionWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.MinFrameRateOff
// (Iterator, Net, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_MinFrameRateOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.MinFrameRateOff");

	UOptionWnd_MinFrameRateOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.MinFrameRateOn
// (Final, Defined, Net, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_MinFrameRateOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.MinFrameRateOn");

	UOptionWnd_MinFrameRateOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.AirStateOff
// (Defined, Iterator, Latent, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_AirStateOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.AirStateOff");

	UOptionWnd_AirStateOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.AirStateOn
// (Final, Defined, Iterator, Latent, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_AirStateOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.AirStateOn");

	UOptionWnd_AirStateOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.GetVolumeFromSliderTick
// (Defined, Iterator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            iTick                          (Parm)
// float                          ReturnValue                    (Parm, OutParm, ReturnParm)

float UOptionWnd::STATIC_GetVolumeFromSliderTick(int iTick)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.GetVolumeFromSliderTick");

	UOptionWnd_GetVolumeFromSliderTick_Params params;
	params.iTick = iTick;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.OptionWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UOptionWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnClickButton");

	UOptionWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.ApplyGameOption
// (Final, Defined, Iterator, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_ApplyGameOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.ApplyGameOption");

	UOptionWnd_ApplyGameOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.ApplyAudioOption
// (Defined, Iterator, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_ApplyAudioOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.ApplyAudioOption");

	UOptionWnd_ApplyAudioOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.ApplyVideoOption
// (Final, Iterator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_ApplyVideoOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.ApplyVideoOption");

	UOptionWnd_ApplyVideoOption_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UOptionWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnHide");

	UOptionWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UOptionWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnShow");

	UOptionWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.OnClickCheckBox
// (Final, Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UOptionWnd::STATIC_OnClickCheckBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnClickCheckBox");

	UOptionWnd_OnClickCheckBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.InitGameOption
// (Final, Iterator, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_InitGameOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.InitGameOption");

	UOptionWnd_InitGameOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.InitAudioOption
// (Final, Defined, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_InitAudioOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.InitAudioOption");

	UOptionWnd_InitAudioOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.InitVideoOption
// (Defined, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_InitVideoOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.InitVideoOption");

	UOptionWnd_InitVideoOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.GetPawnValue
// (Final, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iCurrTick                      (Parm, OutParm)
// int                            iNumTick                       (Parm)
// int                            Min                            (Parm)
// int                            Max                            (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UOptionWnd::STATIC_GetPawnValue(int iNumTick, int Min, int Max, int* iCurrTick)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.GetPawnValue");

	UOptionWnd_GetPawnValue_Params params;
	params.iNumTick = iNumTick;
	params.Min = Min;
	params.Max = Max;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (iCurrTick != nullptr)
		*iCurrTick = params.iCurrTick;

	return params.ReturnValue;
}


// Function Interface.OptionWnd.RefreshLootingBox
// (Final, Iterator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_RefreshLootingBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.RefreshLootingBox");

	UOptionWnd_RefreshLootingBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UOptionWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnLoad");

	UOptionWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.InitHandleCOD");

	UOptionWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UOptionWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.InitHandle");

	UOptionWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UOptionWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.OnRegisterEvent");

	UOptionWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OptionWnd.ResetRefreshRate
// (PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_nWidth                       (OptionalParm, Parm)
// int                            a_nHeight                      (OptionalParm, Parm)

void UOptionWnd::STATIC_ResetRefreshRate(int a_nWidth, int a_nHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OptionWnd.ResetRefreshRate");

	UOptionWnd_ResetRefreshRate_Params params;
	params.a_nWidth = a_nWidth;
	params.a_nHeight = a_nHeight;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemGetWnd.clearInfo
// (Defined, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UPremiumItemGetWnd::STATIC_clearInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemGetWnd.clearInfo");

	UPremiumItemGetWnd_clearInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemGetWnd.AddPremiumListItem
// (Final, Iterator, Latent, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iGift                          (Parm)
// int                            iItemClassID                   (Parm)
// struct FINT64                  iItemAmount                    (Parm)
// struct FString                 senderCharacter                (Parm, NeedCtorLink)
// int                            iIndexID                       (Parm)

void UPremiumItemGetWnd::STATIC_AddPremiumListItem(int iGift, int iItemClassID, const struct FINT64& iItemAmount, const struct FString& senderCharacter, int iIndexID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemGetWnd.AddPremiumListItem");

	UPremiumItemGetWnd_AddPremiumListItem_Params params;
	params.iGift = iGift;
	params.iItemClassID = iItemClassID;
	params.iItemAmount = iItemAmount;
	params.senderCharacter = senderCharacter;
	params.iIndexID = iIndexID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemGetWnd.HandlePremiumItemList
// (Defined, Iterator, Latent, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPremiumItemGetWnd::STATIC_HandlePremiumItemList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemGetWnd.HandlePremiumItemList");

	UPremiumItemGetWnd_HandlePremiumItemList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemGetWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPremiumItemGetWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemGetWnd.OnEvent");

	UPremiumItemGetWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemGetWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UPremiumItemGetWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemGetWnd.OnClickButton");

	UPremiumItemGetWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemGetWnd.createTreeRoot
// (Final, Defined, Iterator, Latent, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)

void UPremiumItemGetWnd::STATIC_createTreeRoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemGetWnd.createTreeRoot");

	UPremiumItemGetWnd_createTreeRoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemGetWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UPremiumItemGetWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemGetWnd.Clear");

	UPremiumItemGetWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemGetWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPremiumItemGetWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemGetWnd.OnLoad");

	UPremiumItemGetWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemGetWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPremiumItemGetWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemGetWnd.OnRegisterEvent");

	UPremiumItemGetWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.ResetVName
// (Iterator, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_ResetVName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.ResetVName");

	UPARTYWND_ResetVName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnDropWnd
// (Final, Defined, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           hTarget                        (Parm)
// class UWindowHandle*           hDropWnd                       (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UPARTYWND::STATIC_OnDropWnd(class UWindowHandle* hTarget, class UWindowHandle* hDropWnd, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnDropWnd");

	UPARTYWND_OnDropWnd_Params params;
	params.hTarget = hTarget;
	params.hDropWnd = hDropWnd;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.SetBuffButtonTooltip
// (Final, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_SetBuffButtonTooltip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.SetBuffButtonTooltip");

	UPARTYWND_SetBuffButtonTooltip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.GetIdx
// (Final, Defined, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Y                              (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UPARTYWND::STATIC_GetIdx(int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.GetIdx");

	UPARTYWND_GetIdx_Params params;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PARTYWND.OnRButtonDown
// (Final, Defined, Iterator, Latent, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UPARTYWND::STATIC_OnRButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnRButtonDown");

	UPARTYWND_OnRButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnLButtonDown
// (Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UPARTYWND::STATIC_OnLButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnLButtonDown");

	UPARTYWND_OnLButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.UpdateMPBar
// (Defined, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)
// int                            Value                          (Parm)
// int                            MaxValue                       (Parm)

void UPARTYWND::STATIC_UpdateMPBar(int idx, int Value, int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.UpdateMPBar");

	UPARTYWND_UpdateMPBar_Params params;
	params.idx = idx;
	params.Value = Value;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.UpdateHPBar
// (Final, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)
// int                            Value                          (Parm)
// int                            MaxValue                       (Parm)

void UPARTYWND::STATIC_UpdateHPBar(int idx, int Value, int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.UpdateHPBar");

	UPARTYWND_UpdateHPBar_Params params;
	params.idx = idx;
	params.Value = Value;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.UpdateCPBar
// (Final, Defined, Iterator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)
// int                            Value                          (Parm)
// int                            MaxValue                       (Parm)

void UPARTYWND::STATIC_UpdateCPBar(int idx, int Value, int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.UpdateCPBar");

	UPARTYWND_UpdateCPBar_Params params;
	params.idx = idx;
	params.Value = Value;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.UpdateBuff
// (Final, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_UpdateBuff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.UpdateBuff");

	UPARTYWND_UpdateBuff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnBuffButton
// (Iterator, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_OnBuffButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnBuffButton");

	UPARTYWND_OnBuffButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnOpenPartyWndOption
// (Final, Iterator, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_OnOpenPartyWndOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnOpenPartyWndOption");

	UPARTYWND_OnOpenPartyWndOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnClickButton");

	UPARTYWND_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandleShowBuffIcon
// (Final, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_HandleShowBuffIcon(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandleShowBuffIcon");

	UPARTYWND_HandleShowBuffIcon_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandlePartySpelledList
// (Iterator, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_HandlePartySpelledList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandlePartySpelledList");

	UPARTYWND_HandlePartySpelledList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.UpdatePetStatus
// (Defined, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_UpdatePetStatus(int idx, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.UpdatePetStatus");

	UPARTYWND_UpdatePetStatus_Params params;
	params.idx = idx;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandlePartySummonDelete
// (Final, Defined, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_HandlePartySummonDelete(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandlePartySummonDelete");

	UPARTYWND_HandlePartySummonDelete_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandlePartySummonUpdate
// (Defined, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_HandlePartySummonUpdate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandlePartySummonUpdate");

	UPARTYWND_HandlePartySummonUpdate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandlePartySummonAdd
// (Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_HandlePartySummonAdd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandlePartySummonAdd");

	UPARTYWND_HandlePartySummonAdd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.UpdateStatus
// (Iterator, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_UpdateStatus(int idx, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.UpdateStatus");

	UPARTYWND_UpdateStatus_Params params;
	params.idx = idx;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandlePartyDeleteAllParty
// (Final, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_HandlePartyDeleteAllParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandlePartyDeleteAllParty");

	UPARTYWND_HandlePartyDeleteAllParty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandlePartyDeleteParty
// (Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_HandlePartyDeleteParty(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandlePartyDeleteParty");

	UPARTYWND_HandlePartyDeleteParty_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandlePartyUpdateParty
// (Final, Defined, Iterator, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_HandlePartyUpdateParty(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandlePartyUpdateParty");

	UPARTYWND_HandlePartyUpdateParty_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandlePartyAddParty
// (Defined, Iterator, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_HandlePartyAddParty(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandlePartyAddParty");

	UPARTYWND_HandlePartyAddParty_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.FindPetID
// (Final, Iterator, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UPARTYWND::STATIC_FindPetID(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.FindPetID");

	UPARTYWND_FindPetID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PARTYWND.FindPartyID
// (Defined, Iterator, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UPARTYWND::STATIC_FindPartyID(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.FindPartyID");

	UPARTYWND_FindPartyID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PARTYWND.ResizeWnd
// (Defined, Iterator, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_ResizeWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.ResizeWnd");

	UPARTYWND_ResizeWnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.CopyStatus
// (Final, Defined, Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            DesIndex                       (Parm)
// int                            SrcIndex                       (Parm)

void UPARTYWND::STATIC_CopyStatus(int DesIndex, int SrcIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.CopyStatus");

	UPARTYWND_CopyStatus_Params params;
	params.DesIndex = DesIndex;
	params.SrcIndex = SrcIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.ClearPetStatus
// (Defined, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)

void UPARTYWND::STATIC_ClearPetStatus(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.ClearPetStatus");

	UPARTYWND_ClearPetStatus_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.ClearStatus
// (Defined, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)

void UPARTYWND::STATIC_ClearStatus(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.ClearStatus");

	UPARTYWND_ClearStatus_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UPARTYWND::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.Clear");

	UPARTYWND_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandleRestart
// (Final, Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_HandleRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandleRestart");

	UPARTYWND_HandleRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandleCheckTarget
// (Final, Defined, Iterator, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_HandleCheckTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandleCheckTarget");

	UPARTYWND_HandleCheckTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.HandlePartyRenameMember
// (Iterator, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_HandlePartyRenameMember(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.HandlePartyRenameMember");

	UPARTYWND_HandlePartyRenameMember_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPARTYWND::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnEvent");

	UPARTYWND_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UPARTYWND::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnEnterState");

	UPARTYWND_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPARTYWND::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnHide");

	UPARTYWND_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPARTYWND::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnShow");

	UPARTYWND_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.InitHandleCOD");

	UPARTYWND_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPARTYWND::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.InitHandle");

	UPARTYWND_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnLoad
// (Final, Net, Operator, Static, Const)

void UPARTYWND::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnLoad");

	UPARTYWND_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PARTYWND.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPARTYWND::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PARTYWND.OnRegisterEvent");

	UPARTYWND_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ColorNickNameWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 ButtonName                     (Parm, NeedCtorLink)

void UColorNickNameWnd::STATIC_OnClickButton(const struct FString& ButtonName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ColorNickNameWnd.OnClickButton");

	UColorNickNameWnd_OnClickButton_Params params;
	params.ButtonName = ButtonName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ColorNickNameWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 ComboboxName                   (Parm, NeedCtorLink)
// int                            Id                             (Parm)

void UColorNickNameWnd::STATIC_OnComboBoxItemSelected(const struct FString& ComboboxName, int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ColorNickNameWnd.OnComboBoxItemSelected");

	UColorNickNameWnd_OnComboBoxItemSelected_Params params;
	params.ComboboxName = ComboboxName;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ColorNickNameWnd.OnOpenWnd
// (Defined, Iterator, Latent, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UColorNickNameWnd::STATIC_OnOpenWnd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ColorNickNameWnd.OnOpenWnd");

	UColorNickNameWnd_OnOpenWnd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ColorNickNameWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            EventID                        (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UColorNickNameWnd::STATIC_OnEvent(int EventID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ColorNickNameWnd.OnEvent");

	UColorNickNameWnd_OnEvent_Params params;
	params.EventID = EventID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ColorNickNameWnd.OnChangeEditBox
// (Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UColorNickNameWnd::STATIC_OnChangeEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ColorNickNameWnd.OnChangeEditBox");

	UColorNickNameWnd_OnChangeEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ColorNickNameWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UColorNickNameWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ColorNickNameWnd.OnLoad");

	UColorNickNameWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ColorNickNameWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UColorNickNameWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ColorNickNameWnd.OnRegisterEvent");

	UColorNickNameWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.HandleEnchantResult
// (Final, Defined, Iterator, Latent, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UItemEnchantWnd::STATIC_HandleEnchantResult(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.HandleEnchantResult");

	UItemEnchantWnd_HandleEnchantResult_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.HandletPutSupportItemResult
// (PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UItemEnchantWnd::STATIC_HandletPutSupportItemResult(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.HandletPutSupportItemResult");

	UItemEnchantWnd_HandletPutSupportItemResult_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.CheckScrollType
// (Final, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UItemEnchantWnd::STATIC_CheckScrollType(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.CheckScrollType");

	UItemEnchantWnd_CheckScrollType_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ItemEnchantWnd.HandlePutTargetItemResult
// (Defined, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UItemEnchantWnd::STATIC_HandlePutTargetItemResult(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.HandlePutTargetItemResult");

	UItemEnchantWnd_HandlePutTargetItemResult_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_WindowID                     (Parm, NeedCtorLink)
// struct FItemInfo               a_ItemInfo                     (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UItemEnchantWnd::STATIC_OnDropItem(const struct FString& a_WindowID, const struct FItemInfo& a_ItemInfo, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.OnDropItem");

	UItemEnchantWnd_OnDropItem_Params params;
	params.a_WindowID = a_WindowID;
	params.a_ItemInfo = a_ItemInfo;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UItemEnchantWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.OnHide");

	UItemEnchantWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.EnableCloverSlot
// (Defined, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UItemEnchantWnd::STATIC_EnableCloverSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.EnableCloverSlot");

	UItemEnchantWnd_EnableCloverSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.ResetUI
// (Final, Defined, Iterator, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UItemEnchantWnd::STATIC_ResetUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.ResetUI");

	UItemEnchantWnd_ResetUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.HandleEnchantShow
// (Iterator, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UItemEnchantWnd::STATIC_HandleEnchantShow(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.HandleEnchantShow");

	UItemEnchantWnd_HandleEnchantShow_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.OnTextureAnimEnd
// (Final, Iterator, Latent, Operator, Static, Const)
// Parameters:
// class UAnimTextureHandle*      a_WindowHandle                 (Parm)

void UItemEnchantWnd::STATIC_OnTextureAnimEnd(class UAnimTextureHandle* a_WindowHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.OnTextureAnimEnd");

	UItemEnchantWnd_OnTextureAnimEnd_Params params;
	params.a_WindowHandle = a_WindowHandle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.ProcCancel
// (Final, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UItemEnchantWnd::STATIC_ProcCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.ProcCancel");

	UItemEnchantWnd_ProcCancel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.OnEnchantBtnClick
// (Defined, Iterator, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UItemEnchantWnd::STATIC_OnEnchantBtnClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.OnEnchantBtnClick");

	UItemEnchantWnd_OnEnchantBtnClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UItemEnchantWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.OnEvent");

	UItemEnchantWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UItemEnchantWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.OnClickButton");

	UItemEnchantWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UItemEnchantWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.Load");

	UItemEnchantWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UItemEnchantWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.OnRegisterEvent");

	UItemEnchantWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UItemEnchantWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.Initialize");

	UItemEnchantWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemEnchantWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UItemEnchantWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemEnchantWnd.OnLoad");

	UItemEnchantWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMultiSellWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.HandleDialogOK");

	UMultiSellWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.HandleOKButton
// (Final, Defined, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMultiSellWnd::STATIC_HandleOKButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.HandleOKButton");

	UMultiSellWnd_HandleOKButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.ShowItemList
// (Final, Defined, Iterator, PreOperator, Operator, Static, HasOptionalParms, Const)

void UMultiSellWnd::STATIC_ShowItemList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.ShowItemList");

	UMultiSellWnd_ShowItemList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.HandleMultiSellInfoListEnd
// (Final, Latent, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMultiSellWnd::STATIC_HandleMultiSellInfoListEnd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.HandleMultiSellInfoListEnd");

	UMultiSellWnd_HandleMultiSellInfoListEnd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.HandelMultiSellInputItemInfo
// (Defined, Latent, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMultiSellWnd::STATIC_HandelMultiSellInputItemInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.HandelMultiSellInputItemInfo");

	UMultiSellWnd_HandelMultiSellInputItemInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.HandelMultiSellOutputItemInfo
// (Final, Defined, Latent, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMultiSellWnd::STATIC_HandelMultiSellOutputItemInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.HandelMultiSellOutputItemInfo");

	UMultiSellWnd_HandelMultiSellOutputItemInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.HandleMultiSellResultItemInfo
// (Iterator, Latent, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMultiSellWnd::STATIC_HandleMultiSellResultItemInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.HandleMultiSellResultItemInfo");

	UMultiSellWnd_HandleMultiSellResultItemInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.HandleMultiSellInfoListBegin
// (Final, Iterator, Latent, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMultiSellWnd::STATIC_HandleMultiSellInfoListBegin(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.HandleMultiSellInfoListBegin");

	UMultiSellWnd_HandleMultiSellInfoListBegin_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UMultiSellWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.Clear");

	UMultiSellWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.Print
// (Defined, Iterator, Singular, Native, Event, Static, Const)

void UMultiSellWnd::STATIC_Print()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.Print");

	UMultiSellWnd_Print_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UMultiSellWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.OnClickItem");

	UMultiSellWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)

void UMultiSellWnd::STATIC_OnClickButton(const struct FString& ControlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.OnClickButton");

	UMultiSellWnd_OnClickButton_Params params;
	params.ControlName = ControlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMultiSellWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.OnHide");

	UMultiSellWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMultiSellWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.OnShow");

	UMultiSellWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UMultiSellWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.OnEvent");

	UMultiSellWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMultiSellWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.OnLoad");

	UMultiSellWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MultiSellWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMultiSellWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MultiSellWnd.OnRegisterEvent");

	UMultiSellWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.IsNoBarID
// (Final, Defined, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            m_targetID                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UTargetStatusWnd::STATIC_IsNoBarID(int m_targetID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.IsNoBarID");

	UTargetStatusWnd_IsNoBarID_Params params;
	params.m_targetID = m_targetID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.TargetStatusWnd.IsAllWhiteID
// (Iterator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            m_targetID                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UTargetStatusWnd::STATIC_IsAllWhiteID(int m_targetID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.IsAllWhiteID");

	UTargetStatusWnd_IsAllWhiteID_Params params;
	params.m_targetID = m_targetID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.TargetStatusWnd.SetNpcInfoTooltip
// (Final, Iterator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// int                            Level                          (Parm)
// struct FCustomTooltip          ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FCustomTooltip UTargetStatusWnd::STATIC_SetNpcInfoTooltip(int Id, int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.SetNpcInfoTooltip");

	UTargetStatusWnd_SetNpcInfoTooltip_Params params;
	params.Id = Id;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.TargetStatusWnd.UpdateNpcInfoTree
// (Final, Defined, Iterator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// TArray<int>                    arrNpcInfo                     (Parm, NeedCtorLink)

void UTargetStatusWnd::STATIC_UpdateNpcInfoTree(TArray<int> arrNpcInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.UpdateNpcInfoTree");

	UTargetStatusWnd_UpdateNpcInfoTree_Params params;
	params.arrNpcInfo = arrNpcInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.UpdateMPBar
// (Defined, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            MP                             (Parm)
// int                            MaxMP                          (Parm)

void UTargetStatusWnd::STATIC_UpdateMPBar(int MP, int MaxMP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.UpdateMPBar");

	UTargetStatusWnd_UpdateMPBar_Params params;
	params.MP = MP;
	params.MaxMP = MaxMP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.UpdateHPBar
// (Final, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            HP                             (Parm)
// int                            MaxHP                          (Parm)

void UTargetStatusWnd::STATIC_UpdateHPBar(int HP, int MaxHP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.UpdateHPBar");

	UTargetStatusWnd_UpdateHPBar_Params params;
	params.HP = HP;
	params.MaxHP = MaxHP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.SetExpandMode
// (Final, Defined, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bExpand                        (Parm)

void UTargetStatusWnd::STATIC_SetExpandMode(bool bExpand)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.SetExpandMode");

	UTargetStatusWnd_SetExpandMode_Params params;
	params.bExpand = bExpand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.GetTargetNameColor
// (PreOperator, Singular, Net, Exec, Operator, Static, Const)
// Parameters:
// int                            TargetLevelDiff                (Parm)
// struct FColor                  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FColor UTargetStatusWnd::STATIC_GetTargetNameColor(int TargetLevelDiff)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.GetTargetNameColor");

	UTargetStatusWnd_GetTargetNameColor_Params params;
	params.TargetLevelDiff = TargetLevelDiff;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.TargetStatusWnd.HandleTargetUpdate
// (Iterator, Latent, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTargetStatusWnd::STATIC_HandleTargetUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.HandleTargetUpdate");

	UTargetStatusWnd_HandleTargetUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.HandleTargetUpdateGauge
// (Latent, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            type                           (Parm)

void UTargetStatusWnd::STATIC_HandleTargetUpdateGauge(int type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.HandleTargetUpdateGauge");

	UTargetStatusWnd_HandleTargetUpdateGauge_Params params;
	params.type = type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.HandleReceiveTargetLevelDiff
// (Final, Latent, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UTargetStatusWnd::STATIC_HandleReceiveTargetLevelDiff(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.HandleReceiveTargetLevelDiff");

	UTargetStatusWnd_HandleReceiveTargetLevelDiff_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.HandleUpdateGauge
// (Final, Defined, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// int                            type                           (Parm)

void UTargetStatusWnd::STATIC_HandleUpdateGauge(const struct FString& param, int type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.HandleUpdateGauge");

	UTargetStatusWnd_HandleUpdateGauge_Params params;
	params.param = param;
	params.type = type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnCloseButton
// (Defined, Latent, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UTargetStatusWnd::STATIC_OnCloseButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnCloseButton");

	UTargetStatusWnd_OnCloseButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UTargetStatusWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnClickButton");

	UTargetStatusWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UTargetStatusWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnEvent");

	UTargetStatusWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UTargetStatusWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnEnterState");

	UTargetStatusWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UTargetStatusWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnHide");

	UTargetStatusWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UTargetStatusWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnShow");

	UTargetStatusWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UTargetStatusWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnTimer");

	UTargetStatusWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnRotateReset
// (Final, Defined, Latent, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UTargetStatusWnd::STATIC_OnRotateReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnRotateReset");

	UTargetStatusWnd_OnRotateReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnRotateClose
// (Final, Defined, Iterator, Operator, Static, HasOptionalParms, Const)

void UTargetStatusWnd::STATIC_OnRotateClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnRotateClose");

	UTargetStatusWnd_OnRotateClose_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnRotate2
// (Final, Defined, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UTargetStatusWnd::STATIC_OnRotate2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnRotate2");

	UTargetStatusWnd_OnRotate2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnRotate1
// (Defined, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UTargetStatusWnd::STATIC_OnRotate1()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnRotate1");

	UTargetStatusWnd_OnRotate1_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnShowProcess
// (Latent, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UTargetStatusWnd::STATIC_OnShowProcess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnShowProcess");

	UTargetStatusWnd_OnShowProcess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTargetStatusWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.Load");

	UTargetStatusWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTargetStatusWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.InitializeCOD");

	UTargetStatusWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UTargetStatusWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.Initialize");

	UTargetStatusWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UTargetStatusWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnLoad");

	UTargetStatusWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TargetStatusWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UTargetStatusWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TargetStatusWnd.OnRegisterEvent");

	UTargetStatusWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchMakeRoomWnd.SetMaxPartyMemberCount
// (Defined, Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_MaxPartyMemberCount          (Parm)

void UPartyMatchMakeRoomWnd::STATIC_SetMaxPartyMemberCount(int a_MaxPartyMemberCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchMakeRoomWnd.SetMaxPartyMemberCount");

	UPartyMatchMakeRoomWnd_SetMaxPartyMemberCount_Params params;
	params.a_MaxPartyMemberCount = a_MaxPartyMemberCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchMakeRoomWnd.SetMaxLevel
// (Final, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_MaxLevel                     (Parm)

void UPartyMatchMakeRoomWnd::STATIC_SetMaxLevel(int a_MaxLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchMakeRoomWnd.SetMaxLevel");

	UPartyMatchMakeRoomWnd_SetMaxLevel_Params params;
	params.a_MaxLevel = a_MaxLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchMakeRoomWnd.SetMinLevel
// (Final, Defined, Iterator, Latent, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_MinLevel                     (Parm)

void UPartyMatchMakeRoomWnd::STATIC_SetMinLevel(int a_MinLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchMakeRoomWnd.SetMinLevel");

	UPartyMatchMakeRoomWnd_SetMinLevel_Params params;
	params.a_MinLevel = a_MinLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchMakeRoomWnd.SetTitle
// (Defined, Latent, Singular, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 a_Title                        (Parm, NeedCtorLink)

void UPartyMatchMakeRoomWnd::STATIC_SetTitle(const struct FString& a_Title)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchMakeRoomWnd.SetTitle");

	UPartyMatchMakeRoomWnd_SetTitle_Params params;
	params.a_Title = a_Title;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchMakeRoomWnd.SetRoomNumber
// (Final, Iterator, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_RoomNumber                   (Parm)

void UPartyMatchMakeRoomWnd::STATIC_SetRoomNumber(int a_RoomNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchMakeRoomWnd.SetRoomNumber");

	UPartyMatchMakeRoomWnd_SetRoomNumber_Params params;
	params.a_RoomNumber = a_RoomNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchMakeRoomWnd.OnCancelButtonClick
// (Final, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchMakeRoomWnd::STATIC_OnCancelButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchMakeRoomWnd.OnCancelButtonClick");

	UPartyMatchMakeRoomWnd_OnCancelButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchMakeRoomWnd.OnOKButtonClick
// (Final, Defined, Latent, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UPartyMatchMakeRoomWnd::STATIC_OnOKButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchMakeRoomWnd.OnOKButtonClick");

	UPartyMatchMakeRoomWnd_OnOKButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchMakeRoomWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_strButtonName                (Parm, NeedCtorLink)

void UPartyMatchMakeRoomWnd::STATIC_OnClickButton(const struct FString& a_strButtonName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchMakeRoomWnd.OnClickButton");

	UPartyMatchMakeRoomWnd_OnClickButton_Params params;
	params.a_strButtonName = a_strButtonName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchMakeRoomWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchMakeRoomWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchMakeRoomWnd.OnShow");

	UPartyMatchMakeRoomWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchMakeRoomWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPartyMatchMakeRoomWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchMakeRoomWnd.OnLoad");

	UPartyMatchMakeRoomWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.GetClanTypeFromIndex
// (Final, Defined, Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UClanDrawerWnd::STATIC_GetClanTypeFromIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.GetClanTypeFromIndex");

	UClanDrawerWnd_GetClanTypeFromIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanDrawerWnd.SetTooltip
// (Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Text                           (Parm, NeedCtorLink)
// struct FCustomTooltip          ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FCustomTooltip UClanDrawerWnd::STATIC_SetTooltip(const struct FString& Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.SetTooltip");

	UClanDrawerWnd_SetTooltip_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanDrawerWnd.getCurrentGradebyClanType
// (Final, Defined, Iterator, Latent, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UClanDrawerWnd::STATIC_getCurrentGradebyClanType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.getCurrentGradebyClanType");

	UClanDrawerWnd_getCurrentGradebyClanType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanDrawerWnd.resetAcademyAuth
// (PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_resetAcademyAuth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.resetAcademyAuth");

	UClanDrawerWnd_resetAcademyAuth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.disableAcademyAuth
// (Final, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_disableAcademyAuth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.disableAcademyAuth");

	UClanDrawerWnd_disableAcademyAuth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.reset_clan_org
// (Defined, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_reset_clan_org()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.reset_clan_org");

	UClanDrawerWnd_reset_clan_org_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.getClanOrderString
// (Defined, Iterator, Latent, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            gradeID                        (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UClanDrawerWnd::STATIC_getClanOrderString(int gradeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.getClanOrderString");

	UClanDrawerWnd_getClanOrderString_Params params;
	params.gradeID = gradeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanDrawerWnd.ReplaceSkill
// (Final, Iterator, Latent, Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// struct FItemID                 cID                            (Parm)
// int                            Level                          (Parm)

void UClanDrawerWnd::STATIC_ReplaceSkill(int Index, const struct FItemID& cID, int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.ReplaceSkill");

	UClanDrawerWnd_ReplaceSkill_Params params;
	params.Index = Index;
	params.cID = cID;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.AddSkill
// (Iterator, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 cID                            (Parm)
// int                            Level                          (Parm)

void UClanDrawerWnd::STATIC_AddSkill(const struct FItemID& cID, int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.AddSkill");

	UClanDrawerWnd_AddSkill_Params params;
	params.cID = cID;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.GetWarStateString
// (Final, Iterator, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            State                          (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UClanDrawerWnd::STATIC_GetWarStateString(int State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.GetWarStateString");

	UClanDrawerWnd_GetWarStateString_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanDrawerWnd.EditAuthGrade2
// (Final, Iterator, Latent, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_EditAuthGrade2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.EditAuthGrade2");

	UClanDrawerWnd_EditAuthGrade2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.EditAuthGrade
// (Iterator, Latent, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_EditAuthGrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.EditAuthGrade");

	UClanDrawerWnd_EditAuthGrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.ApplyEditGrade
// (Latent, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_ApplyEditGrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.ApplyEditGrade");

	UClanDrawerWnd_ApplyEditGrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HideClanWindow
// (Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_HideClanWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HideClanWindow");

	UClanDrawerWnd_HideClanWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UClanDrawerWnd::STATIC_OnComboBoxItemSelected(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.OnComboBoxItemSelected");

	UClanDrawerWnd_OnComboBoxItemSelected_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.proc_swapmember
// (Final, Latent, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_proc_swapmember()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.proc_swapmember");

	UClanDrawerWnd_proc_swapmember_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.swapTargetSelect
// (Defined, Latent, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            clanNo                         (Parm)

void UClanDrawerWnd::STATIC_swapTargetSelect(int clanNo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.swapTargetSelect");

	UClanDrawerWnd_swapTargetSelect_Params params;
	params.clanNo = clanNo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.KnighthoodCombobox
// (Final, Defined, Latent, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_KnighthoodCombobox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.KnighthoodCombobox");

	UClanDrawerWnd_KnighthoodCombobox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.InitializeGradeComboBox
// (Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_InitializeGradeComboBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.InitializeGradeComboBox");

	UClanDrawerWnd_InitializeGradeComboBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.InitializeClanInfoWnd
// (Final, Defined, Iterator, Latent, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_InitializeClanInfoWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.InitializeClanInfoWnd");

	UClanDrawerWnd_InitializeClanInfoWnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.InitializeClan1_AssignApprenticeList
// (Final, Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_InitializeClan1_AssignApprenticeList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.InitializeClan1_AssignApprenticeList");

	UClanDrawerWnd_InitializeClan1_AssignApprenticeList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.InitializeAcademyList
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_InitializeAcademyList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.InitializeAcademyList");

	UClanDrawerWnd_InitializeAcademyList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.GetStringByGradeID
// (Final, Defined, Iterator, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            gradeID                        (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UClanDrawerWnd::STATIC_GetStringByGradeID(int gradeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.GetStringByGradeID");

	UClanDrawerWnd_GetStringByGradeID_Params params;
	params.gradeID = gradeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanDrawerWnd.HandleClearWarList
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_HandleClearWarList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleClearWarList");

	UClanDrawerWnd_HandleClearWarList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HandleClanAuthMember
// (NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_HandleClanAuthMember(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleClanAuthMember");

	UClanDrawerWnd_HandleClanAuthMember_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HandleClanAuth
// (Final, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_HandleClanAuth(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleClanAuth");

	UClanDrawerWnd_HandleClanAuth_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HandleCancelWar2
// (Defined, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_HandleCancelWar2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleCancelWar2");

	UClanDrawerWnd_HandleCancelWar2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HandleDeclareWar
// (Final, Defined, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_HandleDeclareWar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleDeclareWar");

	UClanDrawerWnd_HandleDeclareWar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HandleCancelWar1
// (Iterator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_HandleCancelWar1()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleCancelWar1");

	UClanDrawerWnd_HandleCancelWar1_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HandleSkillList
// (Final, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_HandleSkillList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleSkillList");

	UClanDrawerWnd_HandleSkillList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HandleCrestChange
// (Final, Iterator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_HandleCrestChange(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleCrestChange");

	UClanDrawerWnd_HandleCrestChange_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.Proc_AuthValidation
// (Defined, Latent, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_Proc_AuthValidation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.Proc_AuthValidation");

	UClanDrawerWnd_Proc_AuthValidation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.CheckandCompareMyNameandDisableThings
// (Final, Defined, Latent, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_CheckandCompareMyNameandDisableThings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.CheckandCompareMyNameandDisableThings");

	UClanDrawerWnd_CheckandCompareMyNameandDisableThings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HandleClanMemberInfo
// (Final, Defined, Iterator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_HandleClanMemberInfo(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleClanMemberInfo");

	UClanDrawerWnd_HandleClanMemberInfo_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HandleClanWarList
// (Latent, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_HandleClanWarList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleClanWarList");

	UClanDrawerWnd_HandleClanWarList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HandleClanAuthGradeList
// (Final, Latent, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_HandleClanAuthGradeList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HandleClanAuthGradeList");

	UClanDrawerWnd_HandleClanAuthGradeList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.OnEvent");

	UClanDrawerWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.count_all_check2
// (Defined, Iterator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 numString                      (Parm, NeedCtorLink)
// int                            TotalNum                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UClanDrawerWnd::STATIC_count_all_check2(const struct FString& numString, int TotalNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.count_all_check2");

	UClanDrawerWnd_count_all_check2_Params params;
	params.numString = numString;
	params.TotalNum = TotalNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanDrawerWnd.count_all_check
// (Iterator, Latent, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 numString                      (Parm, NeedCtorLink)
// int                            TotalNum                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UClanDrawerWnd::STATIC_count_all_check(const struct FString& numString, int TotalNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.count_all_check");

	UClanDrawerWnd_count_all_check_Params params;
	params.numString = numString;
	params.TotalNum = TotalNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ClanDrawerWnd.OnClickCheckBox
// (Final, Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 CheckBoxID                     (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_OnClickCheckBox(const struct FString& CheckBoxID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.OnClickCheckBox");

	UClanDrawerWnd_OnClickCheckBox_Params params;
	params.CheckBoxID = CheckBoxID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.RecallCurrentMemberInfo
// (Iterator, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_RecallCurrentMemberInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.RecallCurrentMemberInfo");

	UClanDrawerWnd_RecallCurrentMemberInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ListCtrlID                     (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& ListCtrlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.OnDBClickListCtrlRecord");

	UClanDrawerWnd_OnDBClickListCtrlRecord_Params params;
	params.ListCtrlID = ListCtrlID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.OnClickButton");

	UClanDrawerWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.HideAll
// (Final, Iterator, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_HideAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.HideAll");

	UClanDrawerWnd_HideAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.SetStateAndShow
// (Iterator, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 State                          (Parm, NeedCtorLink)

void UClanDrawerWnd::STATIC_SetStateAndShow(const struct FString& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.SetStateAndShow");

	UClanDrawerWnd_SetStateAndShow_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UClanDrawerWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.Clear");

	UClanDrawerWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UClanDrawerWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.OnShow");

	UClanDrawerWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UClanDrawerWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.InitHandle");

	UClanDrawerWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UClanDrawerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.OnLoad");

	UClanDrawerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ClanDrawerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UClanDrawerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ClanDrawerWnd.OnRegisterEvent");

	UClanDrawerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.ResetVName
// (Iterator, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyWndCompact::STATIC_ResetVName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.ResetVName");

	UPartyWndCompact_ResetVName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnDropWnd
// (Final, Defined, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           hTarget                        (Parm)
// class UWindowHandle*           hDropWnd                       (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UPartyWndCompact::STATIC_OnDropWnd(class UWindowHandle* hTarget, class UWindowHandle* hDropWnd, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnDropWnd");

	UPartyWndCompact_OnDropWnd_Params params;
	params.hTarget = hTarget;
	params.hDropWnd = hDropWnd;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.SetBuffButtonTooltip
// (Final, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyWndCompact::STATIC_SetBuffButtonTooltip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.SetBuffButtonTooltip");

	UPartyWndCompact_SetBuffButtonTooltip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.GetIdx
// (Final, Defined, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Y                              (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UPartyWndCompact::STATIC_GetIdx(int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.GetIdx");

	UPartyWndCompact_GetIdx_Params params;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PartyWndCompact.OnRButtonDown
// (Final, Defined, Iterator, Latent, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UPartyWndCompact::STATIC_OnRButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnRButtonDown");

	UPartyWndCompact_OnRButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnLButtonDown
// (Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UPartyWndCompact::STATIC_OnLButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnLButtonDown");

	UPartyWndCompact_OnLButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.UpdateMPBar
// (Defined, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)
// int                            Value                          (Parm)
// int                            MaxValue                       (Parm)

void UPartyWndCompact::STATIC_UpdateMPBar(int idx, int Value, int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.UpdateMPBar");

	UPartyWndCompact_UpdateMPBar_Params params;
	params.idx = idx;
	params.Value = Value;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.UpdateHPBar
// (Final, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)
// int                            Value                          (Parm)
// int                            MaxValue                       (Parm)

void UPartyWndCompact::STATIC_UpdateHPBar(int idx, int Value, int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.UpdateHPBar");

	UPartyWndCompact_UpdateHPBar_Params params;
	params.idx = idx;
	params.Value = Value;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.UpdateCPBar
// (Final, Defined, Iterator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)
// int                            Value                          (Parm)
// int                            MaxValue                       (Parm)

void UPartyWndCompact::STATIC_UpdateCPBar(int idx, int Value, int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.UpdateCPBar");

	UPartyWndCompact_UpdateCPBar_Params params;
	params.idx = idx;
	params.Value = Value;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.UpdateBuff
// (Final, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyWndCompact::STATIC_UpdateBuff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.UpdateBuff");

	UPartyWndCompact_UpdateBuff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnBuffButton
// (Iterator, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyWndCompact::STATIC_OnBuffButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnBuffButton");

	UPartyWndCompact_OnBuffButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnOpenPartyWndOption
// (Final, Iterator, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void UPartyWndCompact::STATIC_OnOpenPartyWndOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnOpenPartyWndOption");

	UPartyWndCompact_OnOpenPartyWndOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnClickButton");

	UPartyWndCompact_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandleShowBuffIcon
// (Final, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_HandleShowBuffIcon(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandleShowBuffIcon");

	UPartyWndCompact_HandleShowBuffIcon_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandlePartySpelledList
// (Iterator, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_HandlePartySpelledList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandlePartySpelledList");

	UPartyWndCompact_HandlePartySpelledList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.UpdatePetStatus
// (Defined, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_UpdatePetStatus(int idx, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.UpdatePetStatus");

	UPartyWndCompact_UpdatePetStatus_Params params;
	params.idx = idx;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandlePartySummonDelete
// (Final, Defined, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_HandlePartySummonDelete(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandlePartySummonDelete");

	UPartyWndCompact_HandlePartySummonDelete_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandlePartySummonUpdate
// (Defined, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_HandlePartySummonUpdate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandlePartySummonUpdate");

	UPartyWndCompact_HandlePartySummonUpdate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandlePartySummonAdd
// (Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_HandlePartySummonAdd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandlePartySummonAdd");

	UPartyWndCompact_HandlePartySummonAdd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.UpdateStatus
// (Iterator, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_UpdateStatus(int idx, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.UpdateStatus");

	UPartyWndCompact_UpdateStatus_Params params;
	params.idx = idx;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandlePartyDeleteAllParty
// (Final, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyWndCompact::STATIC_HandlePartyDeleteAllParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandlePartyDeleteAllParty");

	UPartyWndCompact_HandlePartyDeleteAllParty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandlePartyDeleteParty
// (Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_HandlePartyDeleteParty(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandlePartyDeleteParty");

	UPartyWndCompact_HandlePartyDeleteParty_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandlePartyUpdateParty
// (Final, Defined, Iterator, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_HandlePartyUpdateParty(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandlePartyUpdateParty");

	UPartyWndCompact_HandlePartyUpdateParty_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandlePartyAddParty
// (Defined, Iterator, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_HandlePartyAddParty(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandlePartyAddParty");

	UPartyWndCompact_HandlePartyAddParty_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.FindPetID
// (Final, Iterator, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UPartyWndCompact::STATIC_FindPetID(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.FindPetID");

	UPartyWndCompact_FindPetID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PartyWndCompact.FindPartyID
// (Defined, Iterator, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UPartyWndCompact::STATIC_FindPartyID(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.FindPartyID");

	UPartyWndCompact_FindPartyID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PartyWndCompact.ResizeWnd
// (Defined, Iterator, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyWndCompact::STATIC_ResizeWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.ResizeWnd");

	UPartyWndCompact_ResizeWnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.CopyStatus
// (Final, Defined, Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            DesIndex                       (Parm)
// int                            SrcIndex                       (Parm)

void UPartyWndCompact::STATIC_CopyStatus(int DesIndex, int SrcIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.CopyStatus");

	UPartyWndCompact_CopyStatus_Params params;
	params.DesIndex = DesIndex;
	params.SrcIndex = SrcIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.ClearPetStatus
// (Defined, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)

void UPartyWndCompact::STATIC_ClearPetStatus(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.ClearPetStatus");

	UPartyWndCompact_ClearPetStatus_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.ClearStatus
// (Defined, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            idx                            (Parm)

void UPartyWndCompact::STATIC_ClearStatus(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.ClearStatus");

	UPartyWndCompact_ClearStatus_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UPartyWndCompact::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.Clear");

	UPartyWndCompact_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandleRestart
// (Final, Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyWndCompact::STATIC_HandleRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandleRestart");

	UPartyWndCompact_HandleRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.HandlePartyRenameMember
// (Iterator, PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_HandlePartyRenameMember(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.HandlePartyRenameMember");

	UPartyWndCompact_HandlePartyRenameMember_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyWndCompact::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnEvent");

	UPartyWndCompact_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UPartyWndCompact::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnEnterState");

	UPartyWndCompact_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPartyWndCompact::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnShow");

	UPartyWndCompact_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyWndCompact::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.InitHandleCOD");

	UPartyWndCompact_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyWndCompact::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.InitHandle");

	UPartyWndCompact_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPartyWndCompact::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnHide");

	UPartyWndCompact_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnLoad
// (Final, Net, Operator, Static, Const)

void UPartyWndCompact::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnLoad");

	UPartyWndCompact_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndCompact.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPartyWndCompact::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndCompact.OnRegisterEvent");

	UPartyWndCompact_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HeroTowerWnd.HandleHeroShowList
// (Defined, Latent, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UHeroTowerWnd::STATIC_HandleHeroShowList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HeroTowerWnd.HandleHeroShowList");

	UHeroTowerWnd_HandleHeroShowList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HeroTowerWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UHeroTowerWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HeroTowerWnd.Clear");

	UHeroTowerWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HeroTowerWnd.HandleCheckAmIHero
// (Final, Latent, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UHeroTowerWnd::STATIC_HandleCheckAmIHero()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HeroTowerWnd.HandleCheckAmIHero");

	UHeroTowerWnd_HandleCheckAmIHero_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HeroTowerWnd.HandleShowHistory
// (Iterator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UHeroTowerWnd::STATIC_HandleShowHistory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HeroTowerWnd.HandleShowHistory");

	UHeroTowerWnd_HandleShowHistory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HeroTowerWnd.HandleShowDiary
// (Final, Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UHeroTowerWnd::STATIC_HandleShowDiary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HeroTowerWnd.HandleShowDiary");

	UHeroTowerWnd_HandleShowDiary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HeroTowerWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UHeroTowerWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HeroTowerWnd.OnClickButton");

	UHeroTowerWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HeroTowerWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UHeroTowerWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HeroTowerWnd.OnDBClickListCtrlRecord");

	UHeroTowerWnd_OnDBClickListCtrlRecord_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HeroTowerWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UHeroTowerWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HeroTowerWnd.OnEvent");

	UHeroTowerWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HeroTowerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UHeroTowerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HeroTowerWnd.OnLoad");

	UHeroTowerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HeroTowerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UHeroTowerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HeroTowerWnd.OnRegisterEvent");

	UHeroTowerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.HandleExpandButton
// (Defined, Iterator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_HandleExpandButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.HandleExpandButton");

	UShortcutWnd_HandleExpandButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.ExecuteShortcutCommandBySlot
// (Final, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UShortcutWnd::STATIC_ExecuteShortcutCommandBySlot(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.ExecuteShortcutCommandBySlot");

	UShortcutWnd_ExecuteShortcutCommandBySlot_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnClickExpandShortcutButton
// (Iterator, Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnClickExpandShortcutButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnClickExpandShortcutButton");

	UShortcutWnd_OnClickExpandShortcutButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.Reduce
// (Final, Latent, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_Reduce()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.Reduce");

	UShortcutWnd_Reduce_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.Expand2
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_Expand2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.Expand2");

	UShortcutWnd_Expand2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.Expand1
// (Defined, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_Expand1()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.Expand1");

	UShortcutWnd_Expand1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.ExpandWnd
// (Final, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_ExpandWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.ExpandWnd");

	UShortcutWnd_ExpandWnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.ArrangeWnd
// (Final, Iterator, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_ArrangeWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.ArrangeWnd");

	UShortcutWnd_ArrangeWnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.SetJoypadExpand
// (Final, Defined, Iterator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           a_IsJoypadExpand               (Parm)

void UShortcutWnd::STATIC_SetJoypadExpand(bool a_IsJoypadExpand)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.SetJoypadExpand");

	UShortcutWnd_SetJoypadExpand_Params params;
	params.a_IsJoypadExpand = a_IsJoypadExpand;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.SetJoypad
// (Latent, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           a_IsJoypad                     (Parm)

void UShortcutWnd::STATIC_SetJoypad(bool a_IsJoypad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.SetJoypad");

	UShortcutWnd_SetJoypad_Params params;
	params.a_IsJoypad = a_IsJoypad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.SetVertical
// (Latent, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           a_IsVertical                   (Parm)

void UShortcutWnd::STATIC_SetVertical(bool a_IsVertical)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.SetVertical");

	UShortcutWnd_SetVertical_Params params;
	params.a_IsVertical = a_IsVertical;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.UnLock
// (Final, Defined, Iterator, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_UnLock()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.UnLock");

	UShortcutWnd_UnLock_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.Lock
// (Net, NetReliable, Simulated, Native, Event, Operator)

void UShortcutWnd::Lock()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.Lock");

	UShortcutWnd_Lock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.IsShortcutIDInCurPage
// (Defined, Iterator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            PageNum                        (Parm)
// int                            a_nShortcutID                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UShortcutWnd::STATIC_IsShortcutIDInCurPage(int PageNum, int a_nShortcutID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.IsShortcutIDInCurPage");

	UShortcutWnd_IsShortcutIDInCurPage_Params params;
	params.PageNum = PageNum;
	params.a_nShortcutID = a_nShortcutID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ShortcutWnd.SetCurPage3
// (Final, Iterator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_nCurPage                     (Parm)

void UShortcutWnd::STATIC_SetCurPage3(int a_nCurPage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.SetCurPage3");

	UShortcutWnd_SetCurPage3_Params params;
	params.a_nCurPage = a_nCurPage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.SetCurPage2
// (Iterator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_nCurPage                     (Parm)

void UShortcutWnd::STATIC_SetCurPage2(int a_nCurPage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.SetCurPage2");

	UShortcutWnd_SetCurPage2_Params params;
	params.a_nCurPage = a_nCurPage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.SetCurPage
// (Defined, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_nCurPage                     (Parm)

void UShortcutWnd::STATIC_SetCurPage(int a_nCurPage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.SetCurPage");

	UShortcutWnd_SetCurPage_Params params;
	params.a_nCurPage = a_nCurPage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnExpandBtn
// (Defined, Latent, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnExpandBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnExpandBtn");

	UShortcutWnd_OnExpandBtn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnJoypadBtn
// (Final, Defined, Latent, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnJoypadBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnJoypadBtn");

	UShortcutWnd_OnJoypadBtn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnRotateBtn
// (Iterator, Latent, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnRotateBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnRotateBtn");

	UShortcutWnd_OnRotateBtn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnClickUnlockBtn
// (Final, Iterator, Latent, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnClickUnlockBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnClickUnlockBtn");

	UShortcutWnd_OnClickUnlockBtn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnClickLockBtn
// (Defined, Iterator, Latent, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnClickLockBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnClickLockBtn");

	UShortcutWnd_OnClickLockBtn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnNextBtn3
// (Final, Defined, Iterator, Latent, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnNextBtn3()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnNextBtn3");

	UShortcutWnd_OnNextBtn3_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnNextBtn2
// (PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnNextBtn2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnNextBtn2");

	UShortcutWnd_OnNextBtn2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnNextBtn
// (Final, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnNextBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnNextBtn");

	UShortcutWnd_OnNextBtn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnPrevBtn3
// (Defined, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnPrevBtn3()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnPrevBtn3");

	UShortcutWnd_OnPrevBtn3_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnPrevBtn2
// (Final, Defined, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnPrevBtn2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnPrevBtn2");

	UShortcutWnd_OnPrevBtn2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnPrevBtn
// (Iterator, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_OnPrevBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnPrevBtn");

	UShortcutWnd_OnPrevBtn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_strID                        (Parm, NeedCtorLink)

void UShortcutWnd::STATIC_OnClickButton(const struct FString& a_strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnClickButton");

	UShortcutWnd_OnClickButton_Params params;
	params.a_strID = a_strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.SetJoypadShortcut
// (Final, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EJoyShortcut>      a_JoyShortcut                  (Parm)

void UShortcutWnd::STATIC_SetJoypadShortcut(TEnumAsByte<EJoyShortcut> a_JoyShortcut)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.SetJoypadShortcut");

	UShortcutWnd_SetJoypadShortcut_Params params;
	params.a_JoyShortcut = a_JoyShortcut;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.HandleJoypadRButtonDown
// (Final, Iterator, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShortcutWnd::STATIC_HandleJoypadRButtonDown(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.HandleJoypadRButtonDown");

	UShortcutWnd_HandleJoypadRButtonDown_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.HandleJoypadRButtonUp
// (Defined, Iterator, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShortcutWnd::STATIC_HandleJoypadRButtonUp(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.HandleJoypadRButtonUp");

	UShortcutWnd_HandleJoypadRButtonUp_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.HandleJoypadLButtonDown
// (Final, Defined, Iterator, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShortcutWnd::STATIC_HandleJoypadLButtonDown(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.HandleJoypadLButtonDown");

	UShortcutWnd_HandleJoypadLButtonDown_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.HandleJoypadLButtonUp
// (Latent, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShortcutWnd::STATIC_HandleJoypadLButtonUp(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.HandleJoypadLButtonUp");

	UShortcutWnd_HandleJoypadLButtonUp_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.HandleShortcutJoypad
// (Final, Latent, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShortcutWnd::STATIC_HandleShortcutJoypad(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.HandleShortcutJoypad");

	UShortcutWnd_HandleShortcutJoypad_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.HandleShortcutClear
// (Defined, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_HandleShortcutClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.HandleShortcutClear");

	UShortcutWnd_HandleShortcutClear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.HandleShortcutUpdate
// (Final, Defined, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UShortcutWnd::STATIC_HandleShortcutUpdate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.HandleShortcutUpdate");

	UShortcutWnd_HandleShortcutUpdate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.HandleShortcutPageUpdate
// (Final, Iterator, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UShortcutWnd::STATIC_HandleShortcutPageUpdate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.HandleShortcutPageUpdate");

	UShortcutWnd_HandleShortcutPageUpdate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.InitShortPageNum
// (Iterator, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void UShortcutWnd::STATIC_InitShortPageNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.InitShortPageNum");

	UShortcutWnd_InitShortPageNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShortcutWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnEvent");

	UShortcutWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UShortcutWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnEnterState");

	UShortcutWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnDefaultPosition
// (Defined, Iterator, PreOperator, Singular, Operator, Static, Const)

void UShortcutWnd::STATIC_OnDefaultPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnDefaultPosition");

	UShortcutWnd_OnDefaultPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UShortcutWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnLoad");

	UShortcutWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShortcutWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UShortcutWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShortcutWnd.OnRegisterEvent");

	UShortcutWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.ClearDefenseButton
// (Defined, Iterator, Latent, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_ClearDefenseButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.ClearDefenseButton");

	USiegeInfoWnd_ClearDefenseButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.ClearAttackButton
// (Iterator, Latent, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_ClearAttackButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.ClearAttackButton");

	USiegeInfoWnd_ClearAttackButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.ClearTimeCombo
// (Final, Defined, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_ClearTimeCombo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.ClearTimeCombo");

	USiegeInfoWnd_ClearTimeCombo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.UpdateDefenseButton
// (Iterator, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_UpdateDefenseButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.UpdateDefenseButton");

	USiegeInfoWnd_UpdateDefenseButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.UpdateAttackButton
// (Final, Iterator, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_UpdateAttackButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.UpdateAttackButton");

	USiegeInfoWnd_UpdateAttackButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.UpdateTimeCombo
// (Defined, Latent, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_UpdateTimeCombo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.UpdateTimeCombo");

	USiegeInfoWnd_UpdateTimeCombo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.UpdateDefenseCount
// (Defined, Iterator, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_UpdateDefenseCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.UpdateDefenseCount");

	USiegeInfoWnd_UpdateDefenseCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.UpdateAttackCount
// (Defined, Iterator, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_UpdateAttackCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.UpdateAttackCount");

	USiegeInfoWnd_UpdateAttackCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.HandleSiegeInfoSelectableTime
// (Final, Defined, Iterator, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void USiegeInfoWnd::STATIC_HandleSiegeInfoSelectableTime(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.HandleSiegeInfoSelectableTime");

	USiegeInfoWnd_HandleSiegeInfoSelectableTime_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.HandleSiegeInfoClanListEnd
// (Latent, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void USiegeInfoWnd::STATIC_HandleSiegeInfoClanListEnd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.HandleSiegeInfoClanListEnd");

	USiegeInfoWnd_HandleSiegeInfoClanListEnd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.HandleSiegeInfoClanList
// (Final, Latent, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void USiegeInfoWnd::STATIC_HandleSiegeInfoClanList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.HandleSiegeInfoClanList");

	USiegeInfoWnd_HandleSiegeInfoClanList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.HandleSiegeInfoClanListStart
// (Defined, Latent, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void USiegeInfoWnd::STATIC_HandleSiegeInfoClanListStart(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.HandleSiegeInfoClanListStart");

	USiegeInfoWnd_HandleSiegeInfoClanListStart_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.HandleSiegeInfo
// (Final, Defined, Latent, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void USiegeInfoWnd::STATIC_HandleSiegeInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.HandleSiegeInfo");

	USiegeInfoWnd_HandleSiegeInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnTabCtrl2Click
// (Iterator, Latent, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_OnTabCtrl2Click()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnTabCtrl2Click");

	USiegeInfoWnd_OnTabCtrl2Click_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnTabCtrl1Click
// (Final, Iterator, Latent, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_OnTabCtrl1Click()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnTabCtrl1Click");

	USiegeInfoWnd_OnTabCtrl1Click_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnTabCtrl0Click
// (Final, Defined, Iterator, Latent, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_OnTabCtrl0Click()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnTabCtrl0Click");

	USiegeInfoWnd_OnTabCtrl0Click_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnDefenseConfirmClick
// (Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_OnDefenseConfirmClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnDefenseConfirmClick");

	USiegeInfoWnd_OnDefenseConfirmClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnDefenseRejectClick
// (Final, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_OnDefenseRejectClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnDefenseRejectClick");

	USiegeInfoWnd_OnDefenseRejectClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnDefenseCancelClick
// (Defined, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_OnDefenseCancelClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnDefenseCancelClick");

	USiegeInfoWnd_OnDefenseCancelClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnDefenseApplyClick
// (Final, Defined, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_OnDefenseApplyClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnDefenseApplyClick");

	USiegeInfoWnd_OnDefenseApplyClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnAttackCancelClick
// (Iterator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_OnAttackCancelClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnAttackCancelClick");

	USiegeInfoWnd_OnAttackCancelClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnAttackApplyClick
// (Final, Iterator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_OnAttackApplyClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnAttackApplyClick");

	USiegeInfoWnd_OnAttackApplyClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void USiegeInfoWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnClickButton");

	USiegeInfoWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.clearInfo
// (Defined, Singular, Net, Operator, Static, HasOptionalParms, Const)

void USiegeInfoWnd::STATIC_clearInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.clearInfo");

	USiegeInfoWnd_clearInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void USiegeInfoWnd::STATIC_OnComboBoxItemSelected(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnComboBoxItemSelected");

	USiegeInfoWnd_OnComboBoxItemSelected_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USiegeInfoWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnEvent");

	USiegeInfoWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void USiegeInfoWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnEnterState");

	USiegeInfoWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USiegeInfoWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnHide");

	USiegeInfoWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USiegeInfoWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnShow");

	USiegeInfoWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USiegeInfoWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnLoad");

	USiegeInfoWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SiegeInfoWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USiegeInfoWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SiegeInfoWnd.OnRegisterEvent");

	USiegeInfoWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.IsShowWaitListWnd
// (Defined, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UPartyMatchWnd::STATIC_IsShowWaitListWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.IsShowWaitListWnd");

	UPartyMatchWnd_IsShowWaitListWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PartyMatchWnd.ToggleWaitListWnd
// (Final, Defined, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWnd::STATIC_ToggleWaitListWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.ToggleWaitListWnd");

	UPartyMatchWnd_ToggleWaitListWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.UpdateWaitListWnd
// (Defined, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchWnd::STATIC_UpdateWaitListWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.UpdateWaitListWnd");

	UPartyMatchWnd_UpdateWaitListWnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.ShowHideWaitListWnd
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchWnd::STATIC_ShowHideWaitListWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.ShowHideWaitListWnd");

	UPartyMatchWnd_ShowHideWaitListWnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.SetWaitListWnd
// (Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bShow                          (Parm)

void UPartyMatchWnd::STATIC_SetWaitListWnd(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.SetWaitListWnd");

	UPartyMatchWnd_SetWaitListWnd_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.GetLevelFilter
// (Iterator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UPartyMatchWnd::STATIC_GetLevelFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.GetLevelFilter");

	UPartyMatchWnd_GetLevelFilter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PartyMatchWnd.GetLocationFilter
// (Final, Iterator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UPartyMatchWnd::STATIC_GetLocationFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.GetLocationFilter");

	UPartyMatchWnd_GetLocationFilter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PartyMatchWnd.OnAutoJoinBtnClick
// (Final, Defined, Iterator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWnd::STATIC_OnAutoJoinBtnClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnAutoJoinBtnClick");

	UPartyMatchWnd_OnAutoJoinBtnClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 a_ListCtrlName                 (Parm, NeedCtorLink)

void UPartyMatchWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& a_ListCtrlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnDBClickListCtrlRecord");

	UPartyMatchWnd_OnDBClickListCtrlRecord_Params params;
	params.a_ListCtrlName = a_ListCtrlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnMakeRoomBtnClick
// (Defined, Iterator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWnd::STATIC_OnMakeRoomBtnClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnMakeRoomBtnClick");

	UPartyMatchWnd_OnMakeRoomBtnClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.RequestPartyRoomListLocal
// (Final, Defined, Iterator, Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_Page                         (Parm)

void UPartyMatchWnd::STATIC_RequestPartyRoomListLocal(int a_Page)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.RequestPartyRoomListLocal");

	UPartyMatchWnd_RequestPartyRoomListLocal_Params params;
	params.a_Page = a_Page;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnNextBtnClick
// (Final, Defined, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWnd::STATIC_OnNextBtnClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnNextBtnClick");

	UPartyMatchWnd_OnNextBtnClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnPrevBtnClick
// (Final, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWnd::STATIC_OnPrevBtnClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnPrevBtnClick");

	UPartyMatchWnd_OnPrevBtnClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnRefreshBtnClick
// (Final, Latent, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWnd::STATIC_OnRefreshBtnClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnRefreshBtnClick");

	UPartyMatchWnd_OnRefreshBtnClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnWaitListButton
// (Defined, Iterator, Latent, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWnd::STATIC_OnWaitListButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnWaitListButton");

	UPartyMatchWnd_OnWaitListButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_strButtonName                (Parm, NeedCtorLink)

void UPartyMatchWnd::STATIC_OnClickButton(const struct FString& a_strButtonName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnClickButton");

	UPartyMatchWnd_OnClickButton_Params params;
	params.a_strButtonName = a_strButtonName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.HandlePartyMatchList
// (Defined, Latent, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchWnd::STATIC_HandlePartyMatchList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.HandlePartyMatchList");

	UPartyMatchWnd_HandlePartyMatchList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnButtonTimer
// (Singular, Operator, Static, Const)
// Parameters:
// bool                           bExpired                       (Parm)

void UPartyMatchWnd::STATIC_OnButtonTimer(bool bExpired)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnButtonTimer");

	UPartyMatchWnd_OnButtonTimer_Params params;
	params.bExpired = bExpired;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchWnd::STATIC_OnEvent(int a_EventID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnEvent");

	UPartyMatchWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnHide");

	UPartyMatchWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnSendPacketWhenHiding
// (Final, Defined, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchWnd::STATIC_OnSendPacketWhenHiding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnSendPacketWhenHiding");

	UPartyMatchWnd_OnSendPacketWhenHiding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnShow");

	UPartyMatchWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.InitializeCOD");

	UPartyMatchWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UPartyMatchWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.Initialize");

	UPartyMatchWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPartyMatchWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnLoad");

	UPartyMatchWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWnd.OnRegisterEvent");

	UPartyMatchWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.IsHidePositionZone
// (Final, Latent, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            nZoneID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool URadarMapWnd::STATIC_IsHidePositionZone(int nZoneID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.IsHidePositionZone");

	URadarMapWnd_IsHidePositionZone_Params params;
	params.nZoneID = nZoneID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.RadarMapWnd.IsHideRadarZone
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            nZoneID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool URadarMapWnd::STATIC_IsHideRadarZone(int nZoneID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.IsHideRadarZone");

	URadarMapWnd_IsHideRadarZone_Params params;
	params.nZoneID = nZoneID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.RadarMapWnd.LayerOfAltitude
// (Iterator, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            altitude                       (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int URadarMapWnd::STATIC_LayerOfAltitude(int altitude)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.LayerOfAltitude");

	URadarMapWnd_LayerOfAltitude_Params params;
	params.altitude = altitude;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.RadarMapWnd.updateAltitudeTex
// (Latent, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            altitude                       (Parm)

void URadarMapWnd::STATIC_updateAltitudeTex(int altitude)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.updateAltitudeTex");

	URadarMapWnd_updateAltitudeTex_Params params;
	params.altitude = altitude;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.ShowAirShipTutorial
// (Final, Iterator, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            SystemMsgID                    (Parm)

void URadarMapWnd::STATIC_ShowAirShipTutorial(int SystemMsgID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.ShowAirShipTutorial");

	URadarMapWnd_ShowAirShipTutorial_Params params;
	params.SystemMsgID = SystemMsgID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnAirShipAltitude
// (Final, Iterator, Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_OnAirShipAltitude(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnAirShipAltitude");

	URadarMapWnd_OnAirShipAltitude_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnAirShipUpdate
// (Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_OnAirShipUpdate(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnAirShipUpdate");

	URadarMapWnd_OnAirShipUpdate_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnAirShipState
// (Iterator, Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_OnAirShipState(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnAirShipState");

	URadarMapWnd_OnAirShipState_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.FlightGaugesClear
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_FlightGaugesClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.FlightGaugesClear");

	URadarMapWnd_FlightGaugesClear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandleZoneTitle
// (Final, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_HandleZoneTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandleZoneTitle");

	URadarMapWnd_HandleZoneTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.FindMonsterIDX
// (Final, Defined, Iterator, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int URadarMapWnd::STATIC_FindMonsterIDX(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.FindMonsterIDX");

	URadarMapWnd_FindMonsterIDX_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.RadarMapWnd.FindPartyIDX
// (Final, Defined, Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int URadarMapWnd::STATIC_FindPartyIDX(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.FindPartyIDX");

	URadarMapWnd_FindPartyIDX_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.RadarMapWnd.init_textboxmove
// (Final, Exec, Operator, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_init_textboxmove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.init_textboxmove");

	URadarMapWnd_init_textboxmove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.resetanimloc
// (Defined, Exec, Operator, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_resetanimloc()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.resetanimloc");

	URadarMapWnd_resetanimloc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.move_value
// (Final, Defined, Latent, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int URadarMapWnd::STATIC_move_value()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.move_value");

	URadarMapWnd_move_value_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.RadarMapWnd.FadeOut
// (Defined, Iterator, PreOperator, Singular, Simulated, Exec, Native)

void URadarMapWnd::FadeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.FadeOut");

	URadarMapWnd_FadeOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.FadeIn
// (Final, Iterator, Latent, NetReliable, Exec, Event, Operator)

void URadarMapWnd::FadeIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.FadeIn");

	URadarMapWnd_FadeIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnTick
// (Net, Operator, Static, Const)

void URadarMapWnd::STATIC_OnTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnTick");

	URadarMapWnd_OnTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.SetRadarColor
// (Defined, NetReliable, Simulated, Exec, Native, Event, Static, Const)
// Parameters:
// struct FColor                  a_RadarColor                   (Parm)
// float                          a_Seconds                      (Parm)

void URadarMapWnd::STATIC_SetRadarColor(const struct FColor& a_RadarColor, float a_Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.SetRadarColor");

	URadarMapWnd_SetRadarColor_Params params;
	params.a_RadarColor = a_RadarColor;
	params.a_Seconds = a_Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandleRadarZoneCode
// (Final, Defined, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            type                           (Parm)

void URadarMapWnd::STATIC_HandleRadarZoneCode(int type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandleRadarZoneCode");

	URadarMapWnd_HandleRadarZoneCode_Params params;
	params.type = type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandleFinishRotate
// (Iterator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_HandleFinishRotate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandleFinishRotate");

	URadarMapWnd_HandleFinishRotate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.clickRotateButton
// (Final, Iterator, Simulated, Operator, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_clickRotateButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.clickRotateButton");

	URadarMapWnd_clickRotateButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.RotateProcess
// (Defined, Iterator, Exec, Operator, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_RotateProcess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.RotateProcess");

	URadarMapWnd_RotateProcess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnClickCheckBox
// (Final, Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 CheckBoxID                     (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_OnClickCheckBox(const struct FString& CheckBoxID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnClickCheckBox");

	URadarMapWnd_OnClickCheckBox_Params params;
	params.CheckBoxID = CheckBoxID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_ButtonID                     (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_OnClickButton(const struct FString& a_ButtonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnClickButton");

	URadarMapWnd_OnClickButton_Params params;
	params.a_ButtonID = a_ButtonID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void URadarMapWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnTimer");

	URadarMapWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.findEmptyPartySlot
// (Final, Defined, Iterator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int URadarMapWnd::STATIC_findEmptyPartySlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.findEmptyPartySlot");

	URadarMapWnd_findEmptyPartySlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.RadarMapWnd.findEmptyMonsterSlot
// (Latent, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int URadarMapWnd::STATIC_findEmptyMonsterSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.findEmptyMonsterSlot");

	URadarMapWnd_findEmptyMonsterSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.RadarMapWnd.ClearObject
// (Final, Defined, Iterator, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_ClearObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.ClearObject");

	URadarMapWnd_ClearObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandleNotifyObject
// (Final, Latent, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_HandleNotifyObject(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandleNotifyObject");

	URadarMapWnd_HandleNotifyObject_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OptionApply
// (Defined, Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_OptionApply()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OptionApply");

	URadarMapWnd_OptionApply_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.GetDistanceFromMe
// (Defined, Latent, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            X                              (Parm)
// int                            Y                              (Parm)
// int                            Z                              (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int URadarMapWnd::STATIC_GetDistanceFromMe(int X, int Y, int Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.GetDistanceFromMe");

	URadarMapWnd_GetDistanceFromMe_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.RadarMapWnd.GetPartyLocation
// (Final, Defined, Latent, Exec, Operator, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_GetPartyLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.GetPartyLocation");

	URadarMapWnd_GetPartyLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.AddPartyObject
// (Iterator, Latent, Exec, Operator, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_AddPartyObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.AddPartyObject");

	URadarMapWnd_AddPartyObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandleOntimer
// (Iterator, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_HandleOntimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandleOntimer");

	URadarMapWnd_HandleOntimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnRButtonDown
// (Final, Defined, Iterator, Latent, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void URadarMapWnd::STATIC_OnRButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnRButtonDown");

	URadarMapWnd_OnRButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandleNotifyPartyMemberPosition
// (Final, Iterator, Latent, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_HandleNotifyPartyMemberPosition(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandleNotifyPartyMemberPosition");

	URadarMapWnd_HandleNotifyPartyMemberPosition_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandlePartyDeleteAllParty
// (Final, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_HandlePartyDeleteAllParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandlePartyDeleteAllParty");

	URadarMapWnd_HandlePartyDeleteAllParty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandlePartyDeleteParty
// (Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_HandlePartyDeleteParty(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandlePartyDeleteParty");

	URadarMapWnd_HandlePartyDeleteParty_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandlePartyAddParty
// (Defined, Iterator, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_HandlePartyAddParty(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandlePartyAddParty");

	URadarMapWnd_HandlePartyAddParty_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandleTargetHideWindow
// (Defined, Iterator, Latent, Exec, Operator, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_HandleTargetHideWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandleTargetHideWindow");

	URadarMapWnd_HandleTargetHideWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.HandleTargetUpdate
// (Iterator, Latent, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_HandleTargetUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.HandleTargetUpdate");

	URadarMapWnd_HandleTargetUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void URadarMapWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnEvent");

	URadarMapWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.CheckTimer
// (Defined, Iterator, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_CheckTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.CheckTimer");

	URadarMapWnd_CheckTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void URadarMapWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnShow");

	URadarMapWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.InitDatas
// (Iterator, Simulated, Operator, Static, HasOptionalParms, Const)

void URadarMapWnd::STATIC_InitDatas()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.InitDatas");

	URadarMapWnd_InitDatas_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void URadarMapWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnLoad");

	URadarMapWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarMapWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void URadarMapWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarMapWnd.OnRegisterEvent");

	URadarMapWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.Resize
// (Defined, Singular, Exec, Operator, Static, Const)
// Parameters:
// int                            Count                          (Parm)

void UOlympiadPlayerWnd::STATIC_Resize(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.Resize");

	UOlympiadPlayerWnd_Resize_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.SetExpandMode
// (Final, Defined, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bExpand                        (Parm)

void UOlympiadPlayerWnd::STATIC_SetExpandMode(bool bExpand)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.SetExpandMode");

	UOlympiadPlayerWnd_SetExpandMode_Params params;
	params.bExpand = bExpand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UOlympiadPlayerWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.OnClickButton");

	UOlympiadPlayerWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.UpdateUserInfo
// (Final, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            where                          (Parm)
// int                            Index                          (Parm)

void UOlympiadPlayerWnd::STATIC_UpdateUserInfo(int where, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.UpdateUserInfo");

	UOlympiadPlayerWnd_UpdateUserInfo_Params params;
	params.where = where;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.UpdateUsersInfo
// (Latent, Net, Operator, Static, HasOptionalParms, Const)

void UOlympiadPlayerWnd::STATIC_UpdateUsersInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.UpdateUsersInfo");

	UOlympiadPlayerWnd_UpdateUsersInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.UpdateMsg
// (Defined, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strMsg                         (Parm, NeedCtorLink)

void UOlympiadPlayerWnd::STATIC_UpdateMsg(const struct FString& strMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.UpdateMsg");

	UOlympiadPlayerWnd_UpdateMsg_Params params;
	params.strMsg = strMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.HandleAttack
// (Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UOlympiadPlayerWnd::STATIC_HandleAttack(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.HandleAttack");

	UOlympiadPlayerWnd_HandleAttack_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.HandleMagicSkillUse
// (Final, Defined, Latent, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UOlympiadPlayerWnd::STATIC_HandleMagicSkillUse(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.HandleMagicSkillUse");

	UOlympiadPlayerWnd_HandleMagicSkillUse_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.HandleUserInfo
// (Final, Iterator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UOlympiadPlayerWnd::STATIC_HandleUserInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.HandleUserInfo");

	UOlympiadPlayerWnd_HandleUserInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UOlympiadPlayerWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.Clear");

	UOlympiadPlayerWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UOlympiadPlayerWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.OnEvent");

	UOlympiadPlayerWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UOlympiadPlayerWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.OnEnterState");

	UOlympiadPlayerWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UOlympiadPlayerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.OnLoad");

	UOlympiadPlayerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UOlympiadPlayerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.OnRegisterEvent");

	UOlympiadPlayerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayerWnd.SetPlayerNum
// (Final, Defined, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            PlayerNum                      (Parm)

void UOlympiadPlayerWnd::STATIC_SetPlayerNum(int PlayerNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayerWnd.SetPlayerNum");

	UOlympiadPlayerWnd_SetPlayerNum_Params params;
	params.PlayerNum = PlayerNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.HandleSetMaxCount
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UWarehouseWnd::STATIC_HandleSetMaxCount(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.HandleSetMaxCount");

	UWarehouseWnd_HandleSetMaxCount_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.HandleOKButton
// (Final, Defined, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UWarehouseWnd::STATIC_HandleOKButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.HandleOKButton");

	UWarehouseWnd_HandleOKButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.AdjustCount
// (Defined, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UWarehouseWnd::STATIC_AdjustCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.AdjustCount");

	UWarehouseWnd_AdjustCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.AdjustPrice
// (Final, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UWarehouseWnd::STATIC_AdjustPrice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.AdjustPrice");

	UWarehouseWnd_AdjustPrice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.HandleDeleteItem
// (Final, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UWarehouseWnd::STATIC_HandleDeleteItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.HandleDeleteItem");

	UWarehouseWnd_HandleDeleteItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UWarehouseWnd::STATIC_HandleAddItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.HandleAddItem");

	UWarehouseWnd_HandleAddItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.HandleOpenWindow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UWarehouseWnd::STATIC_HandleOpenWindow(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.HandleOpenWindow");

	UWarehouseWnd_HandleOpenWindow_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UWarehouseWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.HandleDialogOK");

	UWarehouseWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.MoveItemBottomToTop
// (Final, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// bool                           bAllItem                       (Parm)

void UWarehouseWnd::STATIC_MoveItemBottomToTop(int Index, bool bAllItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.MoveItemBottomToTop");

	UWarehouseWnd_MoveItemBottomToTop_Params params;
	params.Index = Index;
	params.bAllItem = bAllItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.MoveItemTopToBottom
// (Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// bool                           bAllItem                       (Parm)

void UWarehouseWnd::STATIC_MoveItemTopToBottom(int Index, bool bAllItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.MoveItemTopToBottom");

	UWarehouseWnd_MoveItemTopToBottom_Params params;
	params.Index = Index;
	params.bAllItem = bAllItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UWarehouseWnd::STATIC_OnDropItem(const struct FString& strID, const struct FItemInfo& Info, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.OnDropItem");

	UWarehouseWnd_OnDropItem_Params params;
	params.strID = strID;
	params.Info = Info;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UWarehouseWnd::STATIC_OnClickItem(const struct FString& ControlName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.OnClickItem");

	UWarehouseWnd_OnClickItem_Params params;
	params.ControlName = ControlName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.OnDBClickItem
// (Final, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UWarehouseWnd::STATIC_OnDBClickItem(const struct FString& ControlName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.OnDBClickItem");

	UWarehouseWnd_OnDBClickItem_Params params;
	params.ControlName = ControlName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)

void UWarehouseWnd::STATIC_OnClickButton(const struct FString& ControlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.OnClickButton");

	UWarehouseWnd_OnClickButton_Params params;
	params.ControlName = ControlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UWarehouseWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.OnEvent");

	UWarehouseWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UWarehouseWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.Clear");

	UWarehouseWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UWarehouseWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.InitHandle");

	UWarehouseWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UWarehouseWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.OnLoad");

	UWarehouseWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.WarehouseWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UWarehouseWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.WarehouseWnd.OnRegisterEvent");

	UWarehouseWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickSummon1Team
// (Final, Iterator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickSummon1Team()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickSummon1Team");

	UEventMatchGMWnd_OnClickSummon1Team_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickDelayReset
// (Defined, Iterator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickDelayReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickDelayReset");

	UEventMatchGMWnd_OnClickDelayReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickSetAllHeal
// (Final, Defined, Iterator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickSetAllHeal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickSetAllHeal");

	UEventMatchGMWnd_OnClickSetAllHeal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickSummon2Team
// (Latent, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickSummon2Team()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickSummon2Team");

	UEventMatchGMWnd_OnClickSummon2Team_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.SetMatchID
// (Iterator, PreOperator, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_MatchID                      (Parm)

void UEventMatchGMWnd::STATIC_SetMatchID(int a_MatchID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.SetMatchID");

	UEventMatchGMWnd_SetMatchID_Params params;
	params.a_MatchID = a_MatchID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.SetPause
// (Final, Iterator, Latent, PreOperator, Net, Simulated, Native)
// Parameters:
// bool                           a_Pause                        (Parm)
// bool                           a_SendToServer                 (OptionalParm, Parm)

void UEventMatchGMWnd::SetPause(bool a_Pause, bool a_SendToServer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.SetPause");

	UEventMatchGMWnd_SetPause_Params params;
	params.a_Pause = a_Pause;
	params.a_SendToServer = a_SendToServer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.HandleEventMatchManage
// (Final, Latent, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchGMWnd::STATIC_HandleEventMatchManage(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.HandleEventMatchManage");

	UEventMatchGMWnd_HandleEventMatchManage_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.HandleEventMatchPartyLeader
// (Defined, Latent, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchGMWnd::STATIC_HandleEventMatchPartyLeader(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.HandleEventMatchPartyLeader");

	UEventMatchGMWnd_HandleEventMatchPartyLeader_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.Firecracker
// (Iterator, Latent, Singular, NetReliable, Exec, Native, Event, Operator, Static, HasOptionalParms)
// Parameters:
// int                            a_TeamID                       (Parm)

void UEventMatchGMWnd::STATIC_Firecracker(int a_TeamID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.Firecracker");

	UEventMatchGMWnd_Firecracker_Params params;
	params.a_TeamID = a_TeamID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.SendGameEndMsg
// (Final, Defined, Iterator, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_SendGameEndMsg()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.SendGameEndMsg");

	UEventMatchGMWnd_SendGameEndMsg_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.SendAnnounce
// (PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_SendAnnounce()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.SendAnnounce");

	UEventMatchGMWnd_SendAnnounce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.SetScore
// (Defined, PreOperator, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_SetScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.SetScore");

	UEventMatchGMWnd_SetScore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.RemoveEventMatch
// (Final, PreOperator, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_RemoveEventMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.RemoveEventMatch");

	UEventMatchGMWnd_RemoveEventMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.SetFence
// (Defined, Iterator, Latent, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_SetFence()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.SetFence");

	UEventMatchGMWnd_SetFence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.CheckBuffRule
// (Final, Defined, Latent, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_OptionFile                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UEventMatchGMWnd::STATIC_CheckBuffRule(const struct FString& a_OptionFile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.CheckBuffRule");

	UEventMatchGMWnd_CheckBuffRule_Params params;
	params.a_OptionFile = a_OptionFile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.EventMatchGMWnd.ApplyBuffRule
// (Iterator, Latent, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UEventMatchGMWnd::STATIC_ApplyBuffRule()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.ApplyBuffRule");

	UEventMatchGMWnd_ApplyBuffRule_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.EventMatchGMWnd.ApplyItemRule
// (Final, Iterator, Latent, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_OptionFile                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UEventMatchGMWnd::STATIC_ApplyItemRule(const struct FString& a_OptionFile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.ApplyItemRule");

	UEventMatchGMWnd_ApplyItemRule_Params params;
	params.a_OptionFile = a_OptionFile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.EventMatchGMWnd.ApplySkillRule
// (Defined, Iterator, Latent, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_OptionFile                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UEventMatchGMWnd::STATIC_ApplySkillRule(const struct FString& a_OptionFile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.ApplySkillRule");

	UEventMatchGMWnd_ApplySkillRule_Params params;
	params.a_OptionFile = a_OptionFile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.EventMatchGMWnd.StartCountDown
// (Final, Latent, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_StartCountDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.StartCountDown");

	UEventMatchGMWnd_StartCountDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.RefreshLockStatus
// (Final, Iterator, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_RefreshLockStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.RefreshLockStatus");

	UEventMatchGMWnd_RefreshLockStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.HandleEventMatchUpdateTeamInfo
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchGMWnd::STATIC_HandleEventMatchUpdateTeamInfo(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.HandleEventMatchUpdateTeamInfo");

	UEventMatchGMWnd_HandleEventMatchUpdateTeamInfo_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.HandleEventMatchCreated
// (Latent, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchGMWnd::STATIC_HandleEventMatchCreated(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.HandleEventMatchCreated");

	UEventMatchGMWnd_HandleEventMatchCreated_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.HandleShowEventMatchGMWnd
// (Final, Defined, Iterator, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_HandleShowEventMatchGMWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.HandleShowEventMatchGMWnd");

	UEventMatchGMWnd_HandleShowEventMatchGMWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.NotifyFenceInfo
// (Defined, Iterator, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FVector                 a_Position                     (Parm)
// int                            a_XLength                      (Parm)
// int                            a_YLength                      (Parm)

void UEventMatchGMWnd::STATIC_NotifyFenceInfo(const struct FVector& a_Position, int a_XLength, int a_YLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.NotifyFenceInfo");

	UEventMatchGMWnd_NotifyFenceInfo_Params params;
	params.a_Position = a_Position;
	params.a_XLength = a_XLength;
	params.a_YLength = a_YLength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickTeam2FirecrackerButton
// (PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickTeam2FirecrackerButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickTeam2FirecrackerButton");

	UEventMatchGMWnd_OnClickTeam2FirecrackerButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickTeam1FirecrackerButton
// (Defined, Iterator, Latent, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickTeam1FirecrackerButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickTeam1FirecrackerButton");

	UEventMatchGMWnd_OnClickTeam1FirecrackerButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickSetFenceButton
// (Final, Iterator, Latent, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickSetFenceButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickSetFenceButton");

	UEventMatchGMWnd_OnClickSetFenceButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickSendGameEngMsgButton
// (Defined, Latent, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickSendGameEngMsgButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickSendGameEngMsgButton");

	UEventMatchGMWnd_OnClickSendGameEngMsgButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickShowCommandWndButton
// (Defined, Iterator, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickShowCommandWndButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickShowCommandWndButton");

	UEventMatchGMWnd_OnClickShowCommandWndButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickSendAnnounceButton
// (Final, Latent, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickSendAnnounceButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickSendAnnounceButton");

	UEventMatchGMWnd_OnClickSendAnnounceButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickSetScoreButton
// (Latent, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickSetScoreButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickSetScoreButton");

	UEventMatchGMWnd_OnClickSetScoreButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickStartButton
// (Final, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickStartButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickStartButton");

	UEventMatchGMWnd_OnClickStartButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickPauseButton
// (Iterator, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickPauseButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickPauseButton");

	UEventMatchGMWnd_OnClickPauseButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickLockTeam2Button
// (Final, Defined, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickLockTeam2Button()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickLockTeam2Button");

	UEventMatchGMWnd_OnClickLockTeam2Button_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickSetTeam2LeaderButton
// (Final, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickSetTeam2LeaderButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickSetTeam2LeaderButton");

	UEventMatchGMWnd_OnClickSetTeam2LeaderButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickLockTeam1Button
// (PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickLockTeam1Button()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickLockTeam1Button");

	UEventMatchGMWnd_OnClickLockTeam1Button_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickSetTeam1LeaderButton
// (Defined, Iterator, Latent, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickSetTeam1LeaderButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickSetTeam1LeaderButton");

	UEventMatchGMWnd_OnClickSetTeam1LeaderButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickCreateEventMatchButton
// (Final, Defined, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMWnd::STATIC_OnClickCreateEventMatchButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickCreateEventMatchButton");

	UEventMatchGMWnd_OnClickCreateEventMatchButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UEventMatchGMWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnHide");

	UEventMatchGMWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchGMWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnEvent");

	UEventMatchGMWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnClickButtonWithHandle
// (Final, Singular, Operator, Static, Const)
// Parameters:
// class UButtonHandle*           a_ButtonHandle                 (Parm)

void UEventMatchGMWnd::STATIC_OnClickButtonWithHandle(class UButtonHandle* a_ButtonHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnClickButtonWithHandle");

	UEventMatchGMWnd_OnClickButtonWithHandle_Params params;
	params.a_ButtonHandle = a_ButtonHandle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UEventMatchGMWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnLoad");

	UEventMatchGMWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UEventMatchGMWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMWnd.OnRegisterEvent");

	UEventMatchGMWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.OnLButtonDown
// (Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UDuelManager::STATIC_OnLButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.OnLButtonDown");

	UDuelManager_OnLButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.Resize
// (Defined, Singular, Exec, Operator, Static, Const)
// Parameters:
// int                            Count                          (Parm)

void UDuelManager::STATIC_Resize(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.Resize");

	UDuelManager_Resize_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UDuelManager::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.Clear");

	UDuelManager_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.HandleUpdateUserInfo
// (Iterator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDuelManager::STATIC_HandleUpdateUserInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.HandleUpdateUserInfo");

	UDuelManager_HandleUpdateUserInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.HandleDialogCancel
// (Final, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDuelManager::STATIC_HandleDialogCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.HandleDialogCancel");

	UDuelManager_HandleDialogCancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDuelManager::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.HandleDialogOK");

	UDuelManager_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.HandleOlympiadEnd
// (Final, Iterator, Latent, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UDuelManager::STATIC_HandleOlympiadEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.HandleOlympiadEnd");

	UDuelManager_HandleOlympiadEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.HandleOlympiadUserInfo
// (Defined, Iterator, Latent, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDuelManager::STATIC_HandleOlympiadUserInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.HandleOlympiadUserInfo");

	UDuelManager_HandleOlympiadUserInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.HandleDuelAskStart
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDuelManager::STATIC_HandleDuelAskStart(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.HandleDuelAskStart");

	UDuelManager_HandleDuelAskStart_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            EventID                        (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UDuelManager::STATIC_OnEvent(int EventID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.OnEvent");

	UDuelManager_OnEvent_Params params;
	params.EventID = EventID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.OnLoad
// (Final, Net, Operator, Static, Const)

void UDuelManager::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.OnLoad");

	UDuelManager_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DuelManager.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UDuelManager::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DuelManager.OnRegisterEvent");

	UDuelManager_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UAITimerWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.OnHide");

	UAITimerWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.StartCountUp
// (Final, Iterator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            CurMin                         (Parm)
// int                            CurSec                         (Parm)
// struct FString                 strDisplayTxt                  (Parm, NeedCtorLink)
// int                            TMin                           (Parm)
// int                            TSec                           (Parm)

void UAITimerWnd::STATIC_StartCountUp(int CurMin, int CurSec, const struct FString& strDisplayTxt, int TMin, int TSec)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.StartCountUp");

	UAITimerWnd_StartCountUp_Params params;
	params.CurMin = CurMin;
	params.CurSec = CurSec;
	params.strDisplayTxt = strDisplayTxt;
	params.TMin = TMin;
	params.TSec = TSec;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.StartCountDown
// (Final, Latent, PreOperator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            CurMin                         (Parm)
// int                            CurSec                         (Parm)
// struct FString                 strDisplayTxt                  (Parm, NeedCtorLink)
// int                            TMin                           (Parm)
// int                            TSec                           (Parm)

void UAITimerWnd::STATIC_StartCountDown(int CurMin, int CurSec, const struct FString& strDisplayTxt, int TMin, int TSec)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.StartCountDown");

	UAITimerWnd_StartCountDown_Params params;
	params.CurMin = CurMin;
	params.CurSec = CurSec;
	params.strDisplayTxt = strDisplayTxt;
	params.TMin = TMin;
	params.TSec = TSec;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.TimerReset
// (Final, Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            CurMin                         (Parm)
// int                            CurSec                         (Parm)

void UAITimerWnd::STATIC_TimerReset(int CurMin, int CurSec)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.TimerReset");

	UAITimerWnd_TimerReset_Params params;
	params.CurMin = CurMin;
	params.CurSec = CurSec;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.UpdateTimerCountUp
// (Defined, Iterator, Simulated, Operator, Static, HasOptionalParms, Const)

void UAITimerWnd::STATIC_UpdateTimerCountUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.UpdateTimerCountUp");

	UAITimerWnd_UpdateTimerCountUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.UpdateTimerCountDown
// (Exec, Operator, Static, HasOptionalParms, Const)

void UAITimerWnd::STATIC_UpdateTimerCountDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.UpdateTimerCountDown");

	UAITimerWnd_UpdateTimerCountDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UAITimerWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.OnTimer");

	UAITimerWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.HandleAIController
// (Final, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UAITimerWnd::STATIC_HandleAIController(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.HandleAIController");

	UAITimerWnd_HandleAIController_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UAITimerWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.OnEvent");

	UAITimerWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UAITimerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.OnRegisterEvent");

	UAITimerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AITimerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UAITimerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AITimerWnd.OnLoad");

	UAITimerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UAbnormalStatusWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.OnClickItem");

	UAbnormalStatusWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.HandleLanguageChanged
// (Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UAbnormalStatusWnd::STATIC_HandleLanguageChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.HandleLanguageChanged");

	UAbnormalStatusWnd_HandleLanguageChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.UpdateWindowSize
// (Final, Defined, Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UAbnormalStatusWnd::STATIC_UpdateWindowSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.UpdateWindowSize");

	UAbnormalStatusWnd_UpdateWindowSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.HandleAddShortStatus
// (Final, Defined, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UAbnormalStatusWnd::STATIC_HandleAddShortStatus(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.HandleAddShortStatus");

	UAbnormalStatusWnd_HandleAddShortStatus_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.HandleAddEtcStatus
// (Iterator, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UAbnormalStatusWnd::STATIC_HandleAddEtcStatus(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.HandleAddEtcStatus");

	UAbnormalStatusWnd_HandleAddEtcStatus_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.HandleAddNormalStatus
// (Final, Iterator, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UAbnormalStatusWnd::STATIC_HandleAddNormalStatus(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.HandleAddNormalStatus");

	UAbnormalStatusWnd_HandleAddNormalStatus_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.ClearAll
// (Defined, Iterator, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAbnormalStatusWnd::STATIC_ClearAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.ClearAll");

	UAbnormalStatusWnd_ClearAll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.ClearStatus
// (Defined, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bEtcItem                       (Parm)
// bool                           bShortItem                     (Parm)

void UAbnormalStatusWnd::STATIC_ClearStatus(bool bEtcItem, bool bShortItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.ClearStatus");

	UAbnormalStatusWnd_ClearStatus_Params params;
	params.bEtcItem = bEtcItem;
	params.bShortItem = bShortItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UAbnormalStatusWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.OnShow");

	UAbnormalStatusWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.HandleShowReplayQuitDialogBox
// (Final, Defined, Iterator, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAbnormalStatusWnd::STATIC_HandleShowReplayQuitDialogBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.HandleShowReplayQuitDialogBox");

	UAbnormalStatusWnd_HandleShowReplayQuitDialogBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.HandleDie
// (Defined, Latent, PreOperator, Operator, Static, HasOptionalParms, Const)

void UAbnormalStatusWnd::STATIC_HandleDie()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.HandleDie");

	UAbnormalStatusWnd_HandleDie_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.HandleRestart
// (Final, Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UAbnormalStatusWnd::STATIC_HandleRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.HandleRestart");

	UAbnormalStatusWnd_HandleRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UAbnormalStatusWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.OnEvent");

	UAbnormalStatusWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UAbnormalStatusWnd::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.OnExitState");

	UAbnormalStatusWnd_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UAbnormalStatusWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.OnEnterState");

	UAbnormalStatusWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UAbnormalStatusWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.InitHandle");

	UAbnormalStatusWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UAbnormalStatusWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.OnLoad");

	UAbnormalStatusWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AbnormalStatusWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UAbnormalStatusWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AbnormalStatusWnd.OnRegisterEvent");

	UAbnormalStatusWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillPointRankWnd.InsertKillPoint
// (Defined, Latent, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UKillPointRankWnd::STATIC_InsertKillPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillPointRankWnd.InsertKillPoint");

	UKillPointRankWnd_InsertKillPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillPointRankWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UKillPointRankWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillPointRankWnd.OnHide");

	UKillPointRankWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillPointRankWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UKillPointRankWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillPointRankWnd.OnClickButton");

	UKillPointRankWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillPointRankWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UKillPointRankWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillPointRankWnd.OnEvent");

	UKillPointRankWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillPointRankWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UKillPointRankWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillPointRankWnd.OnShow");

	UKillPointRankWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillPointRankWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UKillPointRankWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillPointRankWnd.OnLoad");

	UKillPointRankWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillPointRankWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UKillPointRankWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillPointRankWnd.OnRegisterEvent");

	UKillPointRankWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandlePetInventoryItemUpdate
// (Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPetWnd::STATIC_HandlePetInventoryItemUpdate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandlePetInventoryItemUpdate");

	UPetWnd_HandlePetInventoryItemUpdate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandlePetInventoryItemList
// (Final, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPetWnd::STATIC_HandlePetInventoryItemList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandlePetInventoryItemList");

	UPetWnd_HandlePetInventoryItemList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandlePetInventoryItemStart
// (Iterator, Latent, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_HandlePetInventoryItemStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandlePetInventoryItemStart");

	UPetWnd_HandlePetInventoryItemStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandleActionPetList
// (Final, Defined, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPetWnd::STATIC_HandleActionPetList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandleActionPetList");

	UPetWnd_HandleActionPetList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandleActionPetListStart
// (Iterator, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_HandleActionPetListStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandleActionPetListStart");

	UPetWnd_HandleActionPetListStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandlePetShow
// (Final, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_HandlePetShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandlePetShow");

	UPetWnd_HandlePetShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandlePetInfoUpdate
// (Final, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_HandlePetInfoUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandlePetInfoUpdate");

	UPetWnd_HandlePetInfoUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandlePetSummonedStatusClose
// (Final, Iterator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_HandlePetSummonedStatusClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandlePetSummonedStatusClose");

	UPetWnd_HandlePetSummonedStatusClose_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.SetVisibleNameBtn
// (Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bShow                          (Parm)

void UPetWnd::STATIC_SetVisibleNameBtn(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.SetVisibleNameBtn");

	UPetWnd_SetVisibleNameBtn_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandlePetShowNameBtn
// (Defined, Iterator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPetWnd::STATIC_HandlePetShowNameBtn(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandlePetShowNameBtn");

	UPetWnd_HandlePetShowNameBtn_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandleRegPetName
// (Final, Defined, Iterator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPetWnd::STATIC_HandleRegPetName(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandleRegPetName");

	UPetWnd_HandleRegPetName_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.ClearInvenWnd
// (Latent, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_ClearInvenWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.ClearInvenWnd");

	UPetWnd_ClearInvenWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.ClearActionWnd
// (Final, Defined, Iterator, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_ClearActionWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.ClearActionWnd");

	UPetWnd_ClearActionWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UPetWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.Clear");

	UPetWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.OnRClickItem
// (Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UPetWnd::STATIC_OnRClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.OnRClickItem");

	UPetWnd_OnRClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.OnDBClickItem
// (Final, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UPetWnd::STATIC_OnDBClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.OnDBClickItem");

	UPetWnd_OnDBClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UPetWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.OnClickItem");

	UPetWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.OnNameClick
// (Final, Latent, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_OnNameClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.OnNameClick");

	UPetWnd_OnNameClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UPetWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.OnClickButton");

	UPetWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandleDialogOK");

	UPetWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPetWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.OnEvent");

	UPetWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.HandleLanguageChanged
// (Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_HandleLanguageChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.HandleLanguageChanged");

	UPetWnd_HandleLanguageChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strTarget                      (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UPetWnd::STATIC_OnDropItem(const struct FString& strTarget, const struct FItemInfo& Info, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.OnDropItem");

	UPetWnd_OnDropItem_Params params;
	params.strTarget = strTarget;
	params.Info = Info;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPetWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.OnShow");

	UPetWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.InitHandleCOD");

	UPetWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.InitHandle");

	UPetWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPetWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.OnLoad");

	UPetWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPetWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetWnd.OnRegisterEvent");

	UPetWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.FillTutorialList
// (Iterator, Latent, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void USystemTutorialWnd::STATIC_FillTutorialList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.FillTutorialList");

	USystemTutorialWnd_FillTutorialList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.BubbleData
// (Defined, Iterator, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            A                              (Parm)

void USystemTutorialWnd::STATIC_BubbleData(int A)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.BubbleData");

	USystemTutorialWnd_BubbleData_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.ShowTutorialIcon
// (Final, Iterator, Latent, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            A                              (Parm)
// int                            B                              (Parm)
// int                            C                              (Parm)

void USystemTutorialWnd::STATIC_ShowTutorialIcon(int A, int B, int C)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.ShowTutorialIcon");

	USystemTutorialWnd_ShowTutorialIcon_Params params;
	params.A = A;
	params.B = B;
	params.C = C;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.OnTutorialCondition
// (Defined, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            CurrentEvent                   (Parm)

void USystemTutorialWnd::STATIC_OnTutorialCondition(int CurrentEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.OnTutorialCondition");

	USystemTutorialWnd_OnTutorialCondition_Params params;
	params.CurrentEvent = CurrentEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.ClearCurrentID
// (Iterator, Latent, Operator, Static, HasOptionalParms, Const)

void USystemTutorialWnd::STATIC_ClearCurrentID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.ClearCurrentID");

	USystemTutorialWnd_ClearCurrentID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 btnName                        (Parm, NeedCtorLink)

void USystemTutorialWnd::STATIC_OnClickButton(const struct FString& btnName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.OnClickButton");

	USystemTutorialWnd_OnClickButton_Params params;
	params.btnName = btnName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.LaunchTutorial
// (Defined, Iterator, Latent, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// int                            Title                          (Parm)
// int                            Msg                            (Parm)

void USystemTutorialWnd::STATIC_LaunchTutorial(int Id, int Title, int Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.LaunchTutorial");

	USystemTutorialWnd_LaunchTutorial_Params params;
	params.Id = Id;
	params.Title = Title;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USystemTutorialWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.OnHide");

	USystemTutorialWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USystemTutorialWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.OnShow");

	USystemTutorialWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void USystemTutorialWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.Initialize");

	USystemTutorialWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USystemTutorialWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.OnLoad");

	USystemTutorialWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.OnStart
// (NetReliable, Exec, Native)

void USystemTutorialWnd::OnStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.OnStart");

	USystemTutorialWnd_OnStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PrevStateName                (Parm)

void USystemTutorialWnd::STATIC_OnEnterState(const struct FName& a_PrevStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialWnd.OnEnterState");

	USystemTutorialWnd_OnEnterState_Params params;
	params.a_PrevStateName = a_PrevStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UAuctionWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.HandleDialogOK");

	UAuctionWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.OnBtnBidInputClick
// (Final, Defined, Latent, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAuctionWnd::STATIC_OnBtnBidInputClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.OnBtnBidInputClick");

	UAuctionWnd_OnBtnBidInputClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.UpdateAuctionWnd
// (Iterator, Latent, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAuctionWnd::STATIC_UpdateAuctionWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.UpdateAuctionWnd");

	UAuctionWnd_UpdateAuctionWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UAuctionWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.OnClickButton");

	UAuctionWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UAuctionWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.OnHide");

	UAuctionWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.ComputeScrollHeight
// (Final, Iterator, Latent, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 tempStr                        (Parm, NeedCtorLink)

void UAuctionWnd::STATIC_ComputeScrollHeight(const struct FString& tempStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.ComputeScrollHeight");

	UAuctionWnd_ComputeScrollHeight_Params params;
	params.tempStr = tempStr;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.InsertAuctionItem
// (Defined, Iterator, Latent, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAuctionWnd::STATIC_InsertAuctionItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.InsertAuctionItem");

	UAuctionWnd_InsertAuctionItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UAuctionWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.OnTimer");

	UAuctionWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UAuctionWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.OnEvent");

	UAuctionWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UAuctionWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.Load");

	UAuctionWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UAuctionWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.Initialize");

	UAuctionWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UAuctionWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.OnLoad");

	UAuctionWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UAuctionWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionWnd.OnRegisterEvent");

	UAuctionWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorShopWnd.HandleOKButton
// (Final, Defined, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorShopWnd::STATIC_HandleOKButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorShopWnd.HandleOKButton");

	UManorShopWnd_HandleOKButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorShopWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UManorShopWnd::STATIC_HandleAddItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorShopWnd.HandleAddItem");

	UManorShopWnd_HandleAddItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorShopWnd.HandleOpenWindow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UManorShopWnd::STATIC_HandleOpenWindow(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorShopWnd.HandleOpenWindow");

	UManorShopWnd_HandleOpenWindow_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorShopWnd.MoveItemTopToBottom
// (Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// bool                           bAllItem                       (Parm)

void UManorShopWnd::STATIC_MoveItemTopToBottom(int Index, bool bAllItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorShopWnd.MoveItemTopToBottom");

	UManorShopWnd_MoveItemTopToBottom_Params params;
	params.Index = Index;
	params.bAllItem = bAllItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorShopWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UManorShopWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorShopWnd.OnEvent");

	UManorShopWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorShopWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UManorShopWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorShopWnd.OnLoad");

	UManorShopWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorShopWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UManorShopWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorShopWnd.OnRegisterEvent");

	UManorShopWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaInfoWnd.ShowHennaInfoWnd
// (Defined, Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UHennaInfoWnd::STATIC_ShowHennaInfoWnd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaInfoWnd.ShowHennaInfoWnd");

	UHennaInfoWnd_ShowHennaInfoWnd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaInfoWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UHennaInfoWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaInfoWnd.OnEvent");

	UHennaInfoWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaInfoWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UHennaInfoWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaInfoWnd.OnShow");

	UHennaInfoWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaInfoWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UHennaInfoWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaInfoWnd.OnClickButton");

	UHennaInfoWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaInfoWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UHennaInfoWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaInfoWnd.OnLoad");

	UHennaInfoWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HennaInfoWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UHennaInfoWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HennaInfoWnd.OnRegisterEvent");

	UHennaInfoWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestListWnd.InitQuestTooltip
// (Singular, Operator, Static, HasOptionalParms, Const)

void UQuestListWnd::STATIC_InitQuestTooltip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestListWnd.InitQuestTooltip");

	UQuestListWnd_InitQuestTooltip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestListWnd.ShowQuestTarget
// (Defined, Iterator, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UQuestListWnd::STATIC_ShowQuestTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestListWnd.ShowQuestTarget");

	UQuestListWnd_ShowQuestTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestListWnd.HandleQuestInfo
// (Final, Defined, Iterator, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UQuestListWnd::STATIC_HandleQuestInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestListWnd.HandleQuestInfo");

	UQuestListWnd_HandleQuestInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestListWnd.HandleQuestInfoStart
// (Defined, Iterator, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UQuestListWnd::STATIC_HandleQuestInfoStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestListWnd.HandleQuestInfoStart");

	UQuestListWnd_HandleQuestInfoStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestListWnd.OnClickListCtrlRecord
// (Defined, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 Id                             (Parm, NeedCtorLink)

void UQuestListWnd::STATIC_OnClickListCtrlRecord(const struct FString& Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestListWnd.OnClickListCtrlRecord");

	UQuestListWnd_OnClickListCtrlRecord_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestListWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UQuestListWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestListWnd.OnClickButton");

	UQuestListWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestListWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UQuestListWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestListWnd.OnEvent");

	UQuestListWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestListWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UQuestListWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestListWnd.OnLoad");

	UQuestListWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestListWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UQuestListWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestListWnd.OnRegisterEvent");

	UQuestListWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.HandleActionSummonedList
// (Final, Iterator, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void USummonedWnd::STATIC_HandleActionSummonedList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.HandleActionSummonedList");

	USummonedWnd_HandleActionSummonedList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.HandlePetShow
// (Final, Singular, Net, Operator, Static, HasOptionalParms, Const)

void USummonedWnd::STATIC_HandlePetShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.HandlePetShow");

	USummonedWnd_HandlePetShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.HandlePetInfoUpdate
// (Final, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedWnd::STATIC_HandlePetInfoUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.HandlePetInfoUpdate");

	USummonedWnd_HandlePetInfoUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.HandlePetSummonedStatusClose
// (Final, Iterator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedWnd::STATIC_HandlePetSummonedStatusClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.HandlePetSummonedStatusClose");

	USummonedWnd_HandlePetSummonedStatusClose_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.ClearActionWnd
// (Final, Defined, Iterator, Latent, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void USummonedWnd::STATIC_ClearActionWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.ClearActionWnd");

	USummonedWnd_ClearActionWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void USummonedWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.Clear");

	USummonedWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.HandleActionSummonedListStart
// (Defined, Iterator, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void USummonedWnd::STATIC_HandleActionSummonedListStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.HandleActionSummonedListStart");

	USummonedWnd_HandleActionSummonedListStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void USummonedWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.OnClickItem");

	USummonedWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USummonedWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.OnEvent");

	USummonedWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.HandleLanguageChanged
// (Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedWnd::STATIC_HandleLanguageChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.HandleLanguageChanged");

	USummonedWnd_HandleLanguageChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USummonedWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.OnShow");

	USummonedWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.InitHandleCOD");

	USummonedWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.InitHandle");

	USummonedWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USummonedWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.OnLoad");

	USummonedWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USummonedWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedWnd.OnRegisterEvent");

	USummonedWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.HandlePremiumState
// (Iterator, Latent, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UStatusWnd::STATIC_HandlePremiumState(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.HandlePremiumState");

	UStatusWnd_HandlePremiumState_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.HandleRegenStatus
// (Final, Iterator, Latent, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UStatusWnd::STATIC_HandleRegenStatus(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.HandleRegenStatus");

	UStatusWnd_HandleRegenStatus_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.HandleUpdateInfo
// (Final, Defined, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UStatusWnd::STATIC_HandleUpdateInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.HandleUpdateInfo");

	UStatusWnd_HandleUpdateInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.HandleUpdateGauge
// (Final, Defined, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)
// int                            type                           (Parm)

void UStatusWnd::STATIC_HandleUpdateGauge(const struct FString& param, int type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.HandleUpdateGauge");

	UStatusWnd_HandleUpdateGauge_Params params;
	params.param = param;
	params.type = type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.HandleVitalityPointInfo
// (Final, Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UStatusWnd::STATIC_HandleVitalityPointInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.HandleVitalityPointInfo");

	UStatusWnd_HandleVitalityPointInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UStatusWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.OnEvent");

	UStatusWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.OnLButtonDown
// (Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UStatusWnd::STATIC_OnLButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.OnLButtonDown");

	UStatusWnd_OnLButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.LevelOfVitality
// (Final, Defined, Iterator, Latent, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Vitality                       (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UStatusWnd::STATIC_LevelOfVitality(int Vitality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.LevelOfVitality");

	UStatusWnd_LevelOfVitality_Params params;
	params.Vitality = Vitality;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.StatusWnd.UpdateVp
// (Defined, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Vitality                       (Parm)

void UStatusWnd::STATIC_UpdateVp(int Vitality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.UpdateVp");

	UStatusWnd_UpdateVp_Params params;
	params.Vitality = Vitality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.UpdateUserInfo
// (Final, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UStatusWnd::STATIC_UpdateUserInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.UpdateUserInfo");

	UStatusWnd_UpdateUserInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.UpdateUserGauge
// (NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            type                           (Parm)

void UStatusWnd::STATIC_UpdateUserGauge(int type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.UpdateUserGauge");

	UStatusWnd_UpdateUserGauge_Params params;
	params.type = type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UStatusWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.OnEnterState");

	UStatusWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.InitAnimation
// (Final, Defined, PreOperator, Operator, Static, HasOptionalParms, Const)

void UStatusWnd::STATIC_InitAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.InitAnimation");

	UStatusWnd_InitAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.PlayAnimationPrem
// (Final, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UStatusWnd::STATIC_PlayAnimationPrem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.PlayAnimationPrem");

	UStatusWnd_PlayAnimationPrem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.PlayAnimation
// (Final, PreOperator, Singular, Simulated, Exec, Native, Event, Static, Const)

void UStatusWnd::STATIC_PlayAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.PlayAnimation");

	UStatusWnd_PlayAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UStatusWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.OnTimer");

	UStatusWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UStatusWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.InitHandleCOD");

	UStatusWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UStatusWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.InitHandle");

	UStatusWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UStatusWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.OnLoad");

	UStatusWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.StatusWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UStatusWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.StatusWnd.OnRegisterEvent");

	UStatusWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickChangeServerButton
// (Defined, Latent, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickChangeServerButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickChangeServerButton");

	UGMWnd_OnClickChangeServerButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickForcePetitionButton
// (Final, Defined, Latent, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickForcePetitionButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickForcePetitionButton");

	UGMWnd_OnClickForcePetitionButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickSkillListButton
// (Iterator, Latent, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickSkillListButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickSkillListButton");

	UGMWnd_OnClickSkillListButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickItemListButton
// (Final, Iterator, Latent, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickItemListButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickItemListButton");

	UGMWnd_OnClickItemListButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickNPCListButton
// (Defined, Iterator, Latent, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickNPCListButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickNPCListButton");

	UGMWnd_OnClickNPCListButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.SendHome
// (Final, Defined, Iterator, Latent, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_SendHome()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.SendHome");

	UGMWnd_SendHome_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickSendHomeButton
// (Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickSendHomeButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickSendHomeButton");

	UGMWnd_OnClickSendHomeButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickPetitionButton
// (Final, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickPetitionButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickPetitionButton");

	UGMWnd_OnClickPetitionButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickClanButton
// (Defined, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickClanButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickClanButton");

	UGMWnd_OnClickClanButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickStoreButton
// (Final, Defined, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickStoreButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickStoreButton");

	UGMWnd_OnClickStoreButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickInfoButton
// (Iterator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickInfoButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickInfoButton");

	UGMWnd_OnClickInfoButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickQuestButton
// (Final, Iterator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickQuestButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickQuestButton");

	UGMWnd_OnClickQuestButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickMagicSkillButton
// (Defined, Iterator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickMagicSkillButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickMagicSkillButton");

	UGMWnd_OnClickMagicSkillButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickInventoryButton
// (Final, Defined, Iterator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickInventoryButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickInventoryButton");

	UGMWnd_OnClickInventoryButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickDetailStatusButton
// (Latent, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickDetailStatusButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickDetailStatusButton");

	UGMWnd_OnClickDetailStatusButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.Recall
// (Final, Latent, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_Recall()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.Recall");

	UGMWnd_Recall_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickRecallButton
// (Defined, Latent, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickRecallButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickRecallButton");

	UGMWnd_OnClickRecallButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickMoveButton
// (Final, Defined, Latent, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickMoveButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickMoveButton");

	UGMWnd_OnClickMoveButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickTeleButton
// (Iterator, Latent, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_OnClickTeleButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickTeleButton");

	UGMWnd_OnClickTeleButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_ButtonID                     (Parm, NeedCtorLink)

void UGMWnd::STATIC_OnClickButton(const struct FString& a_ButtonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnClickButton");

	UGMWnd_OnClickButton_Params params;
	params.a_ButtonID = a_ButtonID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.HandleDialogCancel
// (Final, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_HandleDialogCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.HandleDialogCancel");

	UGMWnd_HandleDialogCancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.HandleTargetUpdate
// (Iterator, Latent, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_HandleTargetUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.HandleTargetUpdate");

	UGMWnd_HandleTargetUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.HandleDialogOK");

	UGMWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.HandleShowGMWnd
// (Final, Iterator, Latent, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMWnd::STATIC_HandleShowGMWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.HandleShowGMWnd");

	UGMWnd_HandleShowGMWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnEvent");

	UGMWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UGMWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnLoad");

	UGMWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UGMWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWnd.OnRegisterEvent");

	UGMWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.MakeUC
// (Final, Defined, Iterator, Latent, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Filename                       (Parm, NeedCtorLink)

void UUIEditor_FileManager::STATIC_MakeUC(const struct FString& Filename)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.MakeUC");

	UUIEditor_FileManager_MakeUC_Params params;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.SaveXMLFile
// (Defined, Iterator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Filename                       (Parm, NeedCtorLink)

void UUIEditor_FileManager::STATIC_SaveXMLFile(const struct FString& Filename)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.SaveXMLFile");

	UUIEditor_FileManager_SaveXMLFile_Params params;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.OnMakeClick
// (Defined, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UUIEditor_FileManager::STATIC_OnMakeClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.OnMakeClick");

	UUIEditor_FileManager_OnMakeClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.OnSaveClick
// (Iterator, Latent, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UUIEditor_FileManager::STATIC_OnSaveClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.OnSaveClick");

	UUIEditor_FileManager_OnSaveClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.OnLoadClick
// (Final, Defined, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UUIEditor_FileManager::STATIC_OnLoadClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.OnLoadClick");

	UUIEditor_FileManager_OnLoadClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.OnCompleteEditBox
// (Final, Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUIEditor_FileManager::STATIC_OnCompleteEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.OnCompleteEditBox");

	UUIEditor_FileManager_OnCompleteEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UUIEditor_FileManager::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.OnClickButton");

	UUIEditor_FileManager_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.GetParentDirectory
// (Defined, Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Path                           (Parm, NeedCtorLink)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UUIEditor_FileManager::STATIC_GetParentDirectory(const struct FString& Path)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.GetParentDirectory");

	UUIEditor_FileManager_GetParentDirectory_Params params;
	params.Path = Path;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UIEditor_FileManager.Update
// (Final, Defined, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_FileManager::STATIC_Update()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.Update");

	UUIEditor_FileManager_Update_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.OnDBClickListBoxItem
// (Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUIEditor_FileManager::STATIC_OnDBClickListBoxItem(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.OnDBClickListBoxItem");

	UUIEditor_FileManager_OnDBClickListBoxItem_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UUIEditor_FileManager::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.OnEvent");

	UUIEditor_FileManager_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.InitControlItem
// (Defined, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_FileManager::STATIC_InitControlItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.InitControlItem");

	UUIEditor_FileManager_InitControlItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_FileManager::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.InitHandle");

	UUIEditor_FileManager_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.UpdateFileList
// (Final, Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UUIEditor_FileManager::STATIC_UpdateFileList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.UpdateFileList");

	UUIEditor_FileManager_UpdateFileList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.UpdateDirectory
// (Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UUIEditor_FileManager::STATIC_UpdateDirectory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.UpdateDirectory");

	UUIEditor_FileManager_UpdateDirectory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.OnLoad
// (Final, Net, Operator, Static, Const)

void UUIEditor_FileManager::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.OnLoad");

	UUIEditor_FileManager_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_FileManager.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UUIEditor_FileManager::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_FileManager.OnRegisterEvent");

	UUIEditor_FileManager_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWndCommon.GetAmbiguousLevelString
// (Defined, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_Level                        (Parm)
// bool                           a_HasSpace                     (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UPartyMatchWndCommon::STATIC_GetAmbiguousLevelString(int a_Level, bool a_HasSpace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWndCommon.GetAmbiguousLevelString");

	UPartyMatchWndCommon_GetAmbiguousLevelString_Params params;
	params.a_Level = a_Level;
	params.a_HasSpace = a_HasSpace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UnionMatchingWnd.OnSendPacketWhenHiding
// (Final, Defined, Iterator, PreOperator, Singular, Operator, Static, Const)

void UUnionMatchingWnd::STATIC_OnSendPacketWhenHiding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnSendPacketWhenHiding");

	UUnionMatchingWnd_OnSendPacketWhenHiding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.UpdateMyMembershipType
// (Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUnionMatchingWnd::STATIC_UpdateMyMembershipType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.UpdateMyMembershipType");

	UUnionMatchingWnd_UpdateMyMembershipType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.ExitPartyRoom
// (Final, Defined, Iterator, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUnionMatchingWnd::STATIC_ExitPartyRoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.ExitPartyRoom");

	UUnionMatchingWnd_ExitPartyRoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.OnExitButtonClick
// (Final, Defined, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void UUnionMatchingWnd::STATIC_OnExitButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnExitButtonClick");

	UUnionMatchingWnd_OnExitButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.OnbtnUnionInviteClick
// (Final, Latent, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UUnionMatchingWnd::STATIC_OnbtnUnionInviteClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnbtnUnionInviteClick");

	UUnionMatchingWnd_OnbtnUnionInviteClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.OnInviteButtonClick
// (Final, Defined, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUnionMatchingWnd::STATIC_OnInviteButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnInviteButtonClick");

	UUnionMatchingWnd_OnInviteButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.OnBanButtonClick
// (Defined, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void UUnionMatchingWnd::STATIC_OnBanButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnBanButtonClick");

	UUnionMatchingWnd_OnBanButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.OnbtnUnionInfoClick
// (Defined, Latent, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UUnionMatchingWnd::STATIC_OnbtnUnionInfoClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnbtnUnionInfoClick");

	UUnionMatchingWnd_OnbtnUnionInfoClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.OnRoomSettingButtonClick
// (Final, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void UUnionMatchingWnd::STATIC_OnRoomSettingButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnRoomSettingButtonClick");

	UUnionMatchingWnd_OnRoomSettingButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UUnionMatchingWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnClickButton");

	UUnionMatchingWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.HandleMpccRoomMemberInfo
// (Final, Defined, Latent, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionMatchingWnd::STATIC_HandleMpccRoomMemberInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.HandleMpccRoomMemberInfo");

	UUnionMatchingWnd_HandleMpccRoomMemberInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.HandleMpccRoomMemberStart
// (Iterator, Latent, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionMatchingWnd::STATIC_HandleMpccRoomMemberStart(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.HandleMpccRoomMemberStart");

	UUnionMatchingWnd_HandleMpccRoomMemberStart_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.UpdateData
// (Final, Iterator, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           a_ToControl                    (Parm)

void UUnionMatchingWnd::STATIC_UpdateData(bool a_ToControl)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.UpdateData");

	UUnionMatchingWnd_UpdateData_Params params;
	params.a_ToControl = a_ToControl;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.RemoveMember
// (Final, Defined, Iterator, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_MemberID                     (Parm)

void UUnionMatchingWnd::STATIC_RemoveMember(int a_MemberID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.RemoveMember");

	UUnionMatchingWnd_RemoveMember_Params params;
	params.a_MemberID = a_MemberID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.AddMember
// (Defined, Iterator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_MemberID                     (Parm)
// struct FString                 a_MemberName                   (Parm, NeedCtorLink)
// int                            a_ClassID                      (Parm)
// int                            a_Level                        (Parm)
// int                            a_ZoneID                       (Parm)
// int                            a_MembershipType               (Parm)

void UUnionMatchingWnd::STATIC_AddMember(int a_MemberID, const struct FString& a_MemberName, int a_ClassID, int a_Level, int a_ZoneID, int a_MembershipType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.AddMember");

	UUnionMatchingWnd_AddMember_Params params;
	params.a_MemberID = a_MemberID;
	params.a_MemberName = a_MemberName;
	params.a_ClassID = a_ClassID;
	params.a_Level = a_Level;
	params.a_ZoneID = a_ZoneID;
	params.a_MembershipType = a_MembershipType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.HandleManageMpccRoomMember
// (Final, Iterator, Latent, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionMatchingWnd::STATIC_HandleManageMpccRoomMember(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.HandleManageMpccRoomMember");

	UUnionMatchingWnd_HandleManageMpccRoomMember_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.HandleDismissMpccRoom
// (Defined, Iterator, Latent, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionMatchingWnd::STATIC_HandleDismissMpccRoom(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.HandleDismissMpccRoom");

	UUnionMatchingWnd_HandleDismissMpccRoom_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.HandleMpccRoomInfo
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionMatchingWnd::STATIC_HandleMpccRoomInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.HandleMpccRoomInfo");

	UUnionMatchingWnd_HandleMpccRoomInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.HandleMpccRoomChatMessage
// (Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionMatchingWnd::STATIC_HandleMpccRoomChatMessage(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.HandleMpccRoomChatMessage");

	UUnionMatchingWnd_HandleMpccRoomChatMessage_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionMatchingWnd::STATIC_OnEvent(int a_EventID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnEvent");

	UUnionMatchingWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUnionMatchingWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.Load");

	UUnionMatchingWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUnionMatchingWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.InitializeCOD");

	UUnionMatchingWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UUnionMatchingWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.Initialize");

	UUnionMatchingWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UUnionMatchingWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnLoad");

	UUnionMatchingWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionMatchingWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UUnionMatchingWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionMatchingWnd.OnRegisterEvent");

	UUnionMatchingWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UFishViewportWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.OnTimer");

	UFishViewportWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UFishViewportWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.OnClickButton");

	UFishViewportWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.ShowFishStringWithPenalty
// (Iterator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            strID                          (Parm)
// int                            DeltaHP                        (Parm)
// int                            Penalty                        (Parm)

void UFishViewportWnd::STATIC_ShowFishStringWithPenalty(int strID, int DeltaHP, int Penalty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.ShowFishStringWithPenalty");

	UFishViewportWnd_ShowFishStringWithPenalty_Params params;
	params.strID = strID;
	params.DeltaHP = DeltaHP;
	params.Penalty = Penalty;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.ShowFishString
// (Final, Iterator, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            strID                          (Parm)
// int                            DeltaHP                        (Parm)

void UFishViewportWnd::STATIC_ShowFishString(int strID, int DeltaHP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.ShowFishString");

	UFishViewportWnd_ShowFishString_Params params;
	params.strID = strID;
	params.DeltaHP = DeltaHP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.showeffect
// (Final, Iterator, PreOperator, NetReliable, Exec, Operator)

void UFishViewportWnd::showeffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.showeffect");

	UFishViewportWnd_showeffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.HandleSetFishStatus
// (Defined, Iterator, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UFishViewportWnd::STATIC_HandleSetFishStatus(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.HandleSetFishStatus");

	UFishViewportWnd_HandleSetFishStatus_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.HandleInitFishStatus
// (Final, Defined, Iterator, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UFishViewportWnd::STATIC_HandleInitFishStatus(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.HandleInitFishStatus");

	UFishViewportWnd_HandleInitFishStatus_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.HideHPBarNEtc
// (Final, Defined, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UFishViewportWnd::STATIC_HideHPBarNEtc()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.HideHPBarNEtc");

	UFishViewportWnd_HideHPBarNEtc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.ShowHPBarNEtc
// (Final, Latent, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UFishViewportWnd::STATIC_ShowHPBarNEtc()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.ShowHPBarNEtc");

	UFishViewportWnd_ShowHPBarNEtc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UFishViewportWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.OnEvent");

	UFishViewportWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UFishViewportWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.InitHandleCOD");

	UFishViewportWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UFishViewportWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.InitHandle");

	UFishViewportWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UFishViewportWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.OnLoad");

	UFishViewportWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FishViewportWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UFishViewportWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FishViewportWnd.OnRegisterEvent");

	UFishViewportWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.ShowAirTutorial
// (Final, Defined, Latent, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SystemMsgID                    (Parm)

void UFlightTransformCtrlWnd::STATIC_ShowAirTutorial(int SystemMsgID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.ShowAirTutorial");

	UFlightTransformCtrlWnd_ShowAirTutorial_Params params;
	params.SystemMsgID = SystemMsgID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.OnReserveShortCut
// (Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightTransformCtrlWnd::STATIC_OnReserveShortCut(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.OnReserveShortCut");

	UFlightTransformCtrlWnd_OnReserveShortCut_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.ExecuteShortcutCommandBySlot
// (Final, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightTransformCtrlWnd::STATIC_ExecuteShortcutCommandBySlot(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.ExecuteShortcutCommandBySlot");

	UFlightTransformCtrlWnd_ExecuteShortcutCommandBySlot_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.HandleShortcutPageUpdate
// (Final, Iterator, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UFlightTransformCtrlWnd::STATIC_HandleShortcutPageUpdate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.HandleShortcutPageUpdate");

	UFlightTransformCtrlWnd_HandleShortcutPageUpdate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.HandleShortcutClear
// (Defined, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UFlightTransformCtrlWnd::STATIC_HandleShortcutClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.HandleShortcutClear");

	UFlightTransformCtrlWnd_HandleShortcutClear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.HandleShortcutUpdate
// (Final, Defined, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UFlightTransformCtrlWnd::STATIC_HandleShortcutUpdate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.HandleShortcutUpdate");

	UFlightTransformCtrlWnd_HandleShortcutUpdate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.ShortCutUpdateAll
// (Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UFlightTransformCtrlWnd::STATIC_ShortCutUpdateAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.ShortCutUpdateAll");

	UFlightTransformCtrlWnd_ShortCutUpdateAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.OnFlightTransformState
// (Final, Iterator, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightTransformCtrlWnd::STATIC_OnFlightTransformState(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.OnFlightTransformState");

	UFlightTransformCtrlWnd_OnFlightTransformState_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UFlightTransformCtrlWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.OnTimer");

	UFlightTransformCtrlWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightTransformCtrlWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.OnEvent");

	UFlightTransformCtrlWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UFlightTransformCtrlWnd::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.OnExitState");

	UFlightTransformCtrlWnd_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UFlightTransformCtrlWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.OnEnterState");

	UFlightTransformCtrlWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UFlightTransformCtrlWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.OnClickButton");

	UFlightTransformCtrlWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.updateLockButton
// (Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UFlightTransformCtrlWnd::STATIC_updateLockButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.updateLockButton");

	UFlightTransformCtrlWnd_updateLockButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UFlightTransformCtrlWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.OnLoad");

	UFlightTransformCtrlWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTransformCtrlWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UFlightTransformCtrlWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTransformCtrlWnd.OnRegisterEvent");

	UFlightTransformCtrlWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ReplayLogoWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UReplayLogoWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayLogoWnd.OnLoad");

	UReplayLogoWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoadingWnd.CheckResolution
// (Defined, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void ULoadingWnd::STATIC_CheckResolution()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoadingWnd.CheckResolution");

	ULoadingWnd_CheckResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoadingWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void ULoadingWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoadingWnd.OnEvent");

	ULoadingWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoadingWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void ULoadingWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoadingWnd.OnLoad");

	ULoadingWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoadingWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void ULoadingWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoadingWnd.OnRegisterEvent");

	ULoadingWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UCalculatorWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.OnClickButton");

	UCalculatorWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.OnKeyUp
// (Final, Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// TEnumAsByte<EInputKey>         Key                            (Parm)

void UCalculatorWnd::STATIC_OnKeyUp(class UWindowHandle* a_WindowHandle, TEnumAsByte<EInputKey> Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.OnKeyUp");

	UCalculatorWnd_OnKeyUp_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.ProcessBtn
// (Defined, Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EInputKey>         iValue                         (Parm)

void UCalculatorWnd::STATIC_ProcessBtn(TEnumAsByte<EInputKey> iValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.ProcessBtn");

	UCalculatorWnd_ProcessBtn_Params params;
	params.iValue = iValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.ProcessEqual
// (Final, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCalculatorWnd::STATIC_ProcessEqual()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.ProcessEqual");

	UCalculatorWnd_ProcessEqual_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.ProcessOperator
// (Final, Defined, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EOperator>         a_Operator                     (Parm)

void UCalculatorWnd::STATIC_ProcessOperator(TEnumAsByte<EOperator> a_Operator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.ProcessOperator");

	UCalculatorWnd_ProcessOperator_Params params;
	params.a_Operator = a_Operator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.ProcessNumeric
// (Final, Defined, Iterator, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_Number                       (Parm)

void UCalculatorWnd::STATIC_ProcessNumeric(int a_Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.ProcessNumeric");

	UCalculatorWnd_ProcessNumeric_Params params;
	params.a_Number = a_Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.SetNumeric
// (Latent, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_Number                       (Parm)

void UCalculatorWnd::STATIC_SetNumeric(int a_Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.SetNumeric");

	UCalculatorWnd_SetNumeric_Params params;
	params.a_Number = a_Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.AddNumeric
// (Defined, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_Number                       (Parm)

void UCalculatorWnd::STATIC_AddNumeric(int a_Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.AddNumeric");

	UCalculatorWnd_AddNumeric_Params params;
	params.a_Number = a_Number;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UCalculatorWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.OnEvent");

	UCalculatorWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.Backspace
// (Defined, Iterator, Latent, Native, Event, Static, Const)

void UCalculatorWnd::STATIC_Backspace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.Backspace");

	UCalculatorWnd_Backspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.Calc
// (Iterator, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            A                              (Parm)
// int                            B                              (Parm)
// TEnumAsByte<EOperator>         Op                             (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UCalculatorWnd::STATIC_Calc(int A, int B, TEnumAsByte<EOperator> Op)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.Calc");

	UCalculatorWnd_Calc_Params params;
	params.A = A;
	params.B = B;
	params.Op = Op;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.CalculatorWnd.GetOperand
// (Final, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UCalculatorWnd::STATIC_GetOperand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.GetOperand");

	UCalculatorWnd_GetOperand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.CalculatorWnd.GetString
// (Final, Defined, PreOperator, Net, NetReliable, Simulated, Native)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UCalculatorWnd::GetString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.GetString");

	UCalculatorWnd_GetString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.CalculatorWnd.SetString
// (Defined, Latent, PreOperator, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 Str                            (Parm, NeedCtorLink)

void UCalculatorWnd::STATIC_SetString(const struct FString& Str)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.SetString");

	UCalculatorWnd_SetString_Params params;
	params.Str = Str;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.AddString
// (Final, Defined, Latent, Exec, Native, Event, Static, Const)
// Parameters:
// struct FString                 Str                            (Parm, NeedCtorLink)

void UCalculatorWnd::STATIC_AddString(const struct FString& Str)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.AddString");

	UCalculatorWnd_AddString_Params params;
	params.Str = Str;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.SetOperator
// (Final, Defined, Iterator, Latent, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EOperator>         Op                             (Parm)

void UCalculatorWnd::STATIC_SetOperator(TEnumAsByte<EOperator> Op)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.SetOperator");

	UCalculatorWnd_SetOperator_Params params;
	params.Op = Op;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.SetOperand1
// (Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_Operand                      (Parm)

void UCalculatorWnd::STATIC_SetOperand1(int a_Operand)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.SetOperand1");

	UCalculatorWnd_SetOperand1_Params params;
	params.a_Operand = a_Operand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.CE
// (Iterator, Latent, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCalculatorWnd::STATIC_CE()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.CE");

	UCalculatorWnd_CE_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.InitCalculator
// (Final, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)

void UCalculatorWnd::STATIC_InitCalculator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.InitCalculator");

	UCalculatorWnd_InitCalculator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UCalculatorWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.OnShow");

	UCalculatorWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UCalculatorWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.OnLoad");

	UCalculatorWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CalculatorWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UCalculatorWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CalculatorWnd.OnRegisterEvent");

	UCalculatorWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyManufactureWnd.HandleInventoryItem
// (Final, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void URecipeBuyManufactureWnd::STATIC_HandleInventoryItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyManufactureWnd.HandleInventoryItem");

	URecipeBuyManufactureWnd_HandleInventoryItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyManufactureWnd.SetMPBar
// (Final, Defined, Iterator, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            currentMP                      (Parm)

void URecipeBuyManufactureWnd::STATIC_SetMPBar(int currentMP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyManufactureWnd.SetMPBar");

	URecipeBuyManufactureWnd_SetMPBar_Params params;
	params.currentMP = currentMP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyManufactureWnd.ReceiveRecipeShopSellList
// (PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            MerchantID                     (Parm)
// int                            RecipeID                       (Parm)
// int                            currentMP                      (Parm)
// int                            MaxMP                          (Parm)
// int                            MakingResult                   (Parm)
// struct FINT64                  Adena                          (Parm)

void URecipeBuyManufactureWnd::STATIC_ReceiveRecipeShopSellList(int MerchantID, int RecipeID, int currentMP, int MaxMP, int MakingResult, const struct FINT64& Adena)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyManufactureWnd.ReceiveRecipeShopSellList");

	URecipeBuyManufactureWnd_ReceiveRecipeShopSellList_Params params;
	params.MerchantID = MerchantID;
	params.RecipeID = RecipeID;
	params.currentMP = currentMP;
	params.MaxMP = MaxMP;
	params.MakingResult = MakingResult;
	params.Adena = Adena;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyManufactureWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void URecipeBuyManufactureWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyManufactureWnd.Clear");

	URecipeBuyManufactureWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyManufactureWnd.CloseWindow
// (Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URecipeBuyManufactureWnd::STATIC_CloseWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyManufactureWnd.CloseWindow");

	URecipeBuyManufactureWnd_CloseWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyManufactureWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void URecipeBuyManufactureWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyManufactureWnd.OnClickButton");

	URecipeBuyManufactureWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyManufactureWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void URecipeBuyManufactureWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyManufactureWnd.OnEvent");

	URecipeBuyManufactureWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyManufactureWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void URecipeBuyManufactureWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyManufactureWnd.OnLoad");

	URecipeBuyManufactureWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBuyManufactureWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void URecipeBuyManufactureWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBuyManufactureWnd.OnRegisterEvent");

	URecipeBuyManufactureWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeManufactureWnd.HandleInventoryItem
// (Final, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void URecipeManufactureWnd::STATIC_HandleInventoryItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeManufactureWnd.HandleInventoryItem");

	URecipeManufactureWnd_HandleInventoryItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeManufactureWnd.SetMPBar
// (Final, Defined, Iterator, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            currentMP                      (Parm)

void URecipeManufactureWnd::STATIC_SetMPBar(int currentMP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeManufactureWnd.SetMPBar");

	URecipeManufactureWnd_SetMPBar_Params params;
	params.currentMP = currentMP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeManufactureWnd.ReceiveRecipeItemMakeInfo
// (Final, Defined, Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            RecipeID                       (Parm)
// int                            currentMP                      (Parm)
// int                            MaxMP                          (Parm)
// int                            MakingResult                   (Parm)
// int                            type                           (Parm)

void URecipeManufactureWnd::STATIC_ReceiveRecipeItemMakeInfo(int RecipeID, int currentMP, int MaxMP, int MakingResult, int type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeManufactureWnd.ReceiveRecipeItemMakeInfo");

	URecipeManufactureWnd_ReceiveRecipeItemMakeInfo_Params params;
	params.RecipeID = RecipeID;
	params.currentMP = currentMP;
	params.MaxMP = MaxMP;
	params.MakingResult = MakingResult;
	params.type = type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeManufactureWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void URecipeManufactureWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeManufactureWnd.Clear");

	URecipeManufactureWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeManufactureWnd.CloseWindow
// (Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URecipeManufactureWnd::STATIC_CloseWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeManufactureWnd.CloseWindow");

	URecipeManufactureWnd_CloseWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeManufactureWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void URecipeManufactureWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeManufactureWnd.OnClickButton");

	URecipeManufactureWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeManufactureWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void URecipeManufactureWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeManufactureWnd.OnEvent");

	URecipeManufactureWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeManufactureWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void URecipeManufactureWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeManufactureWnd.OnLoad");

	URecipeManufactureWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeManufactureWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void URecipeManufactureWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeManufactureWnd.OnRegisterEvent");

	URecipeManufactureWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.FindArrIdxByID
// (PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UFlightTeleportWnd::STATIC_FindArrIdxByID(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.FindArrIdxByID");

	UFlightTeleportWnd_FindArrIdxByID_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.FlightTeleportWnd.SetLoc
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)

void UFlightTeleportWnd::STATIC_SetLoc(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.SetLoc");

	UFlightTeleportWnd_SetLoc_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.UnSelectLoc
// (Final, Latent, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)

void UFlightTeleportWnd::STATIC_UnSelectLoc(int Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.UnSelectLoc");

	UFlightTeleportWnd_UnSelectLoc_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.SelectLoc
// (Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// bool                           isUpdate                       (Parm)

void UFlightTeleportWnd::STATIC_SelectLoc(int Id, bool isUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.SelectLoc");

	UFlightTeleportWnd_SelectLoc_Params params;
	params.Id = Id;
	params.isUpdate = isUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.SetMeCenter
// (Iterator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UFlightTeleportWnd::STATIC_SetMeCenter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.SetMeCenter");

	UFlightTeleportWnd_SetMeCenter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.OnBtnGo
// (Final, Iterator, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UFlightTeleportWnd::STATIC_OnBtnGo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.OnBtnGo");

	UFlightTeleportWnd_OnBtnGo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.OnBtnMyPos
// (Final, Defined, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UFlightTeleportWnd::STATIC_OnBtnMyPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.OnBtnMyPos");

	UFlightTeleportWnd_OnBtnMyPos_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UFlightTeleportWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.OnClickButton");

	UFlightTeleportWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.OnMinimapRegionInfoBtnClick
// (Final, Defined, Iterator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightTeleportWnd::STATIC_OnMinimapRegionInfoBtnClick(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.OnMinimapRegionInfoBtnClick");

	UFlightTeleportWnd_OnMinimapRegionInfoBtnClick_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.OnAirShipTeleportList
// (Final, Iterator, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightTeleportWnd::STATIC_OnAirShipTeleportList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.OnAirShipTeleportList");

	UFlightTeleportWnd_OnAirShipTeleportList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.OnAirShipTeleportListStart
// (Final, Defined, Iterator, Latent, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightTeleportWnd::STATIC_OnAirShipTeleportListStart(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.OnAirShipTeleportListStart");

	UFlightTeleportWnd_OnAirShipTeleportListStart_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightTeleportWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.OnEvent");

	UFlightTeleportWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UFlightTeleportWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.Clear");

	UFlightTeleportWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UFlightTeleportWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.InitializeCOD");

	UFlightTeleportWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UFlightTeleportWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.Initialize");

	UFlightTeleportWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UFlightTeleportWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.OnLoad");

	UFlightTeleportWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UFlightTeleportWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.OnRegisterEvent");

	UFlightTeleportWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightTeleportWnd.FindSystemStrByID
// (Defined, Iterator, Latent, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Id                             (Parm)
// int                            AirportID                      (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UFlightTeleportWnd::STATIC_FindSystemStrByID(int Id, int AirportID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightTeleportWnd.FindSystemStrByID");

	UFlightTeleportWnd_FindSystemStrByID_Params params;
	params.Id = Id;
	params.AirportID = AirportID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ScenePlayerWnd.OnbtnPlayClick
// (PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_OnbtnPlayClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnbtnPlayClick");

	UScenePlayerWnd_OnbtnPlayClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.OnbtnSaveClick
// (Final, Defined, Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_OnbtnSaveClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnbtnSaveClick");

	UScenePlayerWnd_OnbtnSaveClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.OnbtnLoadClick
// (Final, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_OnbtnLoadClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnbtnLoadClick");

	UScenePlayerWnd_OnbtnLoadClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.OnbtnNewClick
// (Defined, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_OnbtnNewClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnbtnNewClick");

	UScenePlayerWnd_OnbtnNewClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.LoadFromFile
// (Final, Defined, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Filename                       (Parm, NeedCtorLink)

void UScenePlayerWnd::STATIC_LoadFromFile(const struct FString& Filename)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.LoadFromFile");

	UScenePlayerWnd_LoadFromFile_Params params;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.SaveToFile
// (Iterator, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Filename                       (Parm, NeedCtorLink)

void UScenePlayerWnd::STATIC_SaveToFile(const struct FString& Filename)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.SaveToFile");

	UScenePlayerWnd_SaveToFile_Params params;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.OnPropertyControllerResize
// (Iterator, Latent, Operator, Static, Const)
// Parameters:
// int                            a_Height                       (Parm)

void UScenePlayerWnd::STATIC_OnPropertyControllerResize(int a_Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnPropertyControllerResize");

	UScenePlayerWnd_OnPropertyControllerResize_Params params;
	params.a_Height = a_Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.OnCompleteEditBox
// (Final, Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UScenePlayerWnd::STATIC_OnCompleteEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnCompleteEditBox");

	UScenePlayerWnd_OnCompleteEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.OnDBClickListBoxItem
// (Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UScenePlayerWnd::STATIC_OnDBClickListBoxItem(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnDBClickListBoxItem");

	UScenePlayerWnd_OnDBClickListBoxItem_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.GetParentDirectory
// (Defined, Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Path                           (Parm, NeedCtorLink)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UScenePlayerWnd::STATIC_GetParentDirectory(const struct FString& Path)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.GetParentDirectory");

	UScenePlayerWnd_GetParentDirectory_Params params;
	params.Path = Path;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ScenePlayerWnd.Update
// (Final, Defined, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_Update()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.Update");

	UScenePlayerWnd_Update_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.UpdateFileList
// (Final, Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_UpdateFileList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.UpdateFileList");

	UScenePlayerWnd_UpdateFileList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.UpdateDirectory
// (Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_UpdateDirectory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.UpdateDirectory");

	UScenePlayerWnd_UpdateDirectory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.SetProperty
// (Defined, Iterator, Singular, Net, Exec, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_hWnd                         (Parm)

void UScenePlayerWnd::STATIC_SetProperty(class UWindowHandle* a_hWnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.SetProperty");

	UScenePlayerWnd_SetProperty_Params params;
	params.a_hWnd = a_hWnd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.DeleteCurrentScenePlayer
// (Final, Defined, Latent, Simulated, Operator, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_DeleteCurrentScenePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.DeleteCurrentScenePlayer");

	UScenePlayerWnd_DeleteCurrentScenePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.InitControlItem
// (Defined, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_InitControlItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.InitControlItem");

	UScenePlayerWnd_InitControlItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UScenePlayerWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnEvent");

	UScenePlayerWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UScenePlayerWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnClickButton");

	UScenePlayerWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.Load");

	UScenePlayerWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UScenePlayerWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.InitializeCOD");

	UScenePlayerWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UScenePlayerWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.Initialize");

	UScenePlayerWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UScenePlayerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnLoad");

	UScenePlayerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ScenePlayerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UScenePlayerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ScenePlayerWnd.OnRegisterEvent");

	UScenePlayerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.GetClanTypeFromIndex
// (Final, Defined, Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int USkillTrainClanTreeWnd::STATIC_GetClanTypeFromIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.GetClanTypeFromIndex");

	USkillTrainClanTreeWnd_GetClanTypeFromIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.SkillTrainClanTreeWnd.ShowNeedItems
// (Defined, Iterator, PreOperator, Operator, Static, HasOptionalParms, Const)

void USkillTrainClanTreeWnd::STATIC_ShowNeedItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.ShowNeedItems");

	USkillTrainClanTreeWnd_ShowNeedItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USkillTrainClanTreeWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.OnShow");

	USkillTrainClanTreeWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.AddSkillTrainInfoExtend
// (Final, Defined, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strIconName                    (Parm, NeedCtorLink)
// struct FString                 strName                        (Parm, NeedCtorLink)
// struct FINT64                  iNumOfItem                     (Parm)

void USkillTrainClanTreeWnd::STATIC_AddSkillTrainInfoExtend(const struct FString& strIconName, const struct FString& strName, const struct FINT64& iNumOfItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.AddSkillTrainInfoExtend");

	USkillTrainClanTreeWnd_AddSkillTrainInfoExtend_Params params;
	params.strIconName = strIconName;
	params.strName = strName;
	params.iNumOfItem = iNumOfItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.AddSkillTrainInfo
// (Defined, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strIconName                    (Parm, NeedCtorLink)
// struct FString                 strName                        (Parm, NeedCtorLink)
// int                            iID                            (Parm)
// int                            iLevel                         (Parm)
// struct FString                 strOperateType                 (Parm, NeedCtorLink)
// int                            iMPConsume                     (Parm)
// int                            iCastRange                     (Parm)
// struct FString                 strDescription                 (Parm, NeedCtorLink)
// int                            iSPConsume                     (Parm)
// struct FINT64                  iEXPConsume                    (Parm)
// struct FString                 strEnchantName                 (Parm, NeedCtorLink)
// struct FString                 strEnchantDesc                 (Parm, NeedCtorLink)
// int                            iPercent                       (Parm)

void USkillTrainClanTreeWnd::STATIC_AddSkillTrainInfo(const struct FString& strIconName, const struct FString& strName, int iID, int iLevel, const struct FString& strOperateType, int iMPConsume, int iCastRange, const struct FString& strDescription, int iSPConsume, const struct FINT64& iEXPConsume, const struct FString& strEnchantName, const struct FString& strEnchantDesc, int iPercent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.AddSkillTrainInfo");

	USkillTrainClanTreeWnd_AddSkillTrainInfo_Params params;
	params.strIconName = strIconName;
	params.strName = strName;
	params.iID = iID;
	params.iLevel = iLevel;
	params.strOperateType = strOperateType;
	params.iMPConsume = iMPConsume;
	params.iCastRange = iCastRange;
	params.strDescription = strDescription;
	params.iSPConsume = iSPConsume;
	params.iEXPConsume = iEXPConsume;
	params.strEnchantName = strEnchantName;
	params.strEnchantDesc = strEnchantDesc;
	params.iPercent = iPercent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.ShowSkillTrainClanTreeWnd
// (Final, Defined, Iterator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USkillTrainClanTreeWnd::STATIC_ShowSkillTrainClanTreeWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.ShowSkillTrainClanTreeWnd");

	USkillTrainClanTreeWnd_ShowSkillTrainClanTreeWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.EnableProperClanSubWnd
// (Final, Latent, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            iID                            (Parm)
// int                            iLevel                         (Parm)

void USkillTrainClanTreeWnd::STATIC_EnableProperClanSubWnd(int iID, int iLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.EnableProperClanSubWnd");

	USkillTrainClanTreeWnd_EnableProperClanSubWnd_Params params;
	params.iID = iID;
	params.iLevel = iLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USkillTrainClanTreeWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.OnEvent");

	USkillTrainClanTreeWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.OnbtnLearnClick
// (Defined, Latent, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USkillTrainClanTreeWnd::STATIC_OnbtnLearnClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.OnbtnLearnClick");

	USkillTrainClanTreeWnd_OnbtnLearnClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void USkillTrainClanTreeWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.OnClickButton");

	USkillTrainClanTreeWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void USkillTrainClanTreeWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.Load");

	USkillTrainClanTreeWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void USkillTrainClanTreeWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.InitHandleCOD");

	USkillTrainClanTreeWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void USkillTrainClanTreeWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.InitHandle");

	USkillTrainClanTreeWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.DisableAllClanTreeWnd
// (Final, Defined, Latent, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USkillTrainClanTreeWnd::STATIC_DisableAllClanTreeWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.DisableAllClanTreeWnd");

	USkillTrainClanTreeWnd_DisableAllClanTreeWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void USkillTrainClanTreeWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.Initialize");

	USkillTrainClanTreeWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USkillTrainClanTreeWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.OnLoad");

	USkillTrainClanTreeWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainClanTreeWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USkillTrainClanTreeWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainClanTreeWnd.OnRegisterEvent");

	USkillTrainClanTreeWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainInfoWnd.ShowNeedItems
// (Defined, Iterator, PreOperator, Operator, Static, HasOptionalParms, Const)

void USkillTrainInfoWnd::STATIC_ShowNeedItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainInfoWnd.ShowNeedItems");

	USkillTrainInfoWnd_ShowNeedItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainInfoWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USkillTrainInfoWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainInfoWnd.OnShow");

	USkillTrainInfoWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainInfoWnd.AddSkillTrainInfoExtend
// (Final, Defined, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strIconName                    (Parm, NeedCtorLink)
// struct FString                 strName                        (Parm, NeedCtorLink)
// struct FINT64                  iNumOfItem                     (Parm)

void USkillTrainInfoWnd::STATIC_AddSkillTrainInfoExtend(const struct FString& strIconName, const struct FString& strName, const struct FINT64& iNumOfItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainInfoWnd.AddSkillTrainInfoExtend");

	USkillTrainInfoWnd_AddSkillTrainInfoExtend_Params params;
	params.strIconName = strIconName;
	params.strName = strName;
	params.iNumOfItem = iNumOfItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainInfoWnd.AddSkillTrainInfo
// (Defined, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strIconName                    (Parm, NeedCtorLink)
// struct FString                 strName                        (Parm, NeedCtorLink)
// int                            iID                            (Parm)
// int                            iLevel                         (Parm)
// struct FString                 strOperateType                 (Parm, NeedCtorLink)
// int                            iMPConsume                     (Parm)
// int                            iCastRange                     (Parm)
// struct FString                 strDescription                 (Parm, NeedCtorLink)
// int                            iSPConsume                     (Parm)
// struct FINT64                  iEXPConsume                    (Parm)
// struct FString                 strEnchantName                 (Parm, NeedCtorLink)
// struct FString                 strEnchantDesc                 (Parm, NeedCtorLink)
// int                            iPercent                       (Parm)

void USkillTrainInfoWnd::STATIC_AddSkillTrainInfo(const struct FString& strIconName, const struct FString& strName, int iID, int iLevel, const struct FString& strOperateType, int iMPConsume, int iCastRange, const struct FString& strDescription, int iSPConsume, const struct FINT64& iEXPConsume, const struct FString& strEnchantName, const struct FString& strEnchantDesc, int iPercent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainInfoWnd.AddSkillTrainInfo");

	USkillTrainInfoWnd_AddSkillTrainInfo_Params params;
	params.strIconName = strIconName;
	params.strName = strName;
	params.iID = iID;
	params.iLevel = iLevel;
	params.strOperateType = strOperateType;
	params.iMPConsume = iMPConsume;
	params.iCastRange = iCastRange;
	params.strDescription = strDescription;
	params.iSPConsume = iSPConsume;
	params.iEXPConsume = iEXPConsume;
	params.strEnchantName = strEnchantName;
	params.strEnchantDesc = strEnchantDesc;
	params.iPercent = iPercent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainInfoWnd.ShowSkillTrainInfoWnd
// (Iterator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USkillTrainInfoWnd::STATIC_ShowSkillTrainInfoWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainInfoWnd.ShowSkillTrainInfoWnd");

	USkillTrainInfoWnd_ShowSkillTrainInfoWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainInfoWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USkillTrainInfoWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainInfoWnd.OnEvent");

	USkillTrainInfoWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainInfoWnd.OnLearn
// (Final, Iterator, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void USkillTrainInfoWnd::STATIC_OnLearn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainInfoWnd.OnLearn");

	USkillTrainInfoWnd_OnLearn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainInfoWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strBtnID                       (Parm, NeedCtorLink)

void USkillTrainInfoWnd::STATIC_OnClickButton(const struct FString& strBtnID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainInfoWnd.OnClickButton");

	USkillTrainInfoWnd_OnClickButton_Params params;
	params.strBtnID = strBtnID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainInfoWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USkillTrainInfoWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainInfoWnd.OnLoad");

	USkillTrainInfoWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SkillTrainInfoWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USkillTrainInfoWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SkillTrainInfoWnd.OnRegisterEvent");

	USkillTrainInfoWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.ValidateSystemMsg
// (Defined, Latent, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// struct FString                 StringTxt1                     (Parm, NeedCtorLink)
// struct FString                 StringTxt2                     (Parm, NeedCtorLink)

void UOnScreenMessageWnd::STATIC_ValidateSystemMsg(int Index, const struct FString& StringTxt1, const struct FString& StringTxt2)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.ValidateSystemMsg");

	UOnScreenMessageWnd_ValidateSystemMsg_Params params;
	params.Index = Index;
	params.StringTxt1 = StringTxt1;
	params.StringTxt2 = StringTxt2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UOnScreenMessageWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.OnEvent");

	UOnScreenMessageWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.FadeOut
// (Defined, Iterator, PreOperator, Singular, Simulated, Exec, Native)
// Parameters:
// struct FString                 WndName                        (Parm, NeedCtorLink)

void UOnScreenMessageWnd::FadeOut(const struct FString& WndName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.FadeOut");

	UOnScreenMessageWnd_FadeOut_Params params;
	params.WndName = WndName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.FadeIn
// (Final, Iterator, Latent, NetReliable, Exec, Event, Operator)
// Parameters:
// struct FString                 WndName                        (Parm, NeedCtorLink)

void UOnScreenMessageWnd::FadeIn(const struct FString& WndName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.FadeIn");

	UOnScreenMessageWnd_FadeIn_Params params;
	params.WndName = WndName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.ShowMsg
// (Defined, Latent, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            WndNum                         (Parm)
// struct FString                 TextValue                      (Parm, NeedCtorLink)
// int                            Duration                       (Parm)
// int                            Animation                      (Parm)
// int                            FontType                       (Parm)
// int                            BackgroundType                 (Parm)
// int                            ColorR                         (Parm)
// int                            ColorG                         (Parm)
// int                            ColorB                         (Parm)

void UOnScreenMessageWnd::STATIC_ShowMsg(int WndNum, const struct FString& TextValue, int Duration, int Animation, int FontType, int BackgroundType, int ColorR, int ColorG, int ColorB)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.ShowMsg");

	UOnScreenMessageWnd_ShowMsg_Params params;
	params.WndNum = WndNum;
	params.TextValue = TextValue;
	params.Duration = Duration;
	params.Animation = Animation;
	params.FontType = FontType;
	params.BackgroundType = BackgroundType;
	params.ColorR = ColorR;
	params.ColorG = ColorG;
	params.ColorB = ColorB;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.ResetAllMessage
// (Final, Iterator, Latent, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UOnScreenMessageWnd::STATIC_ResetAllMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.ResetAllMessage");

	UOnScreenMessageWnd_ResetAllMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UOnScreenMessageWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.OnHide");

	UOnScreenMessageWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UOnScreenMessageWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.OnTimer");

	UOnScreenMessageWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.OnTick
// (Net, Operator, Static, Const)

void UOnScreenMessageWnd::STATIC_OnTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.OnTick");

	UOnScreenMessageWnd_OnTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UOnScreenMessageWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.OnLoad");

	UOnScreenMessageWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OnScreenMessageWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UOnScreenMessageWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OnScreenMessageWnd.OnRegisterEvent");

	UOnScreenMessageWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.HandleChangeValue
// (PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropInfoSettingWnd::STATIC_HandleChangeValue(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.HandleChangeValue");

	UManorCropInfoSettingWnd_HandleChangeValue_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.OnChangeBtn
// (Final, Defined, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorCropInfoSettingWnd::STATIC_OnChangeBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.OnChangeBtn");

	UManorCropInfoSettingWnd_OnChangeBtn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.CalculateSumOfDefaultPrice
// (Final, Defined, Iterator, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorCropInfoSettingWnd::STATIC_CalculateSumOfDefaultPrice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.CalculateSumOfDefaultPrice");

	UManorCropInfoSettingWnd_CalculateSumOfDefaultPrice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropInfoSettingWnd::STATIC_HandleAddItem(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.HandleAddItem");

	UManorCropInfoSettingWnd_HandleAddItem_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.OnOk
// (Final, Defined, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorCropInfoSettingWnd::STATIC_OnOk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.OnOk");

	UManorCropInfoSettingWnd_OnOk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UManorCropInfoSettingWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.OnClickButton");

	UManorCropInfoSettingWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UManorCropInfoSettingWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.OnDBClickListCtrlRecord");

	UManorCropInfoSettingWnd_OnDBClickListCtrlRecord_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.DeleteAll
// (Iterator, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorCropInfoSettingWnd::STATIC_DeleteAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.DeleteAll");

	UManorCropInfoSettingWnd_DeleteAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.HandleShow
// (Final, Defined, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropInfoSettingWnd::STATIC_HandleShow(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.HandleShow");

	UManorCropInfoSettingWnd_HandleShow_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.HandleSetToday
// (Final, Defined, Iterator, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UManorCropInfoSettingWnd::STATIC_HandleSetToday()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.HandleSetToday");

	UManorCropInfoSettingWnd_HandleSetToday_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.HandleStop
// (Defined, Iterator, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UManorCropInfoSettingWnd::STATIC_HandleStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.HandleStop");

	UManorCropInfoSettingWnd_HandleStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorCropInfoSettingWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.HandleDialogOK");

	UManorCropInfoSettingWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropInfoSettingWnd::STATIC_OnEvent(int Event_ID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.OnEvent");

	UManorCropInfoSettingWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UManorCropInfoSettingWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.OnLoad");

	UManorCropInfoSettingWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoSettingWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UManorCropInfoSettingWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoSettingWnd.OnRegisterEvent");

	UManorCropInfoSettingWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UUnionWnd::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnExitState");

	UUnionWnd_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.UpdatePartyMemberCount
// (Final, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            MasterID                       (Parm)
// int                            MemberCount                    (Parm)

void UUnionWnd::STATIC_UpdatePartyMemberCount(int MasterID, int MemberCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.UpdatePartyMemberCount");

	UUnionWnd_UpdatePartyMemberCount_Params params;
	params.MasterID = MasterID;
	params.MemberCount = MemberCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.UpdateCountInfo
// (Final, Defined, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUnionWnd::STATIC_UpdateCountInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.UpdateCountInfo");

	UUnionWnd_UpdateCountInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.FindMasterID
// (PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            MasterID                       (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UUnionWnd::STATIC_FindMasterID(int MasterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.FindMasterID");

	UUnionWnd_FindMasterID_Params params;
	params.MasterID = MasterID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UnionWnd.UpdateRoutingType
// (Final, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            type                           (Parm)

void UUnionWnd::STATIC_UpdateRoutingType(int type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.UpdateRoutingType");

	UUnionWnd_UpdateRoutingType_Params params;
	params.type = type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.HandleCommandChannelRoutingType
// (Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionWnd::STATIC_HandleCommandChannelRoutingType(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.HandleCommandChannelRoutingType");

	UUnionWnd_HandleCommandChannelRoutingType_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.HandleCommandChannelPartyUpdate
// (Final, Defined, Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionWnd::STATIC_HandleCommandChannelPartyUpdate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.HandleCommandChannelPartyUpdate");

	UUnionWnd_HandleCommandChannelPartyUpdate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.HandleCommandChannelPartyList
// (Final, Defined, Latent, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionWnd::STATIC_HandleCommandChannelPartyList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.HandleCommandChannelPartyList");

	UUnionWnd_HandleCommandChannelPartyList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.HandleCommandChannelInfo
// (Defined, Latent, PreOperator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionWnd::STATIC_HandleCommandChannelInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.HandleCommandChannelInfo");

	UUnionWnd_HandleCommandChannelInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.HandleCommandChannelEnd
// (Defined, Iterator, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnionWnd::STATIC_HandleCommandChannelEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.HandleCommandChannelEnd");

	UUnionWnd_HandleCommandChannelEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.HandleCommandChannelStart
// (Final, Latent, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnionWnd::STATIC_HandleCommandChannelStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.HandleCommandChannelStart");

	UUnionWnd_HandleCommandChannelStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.RequestPartyMember
// (Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bShowWindow                    (Parm)

void UUnionWnd::STATIC_RequestPartyMember(bool bShowWindow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.RequestPartyMember");

	UUnionWnd_RequestPartyMember_Params params;
	params.bShowWindow = bShowWindow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnMemberInfoClick
// (Defined, Iterator, Singular, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnionWnd::STATIC_OnMemberInfoClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnMemberInfoClick");

	UUnionWnd_OnMemberInfoClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnOutClick
// (Defined, Iterator, Latent, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnionWnd::STATIC_OnOutClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnOutClick");

	UUnionWnd_OnOutClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnBanClick
// (Defined, Iterator, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnionWnd::STATIC_OnBanClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnBanClick");

	UUnionWnd_OnBanClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.RequestNewInfo
// (Final, Defined, Latent, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnionWnd::STATIC_RequestNewInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.RequestNewInfo");

	UUnionWnd_RequestNewInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnRefreshClick
// (Defined, PreOperator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnionWnd::STATIC_OnRefreshClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnRefreshClick");

	UUnionWnd_OnRefreshClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUnionWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnClickButton");

	UUnionWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.MemberClear
// (Final, Iterator, Latent, PreOperator, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnionWnd::STATIC_MemberClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.MemberClear");

	UUnionWnd_MemberClear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UUnionWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.Clear");

	UUnionWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUnionWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnDBClickListCtrlRecord");

	UUnionWnd_OnDBClickListCtrlRecord_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnEvent");

	UUnionWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UUnionWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnEnterState");

	UUnionWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UUnionWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnShow");

	UUnionWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UUnionWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnLoad");

	UUnionWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UUnionWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionWnd.OnRegisterEvent");

	UUnionWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.CalculateSumOfDefaultPrice
// (Final, Defined, Iterator, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorSeedInfoSettingWnd::STATIC_CalculateSumOfDefaultPrice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.CalculateSumOfDefaultPrice");

	UManorSeedInfoSettingWnd_CalculateSumOfDefaultPrice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorSeedInfoSettingWnd::STATIC_HandleAddItem(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.HandleAddItem");

	UManorSeedInfoSettingWnd_HandleAddItem_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.OnChangeBtn
// (Final, Defined, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorSeedInfoSettingWnd::STATIC_OnChangeBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.OnChangeBtn");

	UManorSeedInfoSettingWnd_OnChangeBtn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.OnOk
// (Final, Defined, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorSeedInfoSettingWnd::STATIC_OnOk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.OnOk");

	UManorSeedInfoSettingWnd_OnOk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UManorSeedInfoSettingWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.OnClickButton");

	UManorSeedInfoSettingWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UManorSeedInfoSettingWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.OnDBClickListCtrlRecord");

	UManorSeedInfoSettingWnd_OnDBClickListCtrlRecord_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.DeleteAll
// (Iterator, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorSeedInfoSettingWnd::STATIC_DeleteAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.DeleteAll");

	UManorSeedInfoSettingWnd_DeleteAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.HandleChangeValue
// (PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorSeedInfoSettingWnd::STATIC_HandleChangeValue(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.HandleChangeValue");

	UManorSeedInfoSettingWnd_HandleChangeValue_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.HandleShow
// (Final, Defined, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorSeedInfoSettingWnd::STATIC_HandleShow(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.HandleShow");

	UManorSeedInfoSettingWnd_HandleShow_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.HandleSetToday
// (Final, Defined, Iterator, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UManorSeedInfoSettingWnd::STATIC_HandleSetToday()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.HandleSetToday");

	UManorSeedInfoSettingWnd_HandleSetToday_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.HandleStop
// (Defined, Iterator, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UManorSeedInfoSettingWnd::STATIC_HandleStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.HandleStop");

	UManorSeedInfoSettingWnd_HandleStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorSeedInfoSettingWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.HandleDialogOK");

	UManorSeedInfoSettingWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorSeedInfoSettingWnd::STATIC_OnEvent(int Event_ID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.OnEvent");

	UManorSeedInfoSettingWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UManorSeedInfoSettingWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.OnLoad");

	UManorSeedInfoSettingWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoSettingWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UManorSeedInfoSettingWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoSettingWnd.OnRegisterEvent");

	UManorSeedInfoSettingWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.RequestSelectedData
// (Defined, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 WindowName                     (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UManorInfoWnd::STATIC_RequestSelectedData(const struct FString& WindowName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.RequestSelectedData");

	UManorInfoWnd_RequestSelectedData_Params params;
	params.WindowName = WindowName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 sName                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UManorInfoWnd::STATIC_OnComboBoxItemSelected(const struct FString& sName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.OnComboBoxItemSelected");

	UManorInfoWnd_OnComboBoxItemSelected_Params params;
	params.sName = sName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.OnClickInfoTab
// (Final, Defined, Iterator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 TabName                        (Parm, NeedCtorLink)

void UManorInfoWnd::STATIC_OnClickInfoTab(const struct FString& TabName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.OnClickInfoTab");

	UManorInfoWnd_OnClickInfoTab_Params params;
	params.TabName = TabName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UManorInfoWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.OnClickButton");

	UManorInfoWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.HandleDefaultAdd
// (Final, Iterator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorInfoWnd::STATIC_HandleDefaultAdd(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.HandleDefaultAdd");

	UManorInfoWnd_HandleDefaultAdd_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.HandleDefaultInfoShow
// (Defined, Iterator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorInfoWnd::STATIC_HandleDefaultInfoShow(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.HandleDefaultInfoShow");

	UManorInfoWnd_HandleDefaultInfoShow_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.HandleCropAdd
// (Final, Defined, Iterator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorInfoWnd::STATIC_HandleCropAdd(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.HandleCropAdd");

	UManorInfoWnd_HandleCropAdd_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.HandleCropInfoShow
// (Latent, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorInfoWnd::STATIC_HandleCropInfoShow(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.HandleCropInfoShow");

	UManorInfoWnd_HandleCropInfoShow_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.HandleSeedAdd
// (Final, Latent, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorInfoWnd::STATIC_HandleSeedAdd(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.HandleSeedAdd");

	UManorInfoWnd_HandleSeedAdd_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.HandleSeedInfoShow
// (Defined, Latent, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorInfoWnd::STATIC_HandleSeedInfoShow(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.HandleSeedInfoShow");

	UManorInfoWnd_HandleSeedInfoShow_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorInfoWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.OnEvent");

	UManorInfoWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UManorInfoWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.OnLoad");

	UManorInfoWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorInfoWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UManorInfoWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorInfoWnd.OnRegisterEvent");

	UManorInfoWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellWnd.HandleSetCropSell
// (Final, Defined, Latent, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropSellWnd::STATIC_HandleSetCropSell(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellWnd.HandleSetCropSell");

	UManorCropSellWnd_HandleSetCropSell_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropSellWnd::STATIC_HandleAddItem(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellWnd.HandleAddItem");

	UManorCropSellWnd_HandleAddItem_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellWnd.OnChangeBtn
// (Final, Defined, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorCropSellWnd::STATIC_OnChangeBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellWnd.OnChangeBtn");

	UManorCropSellWnd_OnChangeBtn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellWnd.OnSellBtn
// (Iterator, Latent, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UManorCropSellWnd::STATIC_OnSellBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellWnd.OnSellBtn");

	UManorCropSellWnd_OnSellBtn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UManorCropSellWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellWnd.OnClickButton");

	UManorCropSellWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UManorCropSellWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellWnd.OnDBClickListCtrlRecord");

	UManorCropSellWnd_OnDBClickListCtrlRecord_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellWnd.DeleteAll
// (Iterator, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UManorCropSellWnd::STATIC_DeleteAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellWnd.DeleteAll");

	UManorCropSellWnd_DeleteAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropSellWnd::STATIC_OnEvent(int Event_ID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellWnd.OnEvent");

	UManorCropSellWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UManorCropSellWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellWnd.OnLoad");

	UManorCropSellWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UManorCropSellWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellWnd.OnRegisterEvent");

	UManorCropSellWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.HandleDominionWarJoinList
// (Defined, Latent, Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDominionWarInfoWnd::STATIC_HandleDominionWarJoinList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.HandleDominionWarJoinList");

	UDominionWarInfoWnd_HandleDominionWarJoinList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.HandleDominionInfo
// (Final, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDominionWarInfoWnd::STATIC_HandleDominionInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.HandleDominionInfo");

	UDominionWarInfoWnd_HandleDominionInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.HandleDominionInfoCnt
// (Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDominionWarInfoWnd::STATIC_HandleDominionInfoCnt(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.HandleDominionInfoCnt");

	UDominionWarInfoWnd_HandleDominionInfoCnt_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.HandleResultJoinDominionWar
// (Final, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDominionWarInfoWnd::STATIC_HandleResultJoinDominionWar(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.HandleResultJoinDominionWar");

	UDominionWarInfoWnd_HandleResultJoinDominionWar_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.HandleShowDominionWarJoinList
// (Defined, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDominionWarInfoWnd::STATIC_HandleShowDominionWarJoinList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.HandleShowDominionWarJoinList");

	UDominionWarInfoWnd_HandleShowDominionWarJoinList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.HandleShowDominionWarJoisnListEnd
// (Final, Defined, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UDominionWarInfoWnd::STATIC_HandleShowDominionWarJoisnListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.HandleShowDominionWarJoisnListEnd");

	UDominionWarInfoWnd_HandleShowDominionWarJoisnListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.HandleShowDominionWarJoinListEnemyDominionInfo
// (Iterator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDominionWarInfoWnd::STATIC_HandleShowDominionWarJoinListEnemyDominionInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.HandleShowDominionWarJoinListEnemyDominionInfo");

	UDominionWarInfoWnd_HandleShowDominionWarJoinListEnemyDominionInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UDominionWarInfoWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.OnEvent");

	UDominionWarInfoWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.OnbtnAcceptClanClick
// (Final, Iterator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UDominionWarInfoWnd::STATIC_OnbtnAcceptClanClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.OnbtnAcceptClanClick");

	UDominionWarInfoWnd_OnbtnAcceptClanClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.OnbtnClanApplyBtnClick
// (Defined, Iterator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UDominionWarInfoWnd::STATIC_OnbtnClanApplyBtnClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.OnbtnClanApplyBtnClick");

	UDominionWarInfoWnd_OnbtnClanApplyBtnClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.OnbtnApplyMachineryClick
// (Final, Defined, Iterator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UDominionWarInfoWnd::STATIC_OnbtnApplyMachineryClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.OnbtnApplyMachineryClick");

	UDominionWarInfoWnd_OnbtnApplyMachineryClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UDominionWarInfoWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.OnClickButton");

	UDominionWarInfoWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDominionWarInfoWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.Load");

	UDominionWarInfoWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDominionWarInfoWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.InitHandleCOD");

	UDominionWarInfoWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDominionWarInfoWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.InitHandle");

	UDominionWarInfoWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UDominionWarInfoWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.OnRegisterEvent");

	UDominionWarInfoWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UDominionWarInfoWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.OnLoad");

	UDominionWarInfoWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DominionWarInfoWnd.InitClanTexName
// (Final, Defined, Latent, Singular, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UDominionWarInfoWnd::STATIC_InitClanTexName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DominionWarInfoWnd.InitClanTexName");

	UDominionWarInfoWnd_InitClanTexName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.MoveItemBoxes
// (Final, Iterator, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           a_Origin                       (Parm)

void URefineryWnd::STATIC_MoveItemBoxes(bool a_Origin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.MoveItemBoxes");

	URefineryWnd_MoveItemBoxes_Params params;
	params.a_Origin = a_Origin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.PlayResultAnimation
// (Final, Defined, Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            grade                          (Parm)

void URefineryWnd::STATIC_PlayResultAnimation(int grade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.PlayResultAnimation");

	URefineryWnd_PlayResultAnimation_Params params;
	params.grade = grade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.HandleDialogOK");

	URefineryWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnRefineDoneResult
// (Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void URefineryWnd::STATIC_OnRefineDoneResult(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnRefineDoneResult");

	URefineryWnd_OnRefineDoneResult_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnRefineRequest
// (Final, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_OnRefineRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnRefineRequest");

	URefineryWnd_OnRefineRequest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnResultAnimEnd
// (Defined, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_OnResultAnimEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnResultAnimEnd");

	URefineryWnd_OnResultAnimEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnTextureAnimEnd
// (Final, Iterator, Latent, Operator, Static, Const)
// Parameters:
// class UAnimTextureHandle*      a_WindowHandle                 (Parm)

void URefineryWnd::STATIC_OnTextureAnimEnd(class UAnimTextureHandle* a_WindowHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnTextureAnimEnd");

	URefineryWnd_OnTextureAnimEnd_Params params;
	params.a_WindowHandle = a_WindowHandle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.PlayRefineAnimation
// (Final, Defined, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_PlayRefineAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.PlayRefineAnimation");

	URefineryWnd_PlayRefineAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnClickRefineButton
// (Iterator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_OnClickRefineButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnClickRefineButton");

	URefineryWnd_OnClickRefineButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnClickCancelButton
// (Final, Defined, Latent, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_OnClickCancelButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnClickCancelButton");

	URefineryWnd_OnClickCancelButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void URefineryWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnClickButton");

	URefineryWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnGemstoneValidationResult
// (Final, Iterator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void URefineryWnd::STATIC_OnGemstoneValidationResult(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnGemstoneValidationResult");

	URefineryWnd_OnGemstoneValidationResult_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.ValidateGemstoneItem
// (Defined, Iterator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               a_ItemInfo                     (Parm, NeedCtorLink)

void URefineryWnd::STATIC_ValidateGemstoneItem(const struct FItemInfo& a_ItemInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.ValidateGemstoneItem");

	URefineryWnd_ValidateGemstoneItem_Params params;
	params.a_ItemInfo = a_ItemInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnRefinerItemValidationResult
// (Final, Defined, Iterator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void URefineryWnd::STATIC_OnRefinerItemValidationResult(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnRefinerItemValidationResult");

	URefineryWnd_OnRefinerItemValidationResult_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.ValidateSecondItem
// (Latent, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               a_ItemInfo                     (Parm, NeedCtorLink)

void URefineryWnd::STATIC_ValidateSecondItem(const struct FItemInfo& a_ItemInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.ValidateSecondItem");

	URefineryWnd_ValidateSecondItem_Params params;
	params.a_ItemInfo = a_ItemInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnTargetItemValidationResult
// (Iterator, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void URefineryWnd::STATIC_OnTargetItemValidationResult(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnTargetItemValidationResult");

	URefineryWnd_OnTargetItemValidationResult_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.ValidateFirstItem
// (Final, Latent, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               a_ItemInfo                     (Parm, NeedCtorLink)

void URefineryWnd::STATIC_ValidateFirstItem(const struct FItemInfo& a_ItemInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.ValidateFirstItem");

	URefineryWnd_ValidateFirstItem_Params params;
	params.a_ItemInfo = a_ItemInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_WindowID                     (Parm, NeedCtorLink)
// struct FItemInfo               a_ItemInfo                     (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void URefineryWnd::STATIC_OnDropItem(const struct FString& a_WindowID, const struct FItemInfo& a_ItemInfo, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnDropItem");

	URefineryWnd_OnDropItem_Params params;
	params.a_WindowID = a_WindowID;
	params.a_ItemInfo = a_ItemInfo;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.ShowRefineryInterface
// (Defined, Latent, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_ShowRefineryInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.ShowRefineryInterface");

	URefineryWnd_ShowRefineryInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void URefineryWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnEvent");

	URefineryWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnRefineryRefineResult
// (Final, Defined, Latent, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_OnRefineryRefineResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnRefineryRefineResult");

	URefineryWnd_OnRefineryRefineResult_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnRefineryConfirmGemStoneResult
// (Iterator, Latent, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_OnRefineryConfirmGemStoneResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnRefineryConfirmGemStoneResult");

	URefineryWnd_OnRefineryConfirmGemStoneResult_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnRefineryConfirmRefinerItemResult
// (Final, Iterator, Latent, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_OnRefineryConfirmRefinerItemResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnRefineryConfirmRefinerItemResult");

	URefineryWnd_OnRefineryConfirmRefinerItemResult_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnRefineryConfirmTargetItemResult
// (Defined, Iterator, Latent, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_OnRefineryConfirmTargetItemResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnRefineryConfirmTargetItemResult");

	URefineryWnd_OnRefineryConfirmTargetItemResult_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.ResetReady
// (NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_ResetReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.ResetReady");

	URefineryWnd_ResetReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.ResetBools
// (Defined, Latent, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_ResetBools()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.ResetBools");

	URefineryWnd_ResetBools_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void URefineryWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnShow");

	URefineryWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.InitHandleCOD");

	URefineryWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void URefineryWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.InitHandle");

	URefineryWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void URefineryWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnLoad");

	URefineryWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RefineryWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void URefineryWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RefineryWnd.OnRegisterEvent");

	URefineryWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_Worksheet.SetDefaultValue
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// class UWindowHandle*           NewWnd                         (Parm)
// TEnumAsByte<EXMLControlType>   type                           (Parm)
// struct FString                 strTarget                      (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UUIEditor_Worksheet::STATIC_SetDefaultValue(class UWindowHandle* NewWnd, TEnumAsByte<EXMLControlType> type, const struct FString& strTarget, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_Worksheet.SetDefaultValue");

	UUIEditor_Worksheet_SetDefaultValue_Params params;
	params.NewWnd = NewWnd;
	params.type = type;
	params.strTarget = strTarget;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_Worksheet.OnDropItemWithHandle
// (Iterator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           hTarget                        (Parm)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UUIEditor_Worksheet::STATIC_OnDropItemWithHandle(class UWindowHandle* hTarget, const struct FItemInfo& Info, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_Worksheet.OnDropItemWithHandle");

	UUIEditor_Worksheet_OnDropItemWithHandle_Params params;
	params.hTarget = hTarget;
	params.Info = Info;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_Worksheet.OnDropWnd
// (Final, Defined, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           hTarget                        (Parm)
// class UWindowHandle*           hDropWnd                       (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UUIEditor_Worksheet::STATIC_OnDropWnd(class UWindowHandle* hTarget, class UWindowHandle* hDropWnd, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_Worksheet.OnDropWnd");

	UUIEditor_Worksheet_OnDropWnd_Params params;
	params.hTarget = hTarget;
	params.hDropWnd = hDropWnd;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_Worksheet.DeleteWindow
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UUIEditor_Worksheet::STATIC_DeleteWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_Worksheet.DeleteWindow");

	UUIEditor_Worksheet_DeleteWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_Worksheet.ClearAllTracker
// (Final, Defined, Latent, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UUIEditor_Worksheet::STATIC_ClearAllTracker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_Worksheet.ClearAllTracker");

	UUIEditor_Worksheet_ClearAllTracker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_Worksheet.OnKeyDown
// (Iterator, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// TEnumAsByte<EInputKey>         Key                            (Parm)

void UUIEditor_Worksheet::STATIC_OnKeyDown(class UWindowHandle* a_WindowHandle, TEnumAsByte<EInputKey> Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_Worksheet.OnKeyDown");

	UUIEditor_Worksheet_OnKeyDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.SetBuffButtonTooltip
// (Final, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetStatusWnd::STATIC_SetBuffButtonTooltip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.SetBuffButtonTooltip");

	UPetStatusWnd_SetBuffButtonTooltip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.OnBuffButton
// (Iterator, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetStatusWnd::STATIC_OnBuffButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.OnBuffButton");

	UPetStatusWnd_OnBuffButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UPetStatusWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.OnClickButton");

	UPetStatusWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.OnLButtonDown
// (Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UPetStatusWnd::STATIC_OnLButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.OnLButtonDown");

	UPetStatusWnd_OnLButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.UpdateBuff
// (Final, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetStatusWnd::STATIC_UpdateBuff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.UpdateBuff");

	UPetStatusWnd_UpdateBuff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.HandleShowBuffIcon
// (Final, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPetStatusWnd::STATIC_HandleShowBuffIcon(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.HandleShowBuffIcon");

	UPetStatusWnd_HandleShowBuffIcon_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.HandlePetStatusSpelledList
// (Defined, Latent, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPetStatusWnd::STATIC_HandlePetStatusSpelledList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.HandlePetStatusSpelledList");

	UPetStatusWnd_HandlePetStatusSpelledList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.HandlePetStatusShow
// (Final, Defined, Latent, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UPetStatusWnd::STATIC_HandlePetStatusShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.HandlePetStatusShow");

	UPetStatusWnd_HandlePetStatusShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.HandlePetInfoUpdate
// (Final, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetStatusWnd::STATIC_HandlePetInfoUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.HandlePetInfoUpdate");

	UPetStatusWnd_HandlePetInfoUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.HandlePetStatusClose
// (Iterator, Latent, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UPetStatusWnd::STATIC_HandlePetStatusClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.HandlePetStatusClose");

	UPetStatusWnd_HandlePetStatusClose_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UPetStatusWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.Clear");

	UPetStatusWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPetStatusWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.OnEvent");

	UPetStatusWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UPetStatusWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.OnEnterState");

	UPetStatusWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPetStatusWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.OnHide");

	UPetStatusWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPetStatusWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.OnShow");

	UPetStatusWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetStatusWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.Load");

	UPetStatusWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetStatusWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.InitializeCOD");

	UPetStatusWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UPetStatusWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.Initialize");

	UPetStatusWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPetStatusWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.OnLoad");

	UPetStatusWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetStatusWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPetStatusWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetStatusWnd.OnRegisterEvent");

	UPetStatusWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.InitFATIGUEBar
// (Final, Defined, Iterator, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void USummonedStatusWnd::STATIC_InitFATIGUEBar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.InitFATIGUEBar");

	USummonedStatusWnd_InitFATIGUEBar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.SetBuffButtonTooltip
// (Final, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedStatusWnd::STATIC_SetBuffButtonTooltip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.SetBuffButtonTooltip");

	USummonedStatusWnd_SetBuffButtonTooltip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.OnBuffButton
// (Iterator, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedStatusWnd::STATIC_OnBuffButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.OnBuffButton");

	USummonedStatusWnd_OnBuffButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void USummonedStatusWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.OnClickButton");

	USummonedStatusWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.OnLButtonDown
// (Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void USummonedStatusWnd::STATIC_OnLButtonDown(class UWindowHandle* a_WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.OnLButtonDown");

	USummonedStatusWnd_OnLButtonDown_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.UpdateBuff
// (Final, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedStatusWnd::STATIC_UpdateBuff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.UpdateBuff");

	USummonedStatusWnd_UpdateBuff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.HandleShowBuffIcon
// (Final, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void USummonedStatusWnd::STATIC_HandleShowBuffIcon(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.HandleShowBuffIcon");

	USummonedStatusWnd_HandleShowBuffIcon_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.HandleSummonedStatusSpelledList
// (Latent, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void USummonedStatusWnd::STATIC_HandleSummonedStatusSpelledList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.HandleSummonedStatusSpelledList");

	USummonedStatusWnd_HandleSummonedStatusSpelledList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.HandleSummonedStatusShow
// (Final, Latent, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void USummonedStatusWnd::STATIC_HandleSummonedStatusShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.HandleSummonedStatusShow");

	USummonedStatusWnd_HandleSummonedStatusShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.HandlePetInfoUpdate
// (Final, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedStatusWnd::STATIC_HandlePetInfoUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.HandlePetInfoUpdate");

	USummonedStatusWnd_HandlePetInfoUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.HandlePetSummonedStatusClose
// (Final, Iterator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedStatusWnd::STATIC_HandlePetSummonedStatusClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.HandlePetSummonedStatusClose");

	USummonedStatusWnd_HandlePetSummonedStatusClose_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.HandleSummonedStatusRemainTime
// (Defined, Latent, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void USummonedStatusWnd::STATIC_HandleSummonedStatusRemainTime(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.HandleSummonedStatusRemainTime");

	USummonedStatusWnd_HandleSummonedStatusRemainTime_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.ClearBuff
// (Singular, Simulated, Operator, Static, HasOptionalParms, Const)

void USummonedStatusWnd::STATIC_ClearBuff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.ClearBuff");

	USummonedStatusWnd_ClearBuff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void USummonedStatusWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.Clear");

	USummonedStatusWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USummonedStatusWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.OnEvent");

	USummonedStatusWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void USummonedStatusWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.OnEnterState");

	USummonedStatusWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USummonedStatusWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.OnHide");

	USummonedStatusWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USummonedStatusWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.OnShow");

	USummonedStatusWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedStatusWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.Load");

	USummonedStatusWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void USummonedStatusWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.InitializeCOD");

	USummonedStatusWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void USummonedStatusWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.Initialize");

	USummonedStatusWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USummonedStatusWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.OnLoad");

	USummonedStatusWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SummonedStatusWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USummonedStatusWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SummonedStatusWnd.OnRegisterEvent");

	USummonedStatusWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.HandleHide
// (Defined, Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockCounter::STATIC_HandleHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.HandleHide");

	UBlockCounter_HandleHide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.ResetCurrentStat
// (Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockCounter::STATIC_ResetCurrentStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.ResetCurrentStat");

	UBlockCounter_ResetCurrentStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.TimerReset
// (Final, Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            RemainTime                     (Parm)

void UBlockCounter::STATIC_TimerReset(int RemainTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.TimerReset");

	UBlockCounter_TimerReset_Params params;
	params.RemainTime = RemainTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.UpdateTimerCount
// (Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockCounter::STATIC_UpdateTimerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.UpdateTimerCount");

	UBlockCounter_UpdateTimerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.DrawTimerCount
// (Final, Defined, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockCounter::STATIC_DrawTimerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.DrawTimerCount");

	UBlockCounter_DrawTimerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UBlockCounter::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.OnTimer");

	UBlockCounter_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UBlockCounter::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.OnClickButton");

	UBlockCounter_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.HandleBlockStatePlayer
// (Iterator, Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockCounter::STATIC_HandleBlockStatePlayer(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.HandleBlockStatePlayer");

	UBlockCounter_HandleBlockStatePlayer_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.HandleBlockStateTeam
// (Defined, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockCounter::STATIC_HandleBlockStateTeam(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.HandleBlockStateTeam");

	UBlockCounter_HandleBlockStateTeam_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBlockCounter::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.OnShow");

	UBlockCounter_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBlockCounter::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.OnHide");

	UBlockCounter_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UBlockCounter::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.OnEvent");

	UBlockCounter_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockCounter::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.InitializeCOD");

	UBlockCounter_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UBlockCounter::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.Initialize");

	UBlockCounter_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.OnLoad
// (Final, Net, Operator, Static, Const)

void UBlockCounter::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.OnLoad");

	UBlockCounter_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCounter.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBlockCounter::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCounter.OnRegisterEvent");

	UBlockCounter_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBookWnd.DeleteItem
// (Defined, Latent, Net, Exec, Native, Event, Static, Const)
// Parameters:
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)

void URecipeBookWnd::STATIC_DeleteItem(const struct FItemInfo& infItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBookWnd.DeleteItem");

	URecipeBookWnd_DeleteItem_Params params;
	params.infItem = infItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBookWnd.SetItemCount
// (Iterator, Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            MaxCount                       (Parm)

void URecipeBookWnd::STATIC_SetItemCount(int MaxCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBookWnd.SetItemCount");

	URecipeBookWnd_SetItemCount_Params params;
	params.MaxCount = MaxCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBookWnd.AddRecipeBookItem
// (Defined, Iterator, Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            RecipeID                       (Parm)

void URecipeBookWnd::STATIC_AddRecipeBookItem(int RecipeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBookWnd.AddRecipeBookItem");

	URecipeBookWnd_AddRecipeBookItem_Params params;
	params.RecipeID = RecipeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBookWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void URecipeBookWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBookWnd.Clear");

	URecipeBookWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBookWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void URecipeBookWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBookWnd.OnClickButton");

	URecipeBookWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBookWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void URecipeBookWnd::STATIC_OnDropItem(const struct FString& strID, const struct FItemInfo& infItem, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBookWnd.OnDropItem");

	URecipeBookWnd_OnDropItem_Params params;
	params.strID = strID;
	params.infItem = infItem;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBookWnd.OnDBClickItem
// (Final, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void URecipeBookWnd::STATIC_OnDBClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBookWnd.OnDBClickItem");

	URecipeBookWnd_OnDBClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBookWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void URecipeBookWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBookWnd.OnEvent");

	URecipeBookWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBookWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void URecipeBookWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBookWnd.OnLoad");

	URecipeBookWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeBookWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void URecipeBookWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeBookWnd.OnRegisterEvent");

	URecipeBookWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.ResetUI
// (Final, Defined, Iterator, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockCurWnd::STATIC_ResetUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.ResetUI");

	UBlockCurWnd_ResetUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UBlockCurWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.OnClickButton");

	UBlockCurWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.HandleBlockListRemove
// (Latent, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockCurWnd::STATIC_HandleBlockListRemove(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.HandleBlockListRemove");

	UBlockCurWnd_HandleBlockListRemove_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.HandleBlockListAdd
// (Final, Latent, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockCurWnd::STATIC_HandleBlockListAdd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.HandleBlockListAdd");

	UBlockCurWnd_HandleBlockListAdd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.HandleBlockStateResult
// (Final, Defined, Iterator, Latent, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockCurWnd::STATIC_HandleBlockStateResult(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.HandleBlockStateResult");

	UBlockCurWnd_HandleBlockStateResult_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.HandleBlockStatePlayer
// (Iterator, Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockCurWnd::STATIC_HandleBlockStatePlayer(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.HandleBlockStatePlayer");

	UBlockCurWnd_HandleBlockStatePlayer_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.HandleBlockStateTeam
// (Defined, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockCurWnd::STATIC_HandleBlockStateTeam(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.HandleBlockStateTeam");

	UBlockCurWnd_HandleBlockStateTeam_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.HandleBlockListStart
// (Defined, Latent, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockCurWnd::STATIC_HandleBlockListStart(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.HandleBlockListStart");

	UBlockCurWnd_HandleBlockListStart_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UBlockCurWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.OnEvent");

	UBlockCurWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockCurWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.InitializeCOD");

	UBlockCurWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UBlockCurWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.Initialize");

	UBlockCurWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBlockCurWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.OnShow");

	UBlockCurWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBlockCurWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.OnLoad");

	UBlockCurWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBlockCurWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurWnd.OnRegisterEvent");

	UBlockCurWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.HandleMoveDownItem
// (Defined, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URecipeShopWnd::STATIC_HandleMoveDownItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.HandleMoveDownItem");

	URecipeShopWnd_HandleMoveDownItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.HandleMoveUpItem
// (Final, Defined, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URecipeShopWnd::STATIC_HandleMoveUpItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.HandleMoveUpItem");

	URecipeShopWnd_HandleMoveUpItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.StartRecipeShop
// (Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URecipeShopWnd::STATIC_StartRecipeShop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.StartRecipeShop");

	URecipeShopWnd_StartRecipeShop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.UpdateShopItemCount
// (Final, Defined, Iterator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Count                          (Parm)

void URecipeShopWnd::STATIC_UpdateShopItemCount(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.UpdateShopItemCount");

	URecipeShopWnd_UpdateShopItemCount_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.DeleteShopItem
// (Defined, Iterator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               DeleteItem                     (Parm, NeedCtorLink)

void URecipeShopWnd::STATIC_DeleteShopItem(const struct FItemInfo& DeleteItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.DeleteShopItem");

	URecipeShopWnd_DeleteShopItem_Params params;
	params.DeleteItem = DeleteItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.UpdateShopItem
// (Final, Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               AddItem                        (Parm, NeedCtorLink)

void URecipeShopWnd::STATIC_UpdateShopItem(const struct FItemInfo& AddItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.UpdateShopItem");

	URecipeShopWnd_UpdateShopItem_Params params;
	params.AddItem = AddItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.ShowShopItemAddDialog
// (Final, Defined, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               AddItem                        (Parm, NeedCtorLink)

void URecipeShopWnd::STATIC_ShowShopItemAddDialog(const struct FItemInfo& AddItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.ShowShopItemAddDialog");

	URecipeShopWnd_ShowShopItemAddDialog_Params params;
	params.AddItem = AddItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.AddRecipeShopItem
// (Defined, Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            RecipeID                       (Parm)
// int                            CanbeMade                      (Parm)
// struct FINT64                  MakingFee                      (Parm)

void URecipeShopWnd::STATIC_AddRecipeShopItem(int RecipeID, int CanbeMade, const struct FINT64& MakingFee)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.AddRecipeShopItem");

	URecipeShopWnd_AddRecipeShopItem_Params params;
	params.RecipeID = RecipeID;
	params.CanbeMade = CanbeMade;
	params.MakingFee = MakingFee;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.AddRecipeBookItem
// (Defined, Iterator, Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            RecipeID                       (Parm)

void URecipeShopWnd::STATIC_AddRecipeBookItem(int RecipeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.AddRecipeBookItem");

	URecipeShopWnd_AddRecipeBookItem_Params params;
	params.RecipeID = RecipeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.ClearHandleItem
// (Defined, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void URecipeShopWnd::STATIC_ClearHandleItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.ClearHandleItem");

	URecipeShopWnd_ClearHandleItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void URecipeShopWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.Clear");

	URecipeShopWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void URecipeShopWnd::STATIC_OnDropItem(const struct FString& strID, const struct FItemInfo& infItem, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.OnDropItem");

	URecipeShopWnd_OnDropItem_Params params;
	params.strID = strID;
	params.infItem = infItem;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.OnDBClickItem
// (Final, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void URecipeShopWnd::STATIC_OnDBClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.OnDBClickItem");

	URecipeShopWnd_OnDBClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.CloseWindow
// (Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URecipeShopWnd::STATIC_CloseWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.CloseWindow");

	URecipeShopWnd_CloseWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.OnSendPacketWhenHiding
// (Final, Defined, Iterator, PreOperator, Singular, Operator, Static, Const)

void URecipeShopWnd::STATIC_OnSendPacketWhenHiding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.OnSendPacketWhenHiding");

	URecipeShopWnd_OnSendPacketWhenHiding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void URecipeShopWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.OnEvent");

	URecipeShopWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void URecipeShopWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.OnClickButton");

	URecipeShopWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void URecipeShopWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.OnLoad");

	URecipeShopWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RecipeShopWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void URecipeShopWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RecipeShopWnd.OnRegisterEvent");

	URecipeShopWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.SaveMacro
// (Iterator, Latent, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMacroEditWnd::STATIC_SaveMacro()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.SaveMacro");

	UMacroEditWnd_SaveMacro_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.SetMacroID
// (Final, Iterator, Latent, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 cID                            (Parm)

void UMacroEditWnd::STATIC_SetMacroID(const struct FItemID& cID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.SetMacroID");

	UMacroEditWnd_SetMacroID_Params params;
	params.cID = cID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.HandleMacroShowEditWnd
// (Defined, Iterator, Latent, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMacroEditWnd::STATIC_HandleMacroShowEditWnd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.HandleMacroShowEditWnd");

	UMacroEditWnd_HandleMacroShowEditWnd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.HandleMacroDeleted
// (Final, Defined, Iterator, Latent, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMacroEditWnd::STATIC_HandleMacroDeleted(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.HandleMacroDeleted");

	UMacroEditWnd_HandleMacroDeleted_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UMacroEditWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.Clear");

	UMacroEditWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.UpdateIconName
// (Latent, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMacroEditWnd::STATIC_UpdateIconName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.UpdateIconName");

	UMacroEditWnd_UpdateIconName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.UpdateIcon
// (Final, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMacroEditWnd::STATIC_UpdateIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.UpdateIcon");

	UMacroEditWnd_UpdateIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnClickRight
// (Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMacroEditWnd::STATIC_OnClickRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnClickRight");

	UMacroEditWnd_OnClickRight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnClickLeft
// (Final, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMacroEditWnd::STATIC_OnClickLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnClickLeft");

	UMacroEditWnd_OnClickLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnChangeEditBox
// (Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMacroEditWnd::STATIC_OnChangeEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnChangeEditBox");

	UMacroEditWnd_OnChangeEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnDragItemEnd
// (Defined, Iterator, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMacroEditWnd::STATIC_OnDragItemEnd(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnDragItemEnd");

	UMacroEditWnd_OnDragItemEnd_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnDragItemStart
// (Final, Defined, Iterator, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)

void UMacroEditWnd::STATIC_OnDragItemStart(const struct FString& strID, const struct FItemInfo& infItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnDragItemStart");

	UMacroEditWnd_OnDragItemStart_Params params;
	params.strID = strID;
	params.infItem = infItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UMacroEditWnd::STATIC_OnDropItem(const struct FString& strID, const struct FItemInfo& infItem, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnDropItem");

	UMacroEditWnd_OnDropItem_Params params;
	params.strID = strID;
	params.infItem = infItem;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnClickSave
// (Defined, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMacroEditWnd::STATIC_OnClickSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnClickSave");

	UMacroEditWnd_OnClickSave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnClickCancel
// (Iterator, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UMacroEditWnd::STATIC_OnClickCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnClickCancel");

	UMacroEditWnd_OnClickCancel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnClickHelp
// (Final, Defined, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UMacroEditWnd::STATIC_OnClickHelp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnClickHelp");

	UMacroEditWnd_OnClickHelp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnClickInfo
// (Final, Defined, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMacroEditWnd::STATIC_OnClickInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnClickInfo");

	UMacroEditWnd_OnClickInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.InitTabOrder
// (Final, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UMacroEditWnd::STATIC_InitTabOrder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.InitTabOrder");

	UMacroEditWnd_InitTabOrder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UMacroEditWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnEvent");

	UMacroEditWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMacroEditWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnClickButton");

	UMacroEditWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMacroEditWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnHide");

	UMacroEditWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMacroEditWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnShow");

	UMacroEditWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMacroEditWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnLoad");

	UMacroEditWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroEditWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMacroEditWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroEditWnd.OnRegisterEvent");

	UMacroEditWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void ULobbyMenuWnd::STATIC_OnComboBoxItemSelected(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.OnComboBoxItemSelected");

	ULobbyMenuWnd_OnComboBoxItemSelected_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.ResetCharacterSelectWindow
// (Defined, Iterator, Singular, Operator, Static, HasOptionalParms, Const)

void ULobbyMenuWnd::STATIC_ResetCharacterSelectWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.ResetCharacterSelectWindow");

	ULobbyMenuWnd_ResetCharacterSelectWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.HandleDialogDelete
// (Final, Iterator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bOK                            (Parm)
// int                            SelectedCharacter              (Parm)

void ULobbyMenuWnd::STATIC_HandleDialogDelete(bool bOK, int SelectedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.HandleDialogDelete");

	ULobbyMenuWnd_HandleDialogDelete_Params params;
	params.bOK = bOK;
	params.SelectedCharacter = SelectedCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.HandleDialogRestore
// (Defined, Iterator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bOK                            (Parm)
// int                            SelectedCharacter              (Parm)

void ULobbyMenuWnd::STATIC_HandleDialogRestore(bool bOK, int SelectedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.HandleDialogRestore");

	ULobbyMenuWnd_HandleDialogRestore_Params params;
	params.bOK = bOK;
	params.SelectedCharacter = SelectedCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.HandleDialogResult
// (Final, Defined, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           bOK                            (Parm)

void ULobbyMenuWnd::STATIC_HandleDialogResult(bool bOK)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.HandleDialogResult");

	ULobbyMenuWnd_HandleDialogResult_Params params;
	params.bOK = bOK;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.ShowRestoreDialog
// (Latent, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SelectedCharacter              (Parm)

void ULobbyMenuWnd::STATIC_ShowRestoreDialog(int SelectedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.ShowRestoreDialog");

	ULobbyMenuWnd_ShowRestoreDialog_Params params;
	params.SelectedCharacter = SelectedCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.HandleShowDialog
// (Final, Latent, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void ULobbyMenuWnd::STATIC_HandleShowDialog(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.HandleShowDialog");

	ULobbyMenuWnd_HandleShowDialog_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.HandleCharacterSelect
// (Defined, Latent, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void ULobbyMenuWnd::STATIC_HandleCharacterSelect(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.HandleCharacterSelect");

	ULobbyMenuWnd_HandleCharacterSelect_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.HandleAddCharacterName
// (Final, Defined, Latent, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void ULobbyMenuWnd::STATIC_HandleAddCharacterName(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.HandleAddCharacterName");

	ULobbyMenuWnd_HandleAddCharacterName_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.HandleMenuButtonEnable
// (Iterator, Latent, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void ULobbyMenuWnd::STATIC_HandleMenuButtonEnable(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.HandleMenuButtonEnable");

	ULobbyMenuWnd_HandleMenuButtonEnable_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void ULobbyMenuWnd::STATIC_OnEvent(int Event_ID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.OnEvent");

	ULobbyMenuWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.ShowDeleteDialog
// (Final, Iterator, Latent, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)

void ULobbyMenuWnd::STATIC_ShowDeleteDialog(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.ShowDeleteDialog");

	ULobbyMenuWnd_ShowDeleteDialog_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.OnClickDeleteCharacter
// (Defined, Iterator, Latent, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void ULobbyMenuWnd::STATIC_OnClickDeleteCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.OnClickDeleteCharacter");

	ULobbyMenuWnd_OnClickDeleteCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.OnClickStartButton
// (Final, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void ULobbyMenuWnd::STATIC_OnClickStartButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.OnClickStartButton");

	ULobbyMenuWnd_OnClickStartButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.OnKeyUp
// (Final, Defined, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           a_WindowHandle                 (Parm)
// TEnumAsByte<EInputKey>         Key                            (Parm)

void ULobbyMenuWnd::STATIC_OnKeyUp(class UWindowHandle* a_WindowHandle, TEnumAsByte<EInputKey> Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.OnKeyUp");

	ULobbyMenuWnd_OnKeyUp_Params params;
	params.a_WindowHandle = a_WindowHandle;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void ULobbyMenuWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.OnClickButton");

	ULobbyMenuWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void ULobbyMenuWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.OnShow");

	ULobbyMenuWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void ULobbyMenuWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.OnLoad");

	ULobbyMenuWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LobbyMenuWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void ULobbyMenuWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LobbyMenuWnd.OnRegisterEvent");

	ULobbyMenuWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnChatMarkedEditBox
// (Final, Defined, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UPartyMatchRoomWnd::STATIC_OnChatMarkedEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnChatMarkedEditBox");

	UPartyMatchRoomWnd_OnChatMarkedEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnCompleteEditBox
// (Final, Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UPartyMatchRoomWnd::STATIC_OnCompleteEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnCompleteEditBox");

	UPartyMatchRoomWnd_OnCompleteEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnExitButtonClick
// (Final, Defined, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchRoomWnd::STATIC_OnExitButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnExitButtonClick");

	UPartyMatchRoomWnd_OnExitButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnInviteButtonClick
// (Final, Defined, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchRoomWnd::STATIC_OnInviteButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnInviteButtonClick");

	UPartyMatchRoomWnd_OnInviteButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnBanButtonClick
// (Defined, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchRoomWnd::STATIC_OnBanButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnBanButtonClick");

	UPartyMatchRoomWnd_OnBanButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnRoomSettingButtonClick
// (Final, PreOperator, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchRoomWnd::STATIC_OnRoomSettingButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnRoomSettingButtonClick");

	UPartyMatchRoomWnd_OnRoomSettingButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnWaitListButtonClick
// (Defined, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UPartyMatchRoomWnd::STATIC_OnWaitListButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnWaitListButtonClick");

	UPartyMatchRoomWnd_OnWaitListButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_strButtonName                (Parm, NeedCtorLink)

void UPartyMatchRoomWnd::STATIC_OnClickButton(const struct FString& a_strButtonName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnClickButton");

	UPartyMatchRoomWnd_OnClickButton_Params params;
	params.a_strButtonName = a_strButtonName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.UpdateData
// (Final, Iterator, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           a_ToControl                    (Parm)

void UPartyMatchRoomWnd::STATIC_UpdateData(bool a_ToControl)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.UpdateData");

	UPartyMatchRoomWnd_UpdateData_Params params;
	params.a_ToControl = a_ToControl;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.HandlePartyMatchChatMessage
// (Final, Defined, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchRoomWnd::STATIC_HandlePartyMatchChatMessage(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.HandlePartyMatchChatMessage");

	UPartyMatchRoomWnd_HandlePartyMatchChatMessage_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.HandlePartyMatchRoomMemberUpdate
// (Iterator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchRoomWnd::STATIC_HandlePartyMatchRoomMemberUpdate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.HandlePartyMatchRoomMemberUpdate");

	UPartyMatchRoomWnd_HandlePartyMatchRoomMemberUpdate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.RemoveMember
// (Final, Defined, Iterator, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_MemberID                     (Parm)

void UPartyMatchRoomWnd::STATIC_RemoveMember(int a_MemberID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.RemoveMember");

	UPartyMatchRoomWnd_RemoveMember_Params params;
	params.a_MemberID = a_MemberID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.AddMember
// (Defined, Iterator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_MemberID                     (Parm)
// struct FString                 a_MemberName                   (Parm, NeedCtorLink)
// int                            a_ClassID                      (Parm)
// int                            a_Level                        (Parm)
// int                            a_ZoneID                       (Parm)
// int                            a_MembershipType               (Parm)

void UPartyMatchRoomWnd::STATIC_AddMember(int a_MemberID, const struct FString& a_MemberName, int a_ClassID, int a_Level, int a_ZoneID, int a_MembershipType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.AddMember");

	UPartyMatchRoomWnd_AddMember_Params params;
	params.a_MemberID = a_MemberID;
	params.a_MemberName = a_MemberName;
	params.a_ClassID = a_ClassID;
	params.a_Level = a_Level;
	params.a_ZoneID = a_ZoneID;
	params.a_MembershipType = a_MembershipType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.HandlePartyMatchRoomMember
// (Final, Iterator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchRoomWnd::STATIC_HandlePartyMatchRoomMember(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.HandlePartyMatchRoomMember");

	UPartyMatchRoomWnd_HandlePartyMatchRoomMember_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.UpdateMyMembershipType
// (Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchRoomWnd::STATIC_UpdateMyMembershipType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.UpdateMyMembershipType");

	UPartyMatchRoomWnd_UpdateMyMembershipType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.HandlePartyMatchRoomClose
// (Defined, Iterator, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UPartyMatchRoomWnd::STATIC_HandlePartyMatchRoomClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.HandlePartyMatchRoomClose");

	UPartyMatchRoomWnd_HandlePartyMatchRoomClose_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchRoomWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnHide");

	UPartyMatchRoomWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.UpdateWaitListWnd
// (Defined, PreOperator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchRoomWnd::STATIC_UpdateWaitListWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.UpdateWaitListWnd");

	UPartyMatchRoomWnd_UpdateWaitListWnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.HandlePartyMatchRoomStart
// (PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchRoomWnd::STATIC_HandlePartyMatchRoomStart(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.HandlePartyMatchRoomStart");

	UPartyMatchRoomWnd_HandlePartyMatchRoomStart_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.ExitPartyRoom
// (Final, Defined, Iterator, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchRoomWnd::STATIC_ExitPartyRoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.ExitPartyRoom");

	UPartyMatchRoomWnd_ExitPartyRoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.HandleRestart
// (Final, Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchRoomWnd::STATIC_HandleRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.HandleRestart");

	UPartyMatchRoomWnd_HandleRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchRoomWnd::STATIC_OnEvent(int a_EventID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnEvent");

	UPartyMatchRoomWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UPartyMatchRoomWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnEnterState");

	UPartyMatchRoomWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnSendPacketWhenHiding
// (Final, Defined, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchRoomWnd::STATIC_OnSendPacketWhenHiding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnSendPacketWhenHiding");

	UPartyMatchRoomWnd_OnSendPacketWhenHiding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPartyMatchRoomWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnLoad");

	UPartyMatchRoomWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchRoomWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchRoomWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchRoomWnd.OnRegisterEvent");

	UPartyMatchRoomWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnMyLocBtnClick
// (Defined, Singular, Simulated, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkWnd::STATIC_OnMyLocBtnClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnMyLocBtnClick");

	UTeleportBookMarkWnd_OnMyLocBtnClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.SetBookMarkCount
// (Defined, Iterator, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ableSlotNum                    (Parm)
// int                            curSlotNum                     (Parm)

void UTeleportBookMarkWnd::STATIC_SetBookMarkCount(int ableSlotNum, int curSlotNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.SetBookMarkCount");

	UTeleportBookMarkWnd_SetBookMarkCount_Params params;
	params.ableSlotNum = ableSlotNum;
	params.curSlotNum = curSlotNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UTeleportBookMarkWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnClickItem");

	UTeleportBookMarkWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnDBClickItem
// (Final, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UTeleportBookMarkWnd::STATIC_OnDBClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnDBClickItem");

	UTeleportBookMarkWnd_OnDBClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UTeleportBookMarkWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.Clear");

	UTeleportBookMarkWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.SetLocatorOnMiniMap2
// (Final, Defined, Iterator, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkWnd::STATIC_SetLocatorOnMiniMap2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.SetLocatorOnMiniMap2");

	UTeleportBookMarkWnd_SetLocatorOnMiniMap2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.SetLocatorOnMiniMap
// (Final, Defined, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FVector                 Loc                            (Parm)

void UTeleportBookMarkWnd::STATIC_SetLocatorOnMiniMap(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.SetLocatorOnMiniMap");

	UTeleportBookMarkWnd_SetLocatorOnMiniMap_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.SetCurrentLocOnMinimap
// (Latent, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkWnd::STATIC_SetCurrentLocOnMinimap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.SetCurrentLocOnMinimap");

	UTeleportBookMarkWnd_SetCurrentLocOnMinimap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnbtnSaveMyLocClick
// (Final, Latent, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkWnd::STATIC_OnbtnSaveMyLocClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnbtnSaveMyLocClick");

	UTeleportBookMarkWnd_OnbtnSaveMyLocClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnModifyBookMarkSlot
// (Defined, Latent, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)

void UTeleportBookMarkWnd::STATIC_OnModifyBookMarkSlot(const struct FItemInfo& infItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnModifyBookMarkSlot");

	UTeleportBookMarkWnd_OnModifyBookMarkSlot_Params params;
	params.infItem = infItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnDeleteBookMarkSlot
// (Final, Defined, Latent, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)

void UTeleportBookMarkWnd::STATIC_OnDeleteBookMarkSlot(const struct FItemInfo& infItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnDeleteBookMarkSlot");

	UTeleportBookMarkWnd_OnDeleteBookMarkSlot_Params params;
	params.infItem = infItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.HandleBookMarkList
// (Iterator, Latent, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UTeleportBookMarkWnd::STATIC_HandleBookMarkList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.HandleBookMarkList");

	UTeleportBookMarkWnd_HandleBookMarkList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.SetUnActiveSlots
// (Final, Iterator, Latent, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkWnd::STATIC_SetUnActiveSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.SetUnActiveSlots");

	UTeleportBookMarkWnd_SetUnActiveSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UTeleportBookMarkWnd::STATIC_OnDropItem(const struct FString& strID, const struct FItemInfo& infItem, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnDropItem");

	UTeleportBookMarkWnd_OnDropItem_Params params;
	params.strID = strID;
	params.infItem = infItem;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OpenWindow
// (Final, Defined, Latent, PreOperator, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkWnd::STATIC_OpenWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OpenWindow");

	UTeleportBookMarkWnd_OpenWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.HandleUpdateItemCountSystemMessage
// (Defined, Iterator, Latent, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)

void UTeleportBookMarkWnd::STATIC_HandleUpdateItemCountSystemMessage(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.HandleUpdateItemCountSystemMessage");

	UTeleportBookMarkWnd_HandleUpdateItemCountSystemMessage_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UTeleportBookMarkWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnEvent");

	UTeleportBookMarkWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UTeleportBookMarkWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnClickButton");

	UTeleportBookMarkWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UTeleportBookMarkWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnRegisterEvent");

	UTeleportBookMarkWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTeleportBookMarkWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.Load");

	UTeleportBookMarkWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTeleportBookMarkWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.InitializeCOD");

	UTeleportBookMarkWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UTeleportBookMarkWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.Initialize");

	UTeleportBookMarkWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UTeleportBookMarkWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnLoad");

	UTeleportBookMarkWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.GetTeleportItemCnt
// (Final, Iterator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTeleportBookMarkWnd::STATIC_GetTeleportItemCnt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.GetTeleportItemCnt");

	UTeleportBookMarkWnd_GetTeleportItemCnt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UTeleportBookMarkWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnShow");

	UTeleportBookMarkWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UTeleportBookMarkWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkWnd.OnEnterState");

	UTeleportBookMarkWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InviteClanPopWnd.InitializeComboBox
// (Defined, Iterator, Latent, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UInviteClanPopWnd::STATIC_InitializeComboBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InviteClanPopWnd.InitializeComboBox");

	UInviteClanPopWnd_InitializeComboBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InviteClanPopWnd.AskJoin
// (Final, Defined, Iterator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UInviteClanPopWnd::STATIC_AskJoin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InviteClanPopWnd.AskJoin");

	UInviteClanPopWnd_AskJoin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InviteClanPopWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UInviteClanPopWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InviteClanPopWnd.OnClickButton");

	UInviteClanPopWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InviteClanPopWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UInviteClanPopWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InviteClanPopWnd.OnEvent");

	UInviteClanPopWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InviteClanPopWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UInviteClanPopWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InviteClanPopWnd.OnShow");

	UInviteClanPopWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InviteClanPopWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UInviteClanPopWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InviteClanPopWnd.OnLoad");

	UInviteClanPopWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.InviteClanPopWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UInviteClanPopWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.InviteClanPopWnd.OnRegisterEvent");

	UInviteClanPopWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.UpdateHennaInfo
// (Iterator, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGMInventoryWnd::STATIC_UpdateHennaInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.UpdateHennaInfo");

	UGMInventoryWnd_UpdateHennaInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.IsLOrRFinger
// (Final, Iterator, Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 sID                            (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UGMInventoryWnd::STATIC_IsLOrRFinger(const struct FItemID& sID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.IsLOrRFinger");

	UGMInventoryWnd_IsLOrRFinger_Params params;
	params.sID = sID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GMInventoryWnd.IsLOrREar
// (Iterator, Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 sID                            (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UGMInventoryWnd::STATIC_IsLOrREar(const struct FItemID& sID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.IsLOrREar");

	UGMInventoryWnd_IsLOrREar_Params params;
	params.sID = sID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GMInventoryWnd.EquipItemUpdate
// (Defined, Iterator, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               a_Info                         (Parm, NeedCtorLink)

void UGMInventoryWnd::STATIC_EquipItemUpdate(const struct FItemInfo& a_Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.EquipItemUpdate");

	UGMInventoryWnd_EquipItemUpdate_Params params;
	params.a_Info = a_Info;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.OnRClickItem
// (Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UGMInventoryWnd::STATIC_OnRClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.OnRClickItem");

	UGMInventoryWnd_OnRClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.OnDBClickItem
// (Final, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UGMInventoryWnd::STATIC_OnDBClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.OnDBClickItem");

	UGMInventoryWnd_OnDBClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.OnDropItemSource
// (Final, Iterator, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strTarget                      (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)

void UGMInventoryWnd::STATIC_OnDropItemSource(const struct FString& strTarget, const struct FItemInfo& Info)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.OnDropItemSource");

	UGMInventoryWnd_OnDropItemSource_Params params;
	params.strTarget = strTarget;
	params.Info = Info;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strTarget                      (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UGMInventoryWnd::STATIC_OnDropItem(const struct FString& strTarget, const struct FItemInfo& Info, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.OnDropItem");

	UGMInventoryWnd_OnDropItem_Params params;
	params.strTarget = strTarget;
	params.Info = Info;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.HandleGMUpdateHennaInfo
// (Defined, Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMInventoryWnd::STATIC_HandleGMUpdateHennaInfo(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.HandleGMUpdateHennaInfo");

	UGMInventoryWnd_HandleGMUpdateHennaInfo_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.HandleGMAddHennaInfo
// (Final, Defined, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMInventoryWnd::STATIC_HandleGMAddHennaInfo(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.HandleGMAddHennaInfo");

	UGMInventoryWnd_HandleGMAddHennaInfo_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.HandleGMObservingInventoryClear
// (Iterator, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMInventoryWnd::STATIC_HandleGMObservingInventoryClear(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.HandleGMObservingInventoryClear");

	UGMInventoryWnd_HandleGMObservingInventoryClear_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.GetMyInventoryLimit
// (Final, Defined, Latent, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UGMInventoryWnd::STATIC_GetMyInventoryLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.GetMyInventoryLimit");

	UGMInventoryWnd_GetMyInventoryLimit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GMInventoryWnd.SetAdenaText
// (Final, Iterator, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGMInventoryWnd::STATIC_SetAdenaText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.SetAdenaText");

	UGMInventoryWnd_SetAdenaText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.SetAdena
// (Final, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  a_Adena                        (Parm)

void UGMInventoryWnd::STATIC_SetAdena(const struct FINT64& a_Adena)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.SetAdena");

	UGMInventoryWnd_SetAdena_Params params;
	params.a_Adena = a_Adena;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UGMInventoryWnd::STATIC_HandleAddItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.HandleAddItem");

	UGMInventoryWnd_HandleAddItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.HandleGMObservingInventoryAddItem
// (Defined, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMInventoryWnd::STATIC_HandleGMObservingInventoryAddItem(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.HandleGMObservingInventoryAddItem");

	UGMInventoryWnd_HandleGMObservingInventoryAddItem_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMInventoryWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.OnEvent");

	UGMInventoryWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.ShowInventory
// (Final, Defined, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMInventoryWnd::STATIC_ShowInventory(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.ShowInventory");

	UGMInventoryWnd_ShowInventory_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMInventoryWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.OnHide");

	UGMInventoryWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMInventoryWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.OnShow");

	UGMInventoryWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UGMInventoryWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.OnLoad");

	UGMInventoryWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMInventoryWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UGMInventoryWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMInventoryWnd.OnRegisterEvent");

	UGMInventoryWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CouponEventWnd.count_editBox
// (Defined, Iterator, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 currentboxnum                  (Parm, NeedCtorLink)

void UCouponEventWnd::STATIC_count_editBox(const struct FString& currentboxnum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CouponEventWnd.count_editBox");

	UCouponEventWnd_count_editBox_Params params;
	params.currentboxnum = currentboxnum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CouponEventWnd.OnChangeEditBox
// (Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 EditBoxID                      (Parm, NeedCtorLink)

void UCouponEventWnd::STATIC_OnChangeEditBox(const struct FString& EditBoxID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CouponEventWnd.OnChangeEditBox");

	UCouponEventWnd_OnChangeEditBox_Params params;
	params.EditBoxID = EditBoxID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CouponEventWnd.Proc_Delivery
// (Iterator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UCouponEventWnd::STATIC_Proc_Delivery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CouponEventWnd.Proc_Delivery");

	UCouponEventWnd_Proc_Delivery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CouponEventWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UCouponEventWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CouponEventWnd.OnClickButton");

	UCouponEventWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CouponEventWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UCouponEventWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CouponEventWnd.OnEvent");

	UCouponEventWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CouponEventWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UCouponEventWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CouponEventWnd.OnShow");

	UCouponEventWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CouponEventWnd.resetEditBox
// (Defined, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCouponEventWnd::STATIC_resetEditBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CouponEventWnd.resetEditBox");

	UCouponEventWnd_resetEditBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CouponEventWnd.initValue
// (Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCouponEventWnd::STATIC_initValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CouponEventWnd.initValue");

	UCouponEventWnd_initValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CouponEventWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UCouponEventWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CouponEventWnd.OnLoad");

	UCouponEventWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CouponEventWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UCouponEventWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CouponEventWnd.OnRegisterEvent");

	UCouponEventWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.OnOrderClick
// (Final, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UUIEditor_ControlManager::STATIC_OnOrderClick(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.OnOrderClick");

	UUIEditor_ControlManager_OnOrderClick_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.GetFullName
// (Iterator, Latent, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// class UWindowHandle*           hWnd                           (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UUIEditor_ControlManager::STATIC_GetFullName(class UWindowHandle* hWnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.GetFullName");

	UUIEditor_ControlManager_GetFullName_Params params;
	params.hWnd = hWnd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UIEditor_ControlManager.SelectControlList
// (Final, Defined, Latent, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 FullName                       (Parm, NeedCtorLink)

void UUIEditor_ControlManager::STATIC_SelectControlList(const struct FString& FullName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.SelectControlList");

	UUIEditor_ControlManager_SelectControlList_Params params;
	params.FullName = FullName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.FindWindowHandle
// (Final, Latent, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_FullName                     (Parm, NeedCtorLink)
// class UWindowHandle*           ReturnValue                    (Parm, OutParm, ReturnParm)

class UWindowHandle* UUIEditor_ControlManager::STATIC_FindWindowHandle(const struct FString& a_FullName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.FindWindowHandle");

	UUIEditor_ControlManager_FindWindowHandle_Params params;
	params.a_FullName = a_FullName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UIEditor_ControlManager.ReverseParentName
// (Final, Latent, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UUIEditor_ControlManager::STATIC_ReverseParentName(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.ReverseParentName");

	UUIEditor_ControlManager_ReverseParentName_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UIEditor_ControlManager.SelectControl
// (Final, Iterator, Latent, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)

void UUIEditor_ControlManager::STATIC_SelectControl(const struct FString& ControlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.SelectControl");

	UUIEditor_ControlManager_SelectControl_Params params;
	params.ControlName = ControlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.AddChildWIndowToList
// (Final, Defined, Latent, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// class UWindowHandle*           hWnd                           (Parm)
// struct FString                 ParentName                     (Parm, NeedCtorLink)
// int                            Depth                          (Parm)

void UUIEditor_ControlManager::STATIC_AddChildWIndowToList(class UWindowHandle* hWnd, const struct FString& ParentName, int Depth)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.AddChildWIndowToList");

	UUIEditor_ControlManager_AddChildWIndowToList_Params params;
	params.hWnd = hWnd;
	params.ParentName = ParentName;
	params.Depth = Depth;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.HandleEditorSetProperty
// (Iterator, Latent, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUIEditor_ControlManager::STATIC_HandleEditorSetProperty(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.HandleEditorSetProperty");

	UUIEditor_ControlManager_HandleEditorSetProperty_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.HandleTrackerDetach
// (Defined, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_ControlManager::STATIC_HandleTrackerDetach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.HandleTrackerDetach");

	UUIEditor_ControlManager_HandleTrackerDetach_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.HandleTrackerAttach
// (Defined, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_ControlManager::STATIC_HandleTrackerAttach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.HandleTrackerAttach");

	UUIEditor_ControlManager_HandleTrackerAttach_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.RefreshControlList
// (Defined, Latent, Singular, Simulated, Operator, Static, HasOptionalParms, Const)

void UUIEditor_ControlManager::STATIC_RefreshControlList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.RefreshControlList");

	UUIEditor_ControlManager_RefreshControlList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.UpdateControlList
// (Iterator, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_ControlManager::STATIC_UpdateControlList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.UpdateControlList");

	UUIEditor_ControlManager_UpdateControlList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUIEditor_ControlManager::STATIC_OnDBClickListCtrlRecord(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.OnDBClickListCtrlRecord");

	UUIEditor_ControlManager_OnDBClickListCtrlRecord_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.OnClickListCtrlRecord
// (Defined, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUIEditor_ControlManager::STATIC_OnClickListCtrlRecord(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.OnClickListCtrlRecord");

	UUIEditor_ControlManager_OnClickListCtrlRecord_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.OnAlignClick
// (Defined, Iterator, Latent, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UUIEditor_ControlManager::STATIC_OnAlignClick(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.OnAlignClick");

	UUIEditor_ControlManager_OnAlignClick_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.GetCurrentControlTypeString
// (Final, Defined, Iterator, Latent, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UUIEditor_ControlManager::STATIC_GetCurrentControlTypeString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.GetCurrentControlTypeString");

	UUIEditor_ControlManager_GetCurrentControlTypeString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UIEditor_ControlManager.GetCurrentControlType
// (PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EXMLControlType>   ReturnValue                    (Parm, OutParm, ReturnParm)

TEnumAsByte<EXMLControlType> UUIEditor_ControlManager::STATIC_GetCurrentControlType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.GetCurrentControlType");

	UUIEditor_ControlManager_GetCurrentControlType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UIEditor_ControlManager.OnClickCheckBox
// (Final, Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UUIEditor_ControlManager::STATIC_OnClickCheckBox(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.OnClickCheckBox");

	UUIEditor_ControlManager_OnClickCheckBox_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UUIEditor_ControlManager::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.OnClickButton");

	UUIEditor_ControlManager_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UUIEditor_ControlManager::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.OnEvent");

	UUIEditor_ControlManager_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.InitNewControlList
// (Final, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)

void UUIEditor_ControlManager::STATIC_InitNewControlList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.InitNewControlList");

	UUIEditor_ControlManager_InitNewControlList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.InitControlItem
// (Defined, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_ControlManager::STATIC_InitControlItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.InitControlItem");

	UUIEditor_ControlManager_InitControlItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_ControlManager::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.InitHandle");

	UUIEditor_ControlManager_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.OnLoad
// (Final, Net, Operator, Static, Const)

void UUIEditor_ControlManager::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.OnLoad");

	UUIEditor_ControlManager_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_ControlManager.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UUIEditor_ControlManager::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_ControlManager.OnRegisterEvent");

	UUIEditor_ControlManager_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.ResetUI
// (Final, Defined, Iterator, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftCurWnd::STATIC_ResetUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.ResetUI");

	UCleftCurWnd_ResetUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UCleftCurWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.OnClickButton");

	UCleftCurWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.HandleCleftListRemove
// (Defined, Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftCurWnd::STATIC_HandleCleftListRemove(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.HandleCleftListRemove");

	UCleftCurWnd_HandleCleftListRemove_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.HandleCleftListAdd
// (Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftCurWnd::STATIC_HandleCleftListAdd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.HandleCleftListAdd");

	UCleftCurWnd_HandleCleftListAdd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.HandleCleftStateResult
// (Defined, Latent, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftCurWnd::STATIC_HandleCleftStateResult(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.HandleCleftStateResult");

	UCleftCurWnd_HandleCleftStateResult_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.HandleCleftStatePlayer
// (Iterator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftCurWnd::STATIC_HandleCleftStatePlayer(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.HandleCleftStatePlayer");

	UCleftCurWnd_HandleCleftStatePlayer_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.HandleCleftStateTeam
// (Final, Iterator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftCurWnd::STATIC_HandleCleftStateTeam(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.HandleCleftStateTeam");

	UCleftCurWnd_HandleCleftStateTeam_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.HandleCleftListStart
// (Final, Defined, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftCurWnd::STATIC_HandleCleftListStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.HandleCleftListStart");

	UCleftCurWnd_HandleCleftListStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UCleftCurWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.OnEvent");

	UCleftCurWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftCurWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.InitializeCOD");

	UCleftCurWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UCleftCurWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.Initialize");

	UCleftCurWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UCleftCurWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.OnShow");

	UCleftCurWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UCleftCurWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.OnLoad");

	UCleftCurWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UCleftCurWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurWnd.OnRegisterEvent");

	UCleftCurWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMDetailStatusWnd.GetMyExpRate
// (Final, Defined, Iterator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ReturnParm)

float UGMDetailStatusWnd::STATIC_GetMyExpRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.GetMyExpRate");

	UGMDetailStatusWnd_GetMyExpRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GMDetailStatusWnd.GetMovingSpeed
// (Defined, Iterator, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FUserInfo               a_UserInfo                     (Parm, NeedCtorLink)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UGMDetailStatusWnd::STATIC_GetMovingSpeed(const struct FUserInfo& a_UserInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.GetMovingSpeed");

	UGMDetailStatusWnd_GetMovingSpeed_Params params;
	params.a_UserInfo = a_UserInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GMDetailStatusWnd.GetMyUserInfo
// (Defined, Iterator, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FUserInfo               a_MyUserInfo                   (Parm, OutParm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UGMDetailStatusWnd::STATIC_GetMyUserInfo(struct FUserInfo* a_MyUserInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.GetMyUserInfo");

	UGMDetailStatusWnd_GetMyUserInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (a_MyUserInfo != nullptr)
		*a_MyUserInfo = params.a_MyUserInfo;

	return params.ReturnValue;
}


// Function Interface.GMDetailStatusWnd.HandleGMUpdateHennaInfo
// (Defined, Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMDetailStatusWnd::STATIC_HandleGMUpdateHennaInfo(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.HandleGMUpdateHennaInfo");

	UGMDetailStatusWnd_HandleGMUpdateHennaInfo_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMDetailStatusWnd.HandleGMObservingUserInfoUpdate
// (Defined, Latent, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UGMDetailStatusWnd::STATIC_HandleGMObservingUserInfoUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.HandleGMObservingUserInfoUpdate");

	UGMDetailStatusWnd_HandleGMObservingUserInfoUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GMDetailStatusWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMDetailStatusWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.OnEvent");

	UGMDetailStatusWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMDetailStatusWnd.ShowStatus
// (Final, Defined, Iterator, Latent, PreOperator, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMDetailStatusWnd::STATIC_ShowStatus(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.ShowStatus");

	UGMDetailStatusWnd_ShowStatus_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMDetailStatusWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UGMDetailStatusWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.OnEnterState");

	UGMDetailStatusWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMDetailStatusWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMDetailStatusWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.OnHide");

	UGMDetailStatusWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMDetailStatusWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMDetailStatusWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.OnShow");

	UGMDetailStatusWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMDetailStatusWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UGMDetailStatusWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.OnLoad");

	UGMDetailStatusWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMDetailStatusWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UGMDetailStatusWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMDetailStatusWnd.OnRegisterEvent");

	UGMDetailStatusWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.GetMyUserInfo
// (Defined, Iterator, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FUserInfo               a_MyUserInfo                   (Parm, OutParm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UCleftEnterWnd::STATIC_GetMyUserInfo(struct FUserInfo* a_MyUserInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.GetMyUserInfo");

	UCleftEnterWnd_GetMyUserInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (a_MyUserInfo != nullptr)
		*a_MyUserInfo = params.a_MyUserInfo;

	return params.ReturnValue;
}


// Function Interface.CleftEnterWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UCleftEnterWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.OnHide");

	UCleftEnterWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 ButtonID                       (Parm, NeedCtorLink)

void UCleftEnterWnd::STATIC_OnClickButton(const struct FString& ButtonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.OnClickButton");

	UCleftEnterWnd_OnClickButton_Params params;
	params.ButtonID = ButtonID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.OnLButtonUp
// (Final, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           WindowHandle                   (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UCleftEnterWnd::STATIC_OnLButtonUp(class UWindowHandle* WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.OnLButtonUp");

	UCleftEnterWnd_OnLButtonUp_Params params;
	params.WindowHandle = WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.UpdateNeedMember
// (Final, Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftEnterWnd::STATIC_UpdateNeedMember()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.UpdateNeedMember");

	UCleftEnterWnd_UpdateNeedMember_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.HandleCleftListInfo
// (Final, Defined, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftEnterWnd::STATIC_HandleCleftListInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.HandleCleftListInfo");

	UCleftEnterWnd_HandleCleftListInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.HandleCleftListClose
// (Final, Defined, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UCleftEnterWnd::STATIC_HandleCleftListClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.HandleCleftListClose");

	UCleftEnterWnd_HandleCleftListClose_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.HandleCleftListRemove
// (Defined, Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftEnterWnd::STATIC_HandleCleftListRemove(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.HandleCleftListRemove");

	UCleftEnterWnd_HandleCleftListRemove_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.HandleCleftListAdd
// (Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftEnterWnd::STATIC_HandleCleftListAdd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.HandleCleftListAdd");

	UCleftEnterWnd_HandleCleftListAdd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.HandleCleftListStart
// (Final, Defined, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftEnterWnd::STATIC_HandleCleftListStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.HandleCleftListStart");

	UCleftEnterWnd_HandleCleftListStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.ResetUI
// (Final, Defined, Iterator, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftEnterWnd::STATIC_ResetUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.ResetUI");

	UCleftEnterWnd_ResetUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftEnterWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.OnEvent");

	UCleftEnterWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftEnterWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.InitializeCOD");

	UCleftEnterWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UCleftEnterWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.Initialize");

	UCleftEnterWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UCleftEnterWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.OnShow");

	UCleftEnterWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UCleftEnterWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.OnLoad");

	UCleftEnterWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftEnterWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UCleftEnterWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftEnterWnd.OnRegisterEvent");

	UCleftEnterWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.InitializeLocation
// (Final, Iterator, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_InitializeLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.InitializeLocation");

	UMinimapWnd_Expand_InitializeLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.GetContinent
// (Defined, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FVector                 Loc                            (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UMinimapWnd_Expand::STATIC_GetContinent(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.GetContinent");

	UMinimapWnd_Expand_GetContinent_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MinimapWnd_Expand.SetLocContinent
// (PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FVector                 Loc                            (Parm)

void UMinimapWnd_Expand::STATIC_SetLocContinent(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.SetLocContinent");

	UMinimapWnd_Expand_SetLocContinent_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.SetContinent
// (Defined, Latent, Singular, Net, Exec, Operator, Static, Const)
// Parameters:
// int                            Continent                      (Parm)

void UMinimapWnd_Expand::STATIC_SetContinent(int Continent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.SetContinent");

	UMinimapWnd_Expand_SetContinent_Params params;
	params.Continent = Continent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.SelectSunOrMoon
// (Final, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            GameHour                       (Parm)

void UMinimapWnd_Expand::STATIC_SelectSunOrMoon(int GameHour)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.SelectSunOrMoon");

	UMinimapWnd_Expand_SelectSunOrMoon_Params params;
	params.GameHour = GameHour;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.HandleUpdateGameTime
// (Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd_Expand::STATIC_HandleUpdateGameTime(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.HandleUpdateGameTime");

	UMinimapWnd_Expand_HandleUpdateGameTime_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.DrawCursedWeapon
// (Final, Iterator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 WindowName                     (Parm, NeedCtorLink)
// int                            ItemID                         (Parm)
// struct FString                 cursedName                     (Parm, NeedCtorLink)
// struct FVector                 vecLoc                         (Parm)
// bool                           bDropped                       (Parm)
// bool                           bRefresh                       (Parm)

void UMinimapWnd_Expand::STATIC_DrawCursedWeapon(const struct FString& WindowName, int ItemID, const struct FString& cursedName, const struct FVector& vecLoc, bool bDropped, bool bRefresh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.DrawCursedWeapon");

	UMinimapWnd_Expand_DrawCursedWeapon_Params params;
	params.WindowName = WindowName;
	params.ItemID = ItemID;
	params.cursedName = cursedName;
	params.vecLoc = vecLoc;
	params.bDropped = bDropped;
	params.bRefresh = bRefresh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.HandleCursedWeaponLoctaion
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd_Expand::STATIC_HandleCursedWeaponLoctaion(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.HandleCursedWeaponLoctaion");

	UMinimapWnd_Expand_HandleCursedWeaponLoctaion_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.HandleCursedWeaponList
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMinimapWnd_Expand::STATIC_HandleCursedWeaponList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.HandleCursedWeaponList");

	UMinimapWnd_Expand_HandleCursedWeaponList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnClickPartyLocButton
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_OnClickPartyLocButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnClickPartyLocButton");

	UMinimapWnd_Expand_OnClickPartyLocButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.AdjustMapToPlayerPosition
// (Latent, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           a_ZoomToTownMap                (Parm)

void UMinimapWnd_Expand::STATIC_AdjustMapToPlayerPosition(bool a_ZoomToTownMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.AdjustMapToPlayerPosition");

	UMinimapWnd_Expand_AdjustMapToPlayerPosition_Params params;
	params.a_ZoomToTownMap = a_ZoomToTownMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnClickMyLocButton
// (Final, Latent, PreOperator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_OnClickMyLocButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnClickMyLocButton");

	UMinimapWnd_Expand_OnClickMyLocButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnClickTargetButton
// (Final, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_OnClickTargetButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnClickTargetButton");

	UMinimapWnd_Expand_OnClickTargetButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnClickCollapseButton
// (Defined, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_OnClickCollapseButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnClickCollapseButton");

	UMinimapWnd_Expand_OnClickCollapseButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_ButtonID                     (Parm, NeedCtorLink)

void UMinimapWnd_Expand::STATIC_OnClickButton(const struct FString& a_ButtonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnClickButton");

	UMinimapWnd_Expand_OnClickButton_Params params;
	params.a_ButtonID = a_ButtonID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 sName                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UMinimapWnd_Expand::STATIC_OnComboBoxItemSelected(const struct FString& sName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnComboBoxItemSelected");

	UMinimapWnd_Expand_OnComboBoxItemSelected_Params params;
	params.sName = sName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.RequestCursedWeaponLocation
// (Defined, Latent, PreOperator, Singular, NetReliable, Exec, Operator, Static, Const)

void UMinimapWnd_Expand::STATIC_RequestCursedWeaponLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.RequestCursedWeaponLocation");

	UMinimapWnd_Expand_RequestCursedWeaponLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.HandleMinimapHideQuest
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_HandleMinimapHideQuest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.HandleMinimapHideQuest");

	UMinimapWnd_Expand_HandleMinimapHideQuest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.HandleMinimapShowQuest
// (Latent, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_HandleMinimapShowQuest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.HandleMinimapShowQuest");

	UMinimapWnd_Expand_HandleMinimapShowQuest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.HandleMinimapDeleteAllTarget
// (Final, Defined, Iterator, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_HandleMinimapDeleteAllTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.HandleMinimapDeleteAllTarget");

	UMinimapWnd_Expand_HandleMinimapDeleteAllTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.HandleMinimapDeleteTarget
// (Defined, Iterator, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd_Expand::STATIC_HandleMinimapDeleteTarget(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.HandleMinimapDeleteTarget");

	UMinimapWnd_Expand_HandleMinimapDeleteTarget_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.HandleMinimapAddTarget
// (Final, Iterator, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd_Expand::STATIC_HandleMinimapAddTarget(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.HandleMinimapAddTarget");

	UMinimapWnd_Expand_HandleMinimapAddTarget_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.HandlePartyMemberChanged
// (Iterator, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd_Expand::STATIC_HandlePartyMemberChanged(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.HandlePartyMemberChanged");

	UMinimapWnd_Expand_HandlePartyMemberChanged_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMinimapWnd_Expand::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnHide");

	UMinimapWnd_Expand_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.ResetMiniMapSize
// (Final, Defined, Iterator, Latent, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            CurrentWidth                   (Parm)
// int                            CurrentHeight                  (Parm)

void UMinimapWnd_Expand::STATIC_ResetMiniMapSize(int CurrentWidth, int CurrentHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.ResetMiniMapSize");

	UMinimapWnd_Expand_ResetMiniMapSize_Params params;
	params.CurrentWidth = CurrentWidth;
	params.CurrentHeight = CurrentHeight;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.CheckResolution
// (Defined, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_CheckResolution()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.CheckResolution");

	UMinimapWnd_Expand_CheckResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.SetCurrentLocation
// (Iterator, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_SetCurrentLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.SetCurrentLocation");

	UMinimapWnd_Expand_SetCurrentLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.SetSSQTypeText
// (Final, Defined, Iterator, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_SetSSQTypeText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.SetSSQTypeText");

	UMinimapWnd_Expand_SetSSQTypeText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.HandleResolutionChanged
// (Final, Defined, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 aParam                         (Parm, NeedCtorLink)

void UMinimapWnd_Expand::STATIC_HandleResolutionChanged(const struct FString& aParam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.HandleResolutionChanged");

	UMinimapWnd_Expand_HandleResolutionChanged_Params params;
	params.aParam = aParam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMinimapWnd_Expand::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnShow");

	UMinimapWnd_Expand_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMinimapWnd_Expand::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnEvent");

	UMinimapWnd_Expand_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.FilterDungeonMapExpand
// (Defined, PreOperator, Net, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UMinimapWnd_Expand::STATIC_FilterDungeonMapExpand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.FilterDungeonMapExpand");

	UMinimapWnd_Expand_FilterDungeonMapExpand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnLoad
// (Final, Net, Operator, Static, Const)

void UMinimapWnd_Expand::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnLoad");

	UMinimapWnd_Expand_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MinimapWnd_Expand.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMinimapWnd_Expand::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MinimapWnd_Expand.OnRegisterEvent");

	UMinimapWnd_Expand_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GametipWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGametipWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GametipWnd.OnShow");

	UGametipWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GametipWnd.LoadGameTipData
// (Final, Iterator, Latent, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UGametipWnd::STATIC_LoadGameTipData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GametipWnd.LoadGameTipData");

	UGametipWnd_LoadGameTipData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GametipWnd.OnEventWithStr
// (Iterator, Latent, Singular, NetReliable, Native, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGametipWnd::STATIC_OnEventWithStr(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GametipWnd.OnEventWithStr");

	UGametipWnd_OnEventWithStr_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GametipWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UGametipWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GametipWnd.OnLoad");

	UGametipWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GametipWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UGametipWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GametipWnd.OnRegisterEvent");

	UGametipWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.CheckButtonAlive
// (Defined, Iterator, Latent, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWaitListWnd::STATIC_CheckButtonAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.CheckButtonAlive");

	UPartyMatchWaitListWnd_CheckButtonAlive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 a_ListCtrlName                 (Parm, NeedCtorLink)

void UPartyMatchWaitListWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& a_ListCtrlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnDBClickListCtrlRecord");

	UPartyMatchWaitListWnd_OnDBClickListCtrlRecord_Params params;
	params.a_ListCtrlName = a_ListCtrlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnCloseButtonClick
// (Final, Iterator, Latent, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWaitListWnd::STATIC_OnCloseButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnCloseButtonClick");

	UPartyMatchWaitListWnd_OnCloseButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnInviteButtonClick
// (Final, Defined, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchWaitListWnd::STATIC_OnInviteButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnInviteButtonClick");

	UPartyMatchWaitListWnd_OnInviteButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnWhisperButtonClick
// (Iterator, Latent, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWaitListWnd::STATIC_OnWhisperButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnWhisperButtonClick");

	UPartyMatchWaitListWnd_OnWhisperButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnPrevbuttonClick
// (Final, Defined, Latent, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWaitListWnd::STATIC_OnPrevbuttonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnPrevbuttonClick");

	UPartyMatchWaitListWnd_OnPrevbuttonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnNextbuttonClick
// (Final, Latent, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchWaitListWnd::STATIC_OnNextbuttonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnNextbuttonClick");

	UPartyMatchWaitListWnd_OnNextbuttonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnRefreshButtonClick
// (Final, Defined, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchWaitListWnd::STATIC_OnRefreshButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnRefreshButtonClick");

	UPartyMatchWaitListWnd_OnRefreshButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_strButtonName                (Parm, NeedCtorLink)

void UPartyMatchWaitListWnd::STATIC_OnClickButton(const struct FString& a_strButtonName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnClickButton");

	UPartyMatchWaitListWnd_OnClickButton_Params params;
	params.a_strButtonName = a_strButtonName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.HandlePartyMatchWaitList
// (Final, Defined, Iterator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchWaitListWnd::STATIC_HandlePartyMatchWaitList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.HandlePartyMatchWaitList");

	UPartyMatchWaitListWnd_HandlePartyMatchWaitList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.HandlePartyMatchWaitListStart
// (Defined, Iterator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchWaitListWnd::STATIC_HandlePartyMatchWaitListStart(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.HandlePartyMatchWaitListStart");

	UPartyMatchWaitListWnd_HandlePartyMatchWaitListStart_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.HandlePartyMatchRoomStart
// (PreOperator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchWaitListWnd::STATIC_HandlePartyMatchRoomStart(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.HandlePartyMatchRoomStart");

	UPartyMatchWaitListWnd_HandlePartyMatchRoomStart_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchWaitListWnd::STATIC_OnEvent(int a_EventID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnEvent");

	UPartyMatchWaitListWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchWaitListWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnShow");

	UPartyMatchWaitListWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchWaitListWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.InitializeCOD");

	UPartyMatchWaitListWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UPartyMatchWaitListWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.Initialize");

	UPartyMatchWaitListWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPartyMatchWaitListWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnLoad");

	UPartyMatchWaitListWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchWaitListWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchWaitListWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchWaitListWnd.OnRegisterEvent");

	UPartyMatchWaitListWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.UpdateTimerCount
// (Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockEnterWnd::STATIC_UpdateTimerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.UpdateTimerCount");

	UBlockEnterWnd_UpdateTimerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.HandleDialogCancel
// (Final, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockEnterWnd::STATIC_HandleDialogCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.HandleDialogCancel");

	UBlockEnterWnd_HandleDialogCancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockEnterWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.HandleDialogOK");

	UBlockEnterWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.HandleStartVote
// (Final, Defined, Iterator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UBlockEnterWnd::STATIC_HandleStartVote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.HandleStartVote");

	UBlockEnterWnd_HandleStartVote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UBlockEnterWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.OnTimer");

	UBlockEnterWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 ButtonID                       (Parm, NeedCtorLink)

void UBlockEnterWnd::STATIC_OnClickButton(const struct FString& ButtonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.OnClickButton");

	UBlockEnterWnd_OnClickButton_Params params;
	params.ButtonID = ButtonID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.OnLButtonUp
// (Final, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// class UWindowHandle*           WindowHandle                   (Parm)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UBlockEnterWnd::STATIC_OnLButtonUp(class UWindowHandle* WindowHandle, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.OnLButtonUp");

	UBlockEnterWnd_OnLButtonUp_Params params;
	params.WindowHandle = WindowHandle;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.HandleBlockRemainTime
// (Latent, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockEnterWnd::STATIC_HandleBlockRemainTime(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.HandleBlockRemainTime");

	UBlockEnterWnd_HandleBlockRemainTime_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.HandleBlockListClose
// (Final, Latent, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UBlockEnterWnd::STATIC_HandleBlockListClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.HandleBlockListClose");

	UBlockEnterWnd_HandleBlockListClose_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.HandleBlockListRemove
// (Latent, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockEnterWnd::STATIC_HandleBlockListRemove(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.HandleBlockListRemove");

	UBlockEnterWnd_HandleBlockListRemove_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.HandleBlockListAdd
// (Final, Latent, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockEnterWnd::STATIC_HandleBlockListAdd(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.HandleBlockListAdd");

	UBlockEnterWnd_HandleBlockListAdd_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.HandleBlockListStart
// (Defined, Latent, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockEnterWnd::STATIC_HandleBlockListStart(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.HandleBlockListStart");

	UBlockEnterWnd_HandleBlockListStart_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.ResetUI
// (Final, Defined, Iterator, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockEnterWnd::STATIC_ResetUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.ResetUI");

	UBlockEnterWnd_ResetUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UBlockEnterWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.OnEvent");

	UBlockEnterWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockEnterWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.InitializeCOD");

	UBlockEnterWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UBlockEnterWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.Initialize");

	UBlockEnterWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBlockEnterWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.OnHide");

	UBlockEnterWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBlockEnterWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.OnShow");

	UBlockEnterWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBlockEnterWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.OnLoad");

	UBlockEnterWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockEnterWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBlockEnterWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockEnterWnd.OnRegisterEvent");

	UBlockEnterWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.CheckButtonAlive
// (Defined, Iterator, Latent, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchOutWaitListWnd::STATIC_CheckButtonAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.CheckButtonAlive");

	UPartyMatchOutWaitListWnd_CheckButtonAlive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.MakeRoomFirst
// (Final, Defined, Iterator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            TargetLevel                    (Parm)
// struct FString                 InviteTargetName               (Parm, NeedCtorLink)

void UPartyMatchOutWaitListWnd::STATIC_MakeRoomFirst(int TargetLevel, const struct FString& InviteTargetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.MakeRoomFirst");

	UPartyMatchOutWaitListWnd_MakeRoomFirst_Params params;
	params.TargetLevel = TargetLevel;
	params.InviteTargetName = InviteTargetName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 a_ListCtrlName                 (Parm, NeedCtorLink)

void UPartyMatchOutWaitListWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& a_ListCtrlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnDBClickListCtrlRecord");

	UPartyMatchOutWaitListWnd_OnDBClickListCtrlRecord_Params params;
	params.a_ListCtrlName = a_ListCtrlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnCloseButtonClick
// (Final, Iterator, Latent, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchOutWaitListWnd::STATIC_OnCloseButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnCloseButtonClick");

	UPartyMatchOutWaitListWnd_OnCloseButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnInviteButtonClick
// (Final, Defined, Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchOutWaitListWnd::STATIC_OnInviteButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnInviteButtonClick");

	UPartyMatchOutWaitListWnd_OnInviteButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnWhisperButtonClick
// (Iterator, Latent, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchOutWaitListWnd::STATIC_OnWhisperButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnWhisperButtonClick");

	UPartyMatchOutWaitListWnd_OnWhisperButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnSearchBtnClick
// (Latent, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UPartyMatchOutWaitListWnd::STATIC_OnSearchBtnClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnSearchBtnClick");

	UPartyMatchOutWaitListWnd_OnSearchBtnClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnPrevbuttonClick
// (Final, Defined, Latent, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchOutWaitListWnd::STATIC_OnPrevbuttonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnPrevbuttonClick");

	UPartyMatchOutWaitListWnd_OnPrevbuttonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnNextbuttonClick
// (Final, Latent, Net, Operator, Static, HasOptionalParms, Const)

void UPartyMatchOutWaitListWnd::STATIC_OnNextbuttonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnNextbuttonClick");

	UPartyMatchOutWaitListWnd_OnNextbuttonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnRefreshButtonClick
// (Final, Defined, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPartyMatchOutWaitListWnd::STATIC_OnRefreshButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnRefreshButtonClick");

	UPartyMatchOutWaitListWnd_OnRefreshButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_strButtonName                (Parm, NeedCtorLink)

void UPartyMatchOutWaitListWnd::STATIC_OnClickButton(const struct FString& a_strButtonName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnClickButton");

	UPartyMatchOutWaitListWnd_OnClickButton_Params params;
	params.a_strButtonName = a_strButtonName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.HandlePartyMatchWaitList
// (Final, Defined, Iterator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchOutWaitListWnd::STATIC_HandlePartyMatchWaitList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.HandlePartyMatchWaitList");

	UPartyMatchOutWaitListWnd_HandlePartyMatchWaitList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.HandlePartyMatchWaitListStart
// (Defined, Iterator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchOutWaitListWnd::STATIC_HandlePartyMatchWaitListStart(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.HandlePartyMatchWaitListStart");

	UPartyMatchOutWaitListWnd_HandlePartyMatchWaitListStart_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPartyMatchOutWaitListWnd::STATIC_OnEvent(int a_EventID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnEvent");

	UPartyMatchOutWaitListWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchOutWaitListWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnShow");

	UPartyMatchOutWaitListWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPartyMatchOutWaitListWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnLoad");

	UPartyMatchOutWaitListWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyMatchOutWaitListWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPartyMatchOutWaitListWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyMatchOutWaitListWnd.OnRegisterEvent");

	UPartyMatchOutWaitListWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.ComputeWidth
// (Defined, Iterator, Latent, NetReliable, Operator, Static, HasOptionalParms, Const)

void UAuctionBtnWnd::STATIC_ComputeWidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.ComputeWidth");

	UAuctionBtnWnd_ComputeWidth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.DeleteAuctionTooltip
// (PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAuctionBtnWnd::STATIC_DeleteAuctionTooltip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.DeleteAuctionTooltip");

	UAuctionBtnWnd_DeleteAuctionTooltip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.SetAuctionTooltip
// (Final, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAuctionBtnWnd::STATIC_SetAuctionTooltip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.SetAuctionTooltip");

	UAuctionBtnWnd_SetAuctionTooltip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.HandleAuctionSystemMessage
// (Defined, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            SystemMsgIndex                 (Parm)

void UAuctionBtnWnd::STATIC_HandleAuctionSystemMessage(int SystemMsgIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.HandleAuctionSystemMessage");

	UAuctionBtnWnd_HandleAuctionSystemMessage_Params params;
	params.SystemMsgIndex = SystemMsgIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UAuctionBtnWnd::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.OnExitState");

	UAuctionBtnWnd_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UAuctionBtnWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.OnEvent");

	UAuctionBtnWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UAuctionBtnWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.Clear");

	UAuctionBtnWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UAuctionBtnWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.Load");

	UAuctionBtnWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UAuctionBtnWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.Initialize");

	UAuctionBtnWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UAuctionBtnWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.OnLoad");

	UAuctionBtnWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AuctionBtnWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UAuctionBtnWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AuctionBtnWnd.OnRegisterEvent");

	UAuctionBtnWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.OnClickBookmark
// (Final, Defined, Latent, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)

void UBoardWnd::STATIC_OnClickBookmark()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.OnClickBookmark");

	UBoardWnd_OnClickBookmark_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.ShowBBSTab
// (Final, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)

void UBoardWnd::STATIC_ShowBBSTab(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.ShowBBSTab");

	UBoardWnd_ShowBBSTab_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.HandleShowBoardPacket
// (Final, Defined, Iterator, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBoardWnd::STATIC_HandleShowBoardPacket(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.HandleShowBoardPacket");

	UBoardWnd_HandleShowBoardPacket_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.HandleShowBBS
// (PreOperator, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBoardWnd::STATIC_HandleShowBBS(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.HandleShowBBS");

	UBoardWnd_HandleShowBBS_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UBoardWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.Clear");

	UBoardWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UBoardWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.OnClickButton");

	UBoardWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UBoardWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.OnEvent");

	UBoardWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBoardWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.OnHide");

	UBoardWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBoardWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.OnShow");

	UBoardWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBoardWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.OnLoad");

	UBoardWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BoardWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBoardWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BoardWnd.OnRegisterEvent");

	UBoardWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.ClearList
// (Final, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGMFindTreeWnd::STATIC_ClearList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.ClearList");

	UGMFindTreeWnd_ClearList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.GetSelectedListCtrlItem
// (Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FLVDataRecord           Record                         (Parm, OutParm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UGMFindTreeWnd::STATIC_GetSelectedListCtrlItem(struct FLVDataRecord* Record)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.GetSelectedListCtrlItem");

	UGMFindTreeWnd_GetSelectedListCtrlItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Record != nullptr)
		*Record = params.Record;

	return params.ReturnValue;
}


// Function Interface.GMFindTreeWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ListCtrlID                     (Parm, NeedCtorLink)

void UGMFindTreeWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& ListCtrlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.OnDBClickListCtrlRecord");

	UGMFindTreeWnd_OnDBClickListCtrlRecord_Params params;
	params.ListCtrlID = ListCtrlID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.FindAllItem
// (PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMFindTreeWnd::STATIC_FindAllItem(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.FindAllItem");

	UGMFindTreeWnd_FindAllItem_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.FindAllNPC
// (Final, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMFindTreeWnd::STATIC_FindAllNPC(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.FindAllNPC");

	UGMFindTreeWnd_FindAllNPC_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.FindAllSkill
// (Defined, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMFindTreeWnd::STATIC_FindAllSkill(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.FindAllSkill");

	UGMFindTreeWnd_FindAllSkill_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.ShowItemList
// (Final, Defined, Iterator, PreOperator, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMFindTreeWnd::STATIC_ShowItemList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.ShowItemList");

	UGMFindTreeWnd_ShowItemList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.ShowNPCList
// (Final, Defined, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMFindTreeWnd::STATIC_ShowNPCList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.ShowNPCList");

	UGMFindTreeWnd_ShowNPCList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.ShowSkillList
// (Iterator, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMFindTreeWnd::STATIC_ShowSkillList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.ShowSkillList");

	UGMFindTreeWnd_ShowSkillList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UGMFindTreeWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.OnClickButton");

	UGMFindTreeWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMFindTreeWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.OnEvent");

	UGMFindTreeWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMFindTreeWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UGMFindTreeWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMFindTreeWnd.OnLoad");

	UGMFindTreeWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UTradeWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.Clear");

	UTradeWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.HandleDialogCancel
// (Final, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTradeWnd::STATIC_HandleDialogCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.HandleDialogCancel");

	UTradeWnd_HandleDialogCancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTradeWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.HandleDialogOK");

	UTradeWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.HandleReceiveStartTrade
// (Defined, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UTradeWnd::STATIC_HandleReceiveStartTrade(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.HandleReceiveStartTrade");

	UTradeWnd_HandleReceiveStartTrade_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.HandleTradeUpdateInventoryItem
// (Final, Defined, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UTradeWnd::STATIC_HandleTradeUpdateInventoryItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.HandleTradeUpdateInventoryItem");

	UTradeWnd_HandleTradeUpdateInventoryItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.HandleTradeOtherOK
// (Iterator, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UTradeWnd::STATIC_HandleTradeOtherOK(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.HandleTradeOtherOK");

	UTradeWnd_HandleTradeOtherOK_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.HandleTradeDone
// (Final, Iterator, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UTradeWnd::STATIC_HandleTradeDone(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.HandleTradeDone");

	UTradeWnd_HandleTradeDone_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.HandleTradeAddItem
// (Defined, Iterator, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UTradeWnd::STATIC_HandleTradeAddItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.HandleTradeAddItem");

	UTradeWnd_HandleTradeAddItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.HandleStartTrade
// (Final, Defined, Iterator, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UTradeWnd::STATIC_HandleStartTrade(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.HandleStartTrade");

	UTradeWnd_HandleStartTrade_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.HandleMoveButton
// (Latent, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)

void UTradeWnd::STATIC_HandleMoveButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.HandleMoveButton");

	UTradeWnd_HandleMoveButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.MoveToMyList
// (Defined, Latent, PreOperator, Singular, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// struct FINT64                  Num                            (Parm)

void UTradeWnd::STATIC_MoveToMyList(int Index, const struct FINT64& Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.MoveToMyList");

	UTradeWnd_MoveToMyList_Params params;
	params.Index = Index;
	params.Num = Num;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UTradeWnd::STATIC_OnDropItem(const struct FString& strID, const struct FItemInfo& Info, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.OnDropItem");

	UTradeWnd_OnDropItem_Params params;
	params.strID = strID;
	params.Info = Info;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.OnDBClickItem
// (Final, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UTradeWnd::STATIC_OnDBClickItem(const struct FString& ControlName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.OnDBClickItem");

	UTradeWnd_OnDBClickItem_Params params;
	params.ControlName = ControlName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)

void UTradeWnd::STATIC_OnClickButton(const struct FString& ControlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.OnClickButton");

	UTradeWnd_OnClickButton_Params params;
	params.ControlName = ControlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            EventID                        (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UTradeWnd::STATIC_OnEvent(int EventID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.OnEvent");

	UTradeWnd_OnEvent_Params params;
	params.EventID = EventID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UTradeWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.OnHide");

	UTradeWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.OnSendPacketWhenHiding
// (Final, Defined, Iterator, PreOperator, Singular, Operator, Static, Const)

void UTradeWnd::STATIC_OnSendPacketWhenHiding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.OnSendPacketWhenHiding");

	UTradeWnd_OnSendPacketWhenHiding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UTradeWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.OnLoad");

	UTradeWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TradeWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UTradeWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TradeWnd.OnRegisterEvent");

	UTradeWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.IsFiltered
// (Defined, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// TEnumAsByte<EChatType>         a_Type                         (Parm)
// int                            a_SnoopIndex                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UGMSnoopWnd::STATIC_IsFiltered(TEnumAsByte<EChatType> a_Type, int a_SnoopIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.IsFiltered");

	UGMSnoopWnd_IsFiltered_Params params;
	params.a_Type = a_Type;
	params.a_SnoopIndex = a_SnoopIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GMSnoopWnd.GetSnoopIndexByID
// (Final, Defined, Iterator, Latent, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_SnoopID                      (Parm)
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UGMSnoopWnd::STATIC_GetSnoopIndexByID(int a_SnoopID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.GetSnoopIndexByID");

	UGMSnoopWnd_GetSnoopIndexByID_Params params;
	params.a_SnoopID = a_SnoopID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.GMSnoopWnd.GetSnoopWnd
// (Iterator, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_SnoopID                      (Parm)
// class UWindowHandle*           a_hSnoopWnd                    (Parm, OutParm)
// class UTextListBoxHandle*      a_hSnoopChatWnd                (Parm, OutParm)
// int                            a_SnoopIndex                   (Parm, OutParm)
// struct FString                 a_CharacterName                (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UGMSnoopWnd::STATIC_GetSnoopWnd(int a_SnoopID, const struct FString& a_CharacterName, class UWindowHandle** a_hSnoopWnd, class UTextListBoxHandle** a_hSnoopChatWnd, int* a_SnoopIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.GetSnoopWnd");

	UGMSnoopWnd_GetSnoopWnd_Params params;
	params.a_SnoopID = a_SnoopID;
	params.a_CharacterName = a_CharacterName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (a_hSnoopWnd != nullptr)
		*a_hSnoopWnd = params.a_hSnoopWnd;
	if (a_hSnoopChatWnd != nullptr)
		*a_hSnoopChatWnd = params.a_hSnoopChatWnd;
	if (a_SnoopIndex != nullptr)
		*a_SnoopIndex = params.a_SnoopIndex;

	return params.ReturnValue;
}


// Function Interface.GMSnoopWnd.ClearSnoop
// (Defined, Iterator, Latent, PreOperator, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            a_SnoopIndex                   (Parm)

void UGMSnoopWnd::STATIC_ClearSnoop(int a_SnoopIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.ClearSnoop");

	UGMSnoopWnd_ClearSnoop_Params params;
	params.a_SnoopIndex = a_SnoopIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.ClearAllSnoop
// (Defined, Iterator, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMSnoopWnd::STATIC_ClearAllSnoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.ClearAllSnoop");

	UGMSnoopWnd_ClearAllSnoop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.HandleGMSnoop
// (Final, Defined, Iterator, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMSnoopWnd::STATIC_HandleGMSnoop(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.HandleGMSnoop");

	UGMSnoopWnd_HandleGMSnoop_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMSnoopWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.OnEvent");

	UGMSnoopWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.OnClickButtonWithHandle
// (Final, Singular, Operator, Static, Const)
// Parameters:
// class UButtonHandle*           a_ButtonHandle                 (Parm)

void UGMSnoopWnd::STATIC_OnClickButtonWithHandle(class UButtonHandle* a_ButtonHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.OnClickButtonWithHandle");

	UGMSnoopWnd_OnClickButtonWithHandle_Params params;
	params.a_ButtonHandle = a_ButtonHandle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMSnoopWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.OnHide");

	UGMSnoopWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMSnoopWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.OnShow");

	UGMSnoopWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.InitHandleCOD
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGMSnoopWnd::STATIC_InitHandleCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.InitHandleCOD");

	UGMSnoopWnd_InitHandleCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGMSnoopWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.InitHandle");

	UGMSnoopWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UGMSnoopWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.OnLoad");

	UGMSnoopWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMSnoopWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UGMSnoopWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMSnoopWnd.OnRegisterEvent");

	UGMSnoopWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndOption.ShowPartyWndOption
// (Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UPartyWndOption::STATIC_ShowPartyWndOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndOption.ShowPartyWndOption");

	UPartyWndOption_ShowPartyWndOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndOption.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UPartyWndOption::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndOption.OnClickButton");

	UPartyWndOption_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndOption.SwapBigandSmall
// (Final, Defined, Latent, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UPartyWndOption::STATIC_SwapBigandSmall()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndOption.SwapBigandSmall");

	UPartyWndOption_SwapBigandSmall_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndOption.OnClickCheckBox
// (Final, Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 CheckBoxID                     (Parm, NeedCtorLink)

void UPartyWndOption::STATIC_OnClickCheckBox(const struct FString& CheckBoxID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndOption.OnClickCheckBox");

	UPartyWndOption_OnClickCheckBox_Params params;
	params.CheckBoxID = CheckBoxID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndOption.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPartyWndOption::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndOption.OnShow");

	UPartyWndOption_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PartyWndOption.OnLoad
// (Final, Net, Operator, Static, Const)

void UPartyWndOption::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PartyWndOption.OnLoad");

	UPartyWndOption_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialBtnWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 btnName                        (Parm, NeedCtorLink)

void USystemTutorialBtnWnd::STATIC_OnClickButton(const struct FString& btnName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialBtnWnd.OnClickButton");

	USystemTutorialBtnWnd_OnClickButton_Params params;
	params.btnName = btnName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialBtnWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PrevStateName                (Parm)

void USystemTutorialBtnWnd::STATIC_OnEnterState(const struct FName& a_PrevStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialBtnWnd.OnEnterState");

	USystemTutorialBtnWnd_OnEnterState_Params params;
	params.a_PrevStateName = a_PrevStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialBtnWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USystemTutorialBtnWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialBtnWnd.OnShow");

	USystemTutorialBtnWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemTutorialBtnWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USystemTutorialBtnWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemTutorialBtnWnd.OnLoad");

	USystemTutorialBtnWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.InitializeUI
// (Final, Defined, Iterator, Latent, PreOperator, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkDrawerWnd::STATIC_InitializeUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.InitializeUI");

	UTeleportBookMarkDrawerWnd_InitializeUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.UpdateIcon
// (Final, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTeleportBookMarkDrawerWnd::STATIC_UpdateIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.UpdateIcon");

	UTeleportBookMarkDrawerWnd_UpdateIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.OnbtnCancelClick
// (Final, Defined, Iterator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTeleportBookMarkDrawerWnd::STATIC_OnbtnCancelClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.OnbtnCancelClick");

	UTeleportBookMarkDrawerWnd_OnbtnCancelClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.OnbtnSaveClick
// (Final, Defined, Latent, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkDrawerWnd::STATIC_OnbtnSaveClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.OnbtnSaveClick");

	UTeleportBookMarkDrawerWnd_OnbtnSaveClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.OnbtnIconNextClick
// (Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkDrawerWnd::STATIC_OnbtnIconNextClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.OnbtnIconNextClick");

	UTeleportBookMarkDrawerWnd_OnbtnIconNextClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.OnbtnIconPrevClick
// (Final, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkDrawerWnd::STATIC_OnbtnIconPrevClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.OnbtnIconPrevClick");

	UTeleportBookMarkDrawerWnd_OnbtnIconPrevClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UTeleportBookMarkDrawerWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.OnClickButton");

	UTeleportBookMarkDrawerWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.UpdateCurrentLocation
// (Defined, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UTeleportBookMarkDrawerWnd::STATIC_UpdateCurrentLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.UpdateCurrentLocation");

	UTeleportBookMarkDrawerWnd_UpdateCurrentLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UTeleportBookMarkDrawerWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.OnShow");

	UTeleportBookMarkDrawerWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.UpdateIconName
// (Latent, PreOperator, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTeleportBookMarkDrawerWnd::STATIC_UpdateIconName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.UpdateIconName");

	UTeleportBookMarkDrawerWnd_UpdateIconName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.OnChangeEditBox
// (Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UTeleportBookMarkDrawerWnd::STATIC_OnChangeEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.OnChangeEditBox");

	UTeleportBookMarkDrawerWnd_OnChangeEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            EventID                        (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UTeleportBookMarkDrawerWnd::STATIC_OnEvent(int EventID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.OnEvent");

	UTeleportBookMarkDrawerWnd_OnEvent_Params params;
	params.EventID = EventID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTeleportBookMarkDrawerWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.Load");

	UTeleportBookMarkDrawerWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UTeleportBookMarkDrawerWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.InitializeCOD");

	UTeleportBookMarkDrawerWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UTeleportBookMarkDrawerWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.Initialize");

	UTeleportBookMarkDrawerWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UTeleportBookMarkDrawerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.OnRegisterEvent");

	UTeleportBookMarkDrawerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TeleportBookMarkDrawerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UTeleportBookMarkDrawerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TeleportBookMarkDrawerWnd.OnLoad");

	UTeleportBookMarkDrawerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MoviePlayerWnd.FullScreenMoviePlayer
// (Defined, Iterator, Latent, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMoviePlayerWnd::STATIC_FullScreenMoviePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MoviePlayerWnd.FullScreenMoviePlayer");

	UMoviePlayerWnd_FullScreenMoviePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MoviePlayerWnd.ResizeMoviePlayer
// (Final, Defined, Iterator, Latent, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMoviePlayerWnd::STATIC_ResizeMoviePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MoviePlayerWnd.ResizeMoviePlayer");

	UMoviePlayerWnd_ResizeMoviePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MoviePlayerWnd.HideMoviePlayer
// (Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMoviePlayerWnd::STATIC_HideMoviePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MoviePlayerWnd.HideMoviePlayer");

	UMoviePlayerWnd_HideMoviePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MoviePlayerWnd.ShowMoviePlayer
// (Final, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMoviePlayerWnd::STATIC_ShowMoviePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MoviePlayerWnd.ShowMoviePlayer");

	UMoviePlayerWnd_ShowMoviePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MoviePlayerWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UMoviePlayerWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MoviePlayerWnd.OnEvent");

	UMoviePlayerWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MoviePlayerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMoviePlayerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MoviePlayerWnd.OnLoad");

	UMoviePlayerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MoviePlayerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMoviePlayerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MoviePlayerWnd.OnRegisterEvent");

	UMoviePlayerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadBuffWnd.HandleBuffInfo
// (Defined, Iterator, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UOlympiadBuffWnd::STATIC_HandleBuffInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadBuffWnd.HandleBuffInfo");

	UOlympiadBuffWnd_HandleBuffInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadBuffWnd.HandleBuffShow
// (Final, Defined, Iterator, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UOlympiadBuffWnd::STATIC_HandleBuffShow(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadBuffWnd.HandleBuffShow");

	UOlympiadBuffWnd_HandleBuffShow_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadBuffWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UOlympiadBuffWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadBuffWnd.Clear");

	UOlympiadBuffWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadBuffWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UOlympiadBuffWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadBuffWnd.OnEvent");

	UOlympiadBuffWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadBuffWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UOlympiadBuffWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadBuffWnd.OnEnterState");

	UOlympiadBuffWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadBuffWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UOlympiadBuffWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadBuffWnd.OnLoad");

	UOlympiadBuffWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadBuffWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UOlympiadBuffWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadBuffWnd.OnRegisterEvent");

	UOlympiadBuffWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadBuffWnd.SetPlayerNum
// (Final, Defined, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            PlayerNum                      (Parm)

void UOlympiadBuffWnd::STATIC_SetPlayerNum(int PlayerNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadBuffWnd.SetPlayerNum");

	UOlympiadBuffWnd_SetPlayerNum_Params params;
	params.PlayerNum = PlayerNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.HandleOKButton
// (Final, Defined, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDeliverWnd::STATIC_HandleOKButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.HandleOKButton");

	UDeliverWnd_HandleOKButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.AdjustPrice
// (Final, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDeliverWnd::STATIC_AdjustPrice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.AdjustPrice");

	UDeliverWnd_AdjustPrice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDeliverWnd::STATIC_HandleAddItem(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.HandleAddItem");

	UDeliverWnd_HandleAddItem_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.HandleOpenWindow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UDeliverWnd::STATIC_HandleOpenWindow(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.HandleOpenWindow");

	UDeliverWnd_HandleOpenWindow_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.ItemBottomToTop
// (Final, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 cID                            (Parm)
// struct FINT64                  Num                            (Parm)

void UDeliverWnd::STATIC_ItemBottomToTop(const struct FItemID& cID, const struct FINT64& Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.ItemBottomToTop");

	UDeliverWnd_ItemBottomToTop_Params params;
	params.cID = cID;
	params.Num = Num;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.ItemTopToBottom
// (Final, Defined, Iterator, Latent, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemID                 cID                            (Parm)
// struct FINT64                  Num                            (Parm)

void UDeliverWnd::STATIC_ItemTopToBottom(const struct FItemID& cID, const struct FINT64& Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.ItemTopToBottom");

	UDeliverWnd_ItemTopToBottom_Params params;
	params.cID = cID;
	params.Num = Num;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.HandleDialogOK
// (Latent, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UDeliverWnd::STATIC_HandleDialogOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.HandleDialogOK");

	UDeliverWnd_HandleDialogOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.MoveItemBottomToTop
// (Final, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// struct FINT64                  AllItemCount                   (Parm)

void UDeliverWnd::STATIC_MoveItemBottomToTop(int Index, const struct FINT64& AllItemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.MoveItemBottomToTop");

	UDeliverWnd_MoveItemBottomToTop_Params params;
	params.Index = Index;
	params.AllItemCount = AllItemCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.MoveItemTopToBottom
// (Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// struct FINT64                  AllItemCount                   (Parm)

void UDeliverWnd::STATIC_MoveItemTopToBottom(int Index, const struct FINT64& AllItemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.MoveItemTopToBottom");

	UDeliverWnd_MoveItemTopToBottom_Params params;
	params.Index = Index;
	params.AllItemCount = AllItemCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               Info                           (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UDeliverWnd::STATIC_OnDropItem(const struct FString& strID, const struct FItemInfo& Info, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.OnDropItem");

	UDeliverWnd_OnDropItem_Params params;
	params.strID = strID;
	params.Info = Info;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UDeliverWnd::STATIC_OnClickItem(const struct FString& ControlName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.OnClickItem");

	UDeliverWnd_OnClickItem_Params params;
	params.ControlName = ControlName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.OnDBClickItem
// (Final, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UDeliverWnd::STATIC_OnDBClickItem(const struct FString& ControlName, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.OnDBClickItem");

	UDeliverWnd_OnDBClickItem_Params params;
	params.ControlName = ControlName;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)

void UDeliverWnd::STATIC_OnClickButton(const struct FString& ControlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.OnClickButton");

	UDeliverWnd_OnClickButton_Params params;
	params.ControlName = ControlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UDeliverWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.OnEvent");

	UDeliverWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UDeliverWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.Clear");

	UDeliverWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UDeliverWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.OnLoad");

	UDeliverWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DeliverWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UDeliverWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DeliverWnd.OnRegisterEvent");

	UDeliverWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PCCafeEventWnd.HandleToggleShowPCCafeEventWnd
// (Final, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UPCCafeEventWnd::STATIC_HandleToggleShowPCCafeEventWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.HandleToggleShowPCCafeEventWnd");

	UPCCafeEventWnd_HandleToggleShowPCCafeEventWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PCCafeEventWnd.SetTooltip
// (Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Text                           (Parm, NeedCtorLink)
// struct FCustomTooltip          ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FCustomTooltip UPCCafeEventWnd::STATIC_SetTooltip(const struct FString& Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.SetTooltip");

	UPCCafeEventWnd_SetTooltip_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PCCafeEventWnd.GetHelpButtonTooltipText
// (Defined, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UPCCafeEventWnd::STATIC_GetHelpButtonTooltipText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.GetHelpButtonTooltipText");

	UPCCafeEventWnd_GetHelpButtonTooltipText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PCCafeEventWnd.Refresh
// (Iterator, Latent, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            nShow                          (Parm)

void UPCCafeEventWnd::STATIC_Refresh(int nShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.Refresh");

	UPCCafeEventWnd_Refresh_Params params;
	params.nShow = nShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PCCafeEventWnd.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UPCCafeEventWnd::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.OnExitState");

	UPCCafeEventWnd_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PCCafeEventWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UPCCafeEventWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.OnEnterState");

	UPCCafeEventWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PCCafeEventWnd.IsPCCafeEventOpened
// (Iterator, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UPCCafeEventWnd::STATIC_IsPCCafeEventOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.IsPCCafeEventOpened");

	UPCCafeEventWnd_IsPCCafeEventOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.PCCafeEventWnd.HandlePCCafePointInfo
// (Final, Iterator, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UPCCafeEventWnd::STATIC_HandlePCCafePointInfo(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.HandlePCCafePointInfo");

	UPCCafeEventWnd_HandlePCCafePointInfo_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PCCafeEventWnd.OnClickHelpButton
// (Defined, Iterator, PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UPCCafeEventWnd::STATIC_OnClickHelpButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.OnClickHelpButton");

	UPCCafeEventWnd_OnClickHelpButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PCCafeEventWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UPCCafeEventWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.OnEvent");

	UPCCafeEventWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PCCafeEventWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_ButtonID                     (Parm, NeedCtorLink)

void UPCCafeEventWnd::STATIC_OnClickButton(const struct FString& a_ButtonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.OnClickButton");

	UPCCafeEventWnd_OnClickButton_Params params;
	params.a_ButtonID = a_ButtonID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PCCafeEventWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPCCafeEventWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.OnLoad");

	UPCCafeEventWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PCCafeEventWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPCCafeEventWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PCCafeEventWnd.OnRegisterEvent");

	UPCCafeEventWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.HandleHide
// (Defined, Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftCounter::STATIC_HandleHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.HandleHide");

	UCleftCounter_HandleHide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.ResetCurrentStat
// (Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftCounter::STATIC_ResetCurrentStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.ResetCurrentStat");

	UCleftCounter_ResetCurrentStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.TimerReset
// (Final, Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            RemainTime                     (Parm)

void UCleftCounter::STATIC_TimerReset(int RemainTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.TimerReset");

	UCleftCounter_TimerReset_Params params;
	params.RemainTime = RemainTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.UpdateTimerCount
// (Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftCounter::STATIC_UpdateTimerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.UpdateTimerCount");

	UCleftCounter_UpdateTimerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.DrawTimerCount
// (Final, Defined, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftCounter::STATIC_DrawTimerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.DrawTimerCount");

	UCleftCounter_DrawTimerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UCleftCounter::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.OnTimer");

	UCleftCounter_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UCleftCounter::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.OnClickButton");

	UCleftCounter_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.HandleCleftStatePlayer
// (Iterator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftCounter::STATIC_HandleCleftStatePlayer(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.HandleCleftStatePlayer");

	UCleftCounter_HandleCleftStatePlayer_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.HandleCleftStateTeam
// (Final, Iterator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UCleftCounter::STATIC_HandleCleftStateTeam(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.HandleCleftStateTeam");

	UCleftCounter_HandleCleftStateTeam_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UCleftCounter::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.OnShow");

	UCleftCounter_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UCleftCounter::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.OnHide");

	UCleftCounter_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UCleftCounter::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.OnEvent");

	UCleftCounter_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftCounter::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.InitializeCOD");

	UCleftCounter_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UCleftCounter::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.Initialize");

	UCleftCounter_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.OnLoad
// (Final, Net, Operator, Static, Const)

void UCleftCounter::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.OnLoad");

	UCleftCounter_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCounter.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UCleftCounter::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCounter.OnRegisterEvent");

	UCleftCounter_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchSpecialMsgWnd.HandleEventMatchGMMessage
// (Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchSpecialMsgWnd::STATIC_HandleEventMatchGMMessage(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchSpecialMsgWnd.HandleEventMatchGMMessage");

	UEventMatchSpecialMsgWnd_HandleEventMatchGMMessage_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchSpecialMsgWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_TimerID                      (Parm)

void UEventMatchSpecialMsgWnd::STATIC_OnTimer(int a_TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchSpecialMsgWnd.OnTimer");

	UEventMatchSpecialMsgWnd_OnTimer_Params params;
	params.a_TimerID = a_TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchSpecialMsgWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchSpecialMsgWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchSpecialMsgWnd.OnEvent");

	UEventMatchSpecialMsgWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchSpecialMsgWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UEventMatchSpecialMsgWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchSpecialMsgWnd.OnLoad");

	UEventMatchSpecialMsgWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchSpecialMsgWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UEventMatchSpecialMsgWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchSpecialMsgWnd.OnRegisterEvent");

	UEventMatchSpecialMsgWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointCounterWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UKillpointCounterWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointCounterWnd.OnHide");

	UKillpointCounterWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointCounterWnd.TimerReset
// (Final, Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UKillpointCounterWnd::STATIC_TimerReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointCounterWnd.TimerReset");

	UKillpointCounterWnd_TimerReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointCounterWnd.UpdateTimerCount
// (Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UKillpointCounterWnd::STATIC_UpdateTimerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointCounterWnd.UpdateTimerCount");

	UKillpointCounterWnd_UpdateTimerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointCounterWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UKillpointCounterWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointCounterWnd.OnTimer");

	UKillpointCounterWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointCounterWnd.LaunchTimer
// (Latent, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UKillpointCounterWnd::STATIC_LaunchTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointCounterWnd.LaunchTimer");

	UKillpointCounterWnd_LaunchTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointCounterWnd.UpdateMyKillPoint
// (Final, Iterator, PreOperator, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UKillpointCounterWnd::STATIC_UpdateMyKillPoint(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointCounterWnd.UpdateMyKillPoint");

	UKillpointCounterWnd_UpdateMyKillPoint_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointCounterWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UKillpointCounterWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointCounterWnd.OnEvent");

	UKillpointCounterWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointCounterWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UKillpointCounterWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointCounterWnd.OnLoad");

	UKillpointCounterWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointCounterWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UKillpointCounterWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointCounterWnd.OnRegisterEvent");

	UKillpointCounterWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.OnProgressTimeUp
// (Final, Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUnrefineryWnd::STATIC_OnProgressTimeUp(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnProgressTimeUp");

	UUnrefineryWnd_OnProgressTimeUp_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.OnUnRefineDoneResult
// (Defined, Latent, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UUnrefineryWnd::STATIC_OnUnRefineDoneResult(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnUnRefineDoneResult");

	UUnrefineryWnd_OnUnRefineDoneResult_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.OnUnRefineRequest
// (Final, Latent, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnrefineryWnd::STATIC_OnUnRefineRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnUnRefineRequest");

	UUnrefineryWnd_OnUnRefineRequest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.PlayProgressiveBar
// (Defined, Iterator, Latent, Singular, NetReliable, Native, Operator, Static, HasOptionalParms, Const)

void UUnrefineryWnd::STATIC_PlayProgressiveBar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.PlayProgressiveBar");

	UUnrefineryWnd_PlayProgressiveBar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.CheckAdena
// (Latent, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UUnrefineryWnd::STATIC_CheckAdena()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.CheckAdena");

	UUnrefineryWnd_CheckAdena_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UnrefineryWnd.OnClickUnRefineButton
// (Iterator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnrefineryWnd::STATIC_OnClickUnRefineButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnClickUnRefineButton");

	UUnrefineryWnd_OnClickUnRefineButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUnrefineryWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnClickButton");

	UUnrefineryWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.SetAdenaText
// (Final, Iterator, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_AdenaText                    (Parm, NeedCtorLink)

void UUnrefineryWnd::STATIC_SetAdenaText(const struct FString& a_AdenaText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.SetAdenaText");

	UUnrefineryWnd_SetAdenaText_Params params;
	params.a_AdenaText = a_AdenaText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.OnTargetItemValidationResult
// (Iterator, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UUnrefineryWnd::STATIC_OnTargetItemValidationResult(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnTargetItemValidationResult");

	UUnrefineryWnd_OnTargetItemValidationResult_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.ValidateItem
// (Final, Defined, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               a_ItemInfo                     (Parm, NeedCtorLink)

void UUnrefineryWnd::STATIC_ValidateItem(const struct FItemInfo& a_ItemInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.ValidateItem");

	UUnrefineryWnd_ValidateItem_Params params;
	params.a_ItemInfo = a_ItemInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_WindowID                     (Parm, NeedCtorLink)
// struct FItemInfo               a_ItemInfo                     (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UUnrefineryWnd::STATIC_OnDropItem(const struct FString& a_WindowID, const struct FItemInfo& a_ItemInfo, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnDropItem");

	UUnrefineryWnd_OnDropItem_Params params;
	params.a_WindowID = a_WindowID;
	params.a_ItemInfo = a_ItemInfo;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UUnrefineryWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnEvent");

	UUnrefineryWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.ResetReady
// (NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUnrefineryWnd::STATIC_ResetReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.ResetReady");

	UUnrefineryWnd_ResetReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UUnrefineryWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnShow");

	UUnrefineryWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UUnrefineryWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnLoad");

	UUnrefineryWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnrefineryWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UUnrefineryWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnrefineryWnd.OnRegisterEvent");

	UUnrefineryWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadTargetWnd.UpdateStatus
// (Iterator, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UOlympiadTargetWnd::STATIC_UpdateStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadTargetWnd.UpdateStatus");

	UOlympiadTargetWnd_UpdateStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadTargetWnd.HandleUserInfo
// (Final, Iterator, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UOlympiadTargetWnd::STATIC_HandleUserInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadTargetWnd.HandleUserInfo");

	UOlympiadTargetWnd_HandleUserInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadTargetWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UOlympiadTargetWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadTargetWnd.Clear");

	UOlympiadTargetWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadTargetWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UOlympiadTargetWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadTargetWnd.OnEnterState");

	UOlympiadTargetWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadTargetWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UOlympiadTargetWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadTargetWnd.OnEvent");

	UOlympiadTargetWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadTargetWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UOlympiadTargetWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadTargetWnd.OnLoad");

	UOlympiadTargetWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadTargetWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UOlympiadTargetWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadTargetWnd.OnRegisterEvent");

	UOlympiadTargetWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UFlightShipCtrlWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.OnClickButton");

	UFlightShipCtrlWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.OnReserveShortCut
// (Latent, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightShipCtrlWnd::STATIC_OnReserveShortCut(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.OnReserveShortCut");

	UFlightShipCtrlWnd_OnReserveShortCut_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.ExecuteShortcutCommandBySlot
// (Final, Latent, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightShipCtrlWnd::STATIC_ExecuteShortcutCommandBySlot(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.ExecuteShortcutCommandBySlot");

	UFlightShipCtrlWnd_ExecuteShortcutCommandBySlot_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.HandleShortcutClear
// (Defined, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UFlightShipCtrlWnd::STATIC_HandleShortcutClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.HandleShortcutClear");

	UFlightShipCtrlWnd_HandleShortcutClear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.HandleShortcutUpdate
// (Final, Defined, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UFlightShipCtrlWnd::STATIC_HandleShortcutUpdate(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.HandleShortcutUpdate");

	UFlightShipCtrlWnd_HandleShortcutUpdate_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.ShortCutUpdateAll
// (Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UFlightShipCtrlWnd::STATIC_ShortCutUpdateAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.ShortCutUpdateAll");

	UFlightShipCtrlWnd_ShortCutUpdateAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.OnAirShipAltitude
// (Final, Iterator, Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightShipCtrlWnd::STATIC_OnAirShipAltitude(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.OnAirShipAltitude");

	UFlightShipCtrlWnd_OnAirShipAltitude_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.OnAirShipState
// (Iterator, Latent, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightShipCtrlWnd::STATIC_OnAirShipState(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.OnAirShipState");

	UFlightShipCtrlWnd_OnAirShipState_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UFlightShipCtrlWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.OnEvent");

	UFlightShipCtrlWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.updateLockButton
// (Iterator, Latent, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UFlightShipCtrlWnd::STATIC_updateLockButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.updateLockButton");

	UFlightShipCtrlWnd_updateLockButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UFlightShipCtrlWnd::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.OnExitState");

	UFlightShipCtrlWnd_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UFlightShipCtrlWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.OnEnterState");

	UFlightShipCtrlWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UFlightShipCtrlWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.OnLoad");

	UFlightShipCtrlWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.FlightShipCtrlWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UFlightShipCtrlWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.FlightShipCtrlWnd.OnRegisterEvent");

	UFlightShipCtrlWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.ResetCurrentStat
// (Iterator, Latent, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPVPCounter::STATIC_ResetCurrentStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.ResetCurrentStat");

	UPVPCounter_ResetCurrentStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.UpdateCurrentStat
// (Defined, Iterator, Latent, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            BlueCountInt                   (Parm)
// int                            RedCountInt                    (Parm)

void UPVPCounter::STATIC_UpdateCurrentStat(int BlueCountInt, int RedCountInt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.UpdateCurrentStat");

	UPVPCounter_UpdateCurrentStat_Params params;
	params.BlueCountInt = BlueCountInt;
	params.RedCountInt = RedCountInt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.TimerReset
// (Final, Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPVPCounter::STATIC_TimerReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.TimerReset");

	UPVPCounter_TimerReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.ResetWnd
// (Iterator, Latent, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UPVPCounter::STATIC_ResetWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.ResetWnd");

	UPVPCounter_ResetWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.UpdateTimerCount
// (Latent, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPVPCounter::STATIC_UpdateTimerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.UpdateTimerCount");

	UPVPCounter_UpdateTimerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UPVPCounter::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.OnTimer");

	UPVPCounter_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UPVPCounter::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.OnClickButton");

	UPVPCounter_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.HandlePVPMatchUserDie
// (Final, Defined, Iterator, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPVPCounter::STATIC_HandlePVPMatchUserDie(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.HandlePVPMatchUserDie");

	UPVPCounter_HandlePVPMatchUserDie_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.HandlePVPMatchRecordEachUserInfo
// (Defined, Iterator, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPVPCounter::STATIC_HandlePVPMatchRecordEachUserInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.HandlePVPMatchRecordEachUserInfo");

	UPVPCounter_HandlePVPMatchRecordEachUserInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.HandlePVPMatchRecord
// (Defined, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPVPCounter::STATIC_HandlePVPMatchRecord(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.HandlePVPMatchRecord");

	UPVPCounter_HandlePVPMatchRecord_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPVPCounter::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.OnShow");

	UPVPCounter_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPVPCounter::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.OnHide");

	UPVPCounter_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UPVPCounter::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.OnEvent");

	UPVPCounter_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPVPCounter::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.InitializeCOD");

	UPVPCounter_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UPVPCounter::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.Initialize");

	UPVPCounter_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.OnLoad
// (Final, Net, Operator, Static, Const)

void UPVPCounter::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.OnLoad");

	UPVPCounter_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounter.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPVPCounter::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounter.OnRegisterEvent");

	UPVPCounter_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AgeWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UAgeWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AgeWnd.OnEvent");

	UAgeWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AgeWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UAgeWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AgeWnd.OnTimer");

	UAgeWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AgeWnd.startAge
// (PreOperator, Operator, Static, HasOptionalParms, Const)

void UAgeWnd::STATIC_startAge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AgeWnd.startAge");

	UAgeWnd_startAge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AgeWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PrevStateName                (Parm)

void UAgeWnd::STATIC_OnEnterState(const struct FName& a_PrevStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AgeWnd.OnEnterState");

	UAgeWnd_OnEnterState_Params params;
	params.a_PrevStateName = a_PrevStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AgeWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UAgeWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AgeWnd.Load");

	UAgeWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AgeWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UAgeWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AgeWnd.Initialize");

	UAgeWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AgeWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UAgeWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AgeWnd.OnLoad");

	UAgeWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AgeWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UAgeWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AgeWnd.OnRegisterEvent");

	UAgeWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.EditMacro
// (Final, Defined, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)

void UMacroListWnd::STATIC_EditMacro(const struct FItemInfo& infItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.EditMacro");

	UMacroListWnd_EditMacro_Params params;
	params.infItem = infItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.DeleteMacro
// (Iterator, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)

void UMacroListWnd::STATIC_DeleteMacro(const struct FItemInfo& infItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.DeleteMacro");

	UMacroListWnd_DeleteMacro_Params params;
	params.infItem = infItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnDropItem
// (Latent, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// struct FItemInfo               infItem                        (Parm, NeedCtorLink)
// int                            X                              (Parm)
// int                            Y                              (Parm)

void UMacroListWnd::STATIC_OnDropItem(const struct FString& strID, const struct FItemInfo& infItem, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnDropItem");

	UMacroListWnd_OnDropItem_Params params;
	params.strID = strID;
	params.infItem = infItem;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.HandleMacroList
// (Iterator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UMacroListWnd::STATIC_HandleMacroList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.HandleMacroList");

	UMacroListWnd_HandleMacroList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UMacroListWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.Clear");

	UMacroListWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.HandleMacroShowListWnd
// (Defined, Iterator, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMacroListWnd::STATIC_HandleMacroShowListWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.HandleMacroShowListWnd");

	UMacroListWnd_HandleMacroShowListWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.HandleMacroUpdate
// (Final, Defined, Iterator, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMacroListWnd::STATIC_HandleMacroUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.HandleMacroUpdate");

	UMacroListWnd_HandleMacroUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnClickAdd
// (Latent, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMacroListWnd::STATIC_OnClickAdd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnClickAdd");

	UMacroListWnd_OnClickAdd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnClickHelp
// (Final, Defined, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UMacroListWnd::STATIC_OnClickHelp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnClickHelp");

	UMacroListWnd_OnClickHelp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UMacroListWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnClickItem");

	UMacroListWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UMacroListWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnEvent");

	UMacroListWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMacroListWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnClickButton");

	UMacroListWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMacroListWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnHide");

	UMacroListWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMacroListWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnShow");

	UMacroListWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UMacroListWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnEnterState");

	UMacroListWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMacroListWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnLoad");

	UMacroListWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroListWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMacroListWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroListWnd.OnRegisterEvent");

	UMacroListWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.HandleAttributeEnchantResult
// (Final, Defined, Iterator, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UAttributeEnchantWnd::STATIC_HandleAttributeEnchantResult(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.HandleAttributeEnchantResult");

	UAttributeEnchantWnd_HandleAttributeEnchantResult_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.HandleAttributeEnchantItemList
// (Latent, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UAttributeEnchantWnd::STATIC_HandleAttributeEnchantItemList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.HandleAttributeEnchantItemList");

	UAttributeEnchantWnd_HandleAttributeEnchantItemList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.HandleAttributeEnchantHide
// (Final, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAttributeEnchantWnd::STATIC_HandleAttributeEnchantHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.HandleAttributeEnchantHide");

	UAttributeEnchantWnd_HandleAttributeEnchantHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.HandleAttributeEnchantShow
// (Defined, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UAttributeEnchantWnd::STATIC_HandleAttributeEnchantShow(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.HandleAttributeEnchantShow");

	UAttributeEnchantWnd_HandleAttributeEnchantShow_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UAttributeEnchantWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.Clear");

	UAttributeEnchantWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.OnCancelClick
// (Final, Defined, Iterator, Latent, Operator, Static, HasOptionalParms, Const)

void UAttributeEnchantWnd::STATIC_OnCancelClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.OnCancelClick");

	UAttributeEnchantWnd_OnCancelClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.OnOKClick
// (Final, Defined, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAttributeEnchantWnd::STATIC_OnOKClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.OnOKClick");

	UAttributeEnchantWnd_OnOKClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.OnOkClickProgress
// (Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAttributeEnchantWnd::STATIC_OnOkClickProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.OnOkClickProgress");

	UAttributeEnchantWnd_OnOkClickProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UAttributeEnchantWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.OnClickButton");

	UAttributeEnchantWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UAttributeEnchantWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.OnClickItem");

	UAttributeEnchantWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UAttributeEnchantWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.OnEvent");

	UAttributeEnchantWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UAttributeEnchantWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.OnLoad");

	UAttributeEnchantWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeEnchantWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UAttributeEnchantWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeEnchantWnd.OnRegisterEvent");

	UAttributeEnchantWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarOptionWnd.OnClickCheckBox
// (Final, Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 CheckBoxID                     (Parm, NeedCtorLink)

void URadarOptionWnd::STATIC_OnClickCheckBox(const struct FString& CheckBoxID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarOptionWnd.OnClickCheckBox");

	URadarOptionWnd_OnClickCheckBox_Params params;
	params.CheckBoxID = CheckBoxID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarOptionWnd.HandleBtnClose
// (Final, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URadarOptionWnd::STATIC_HandleBtnClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarOptionWnd.HandleBtnClose");

	URadarOptionWnd_HandleBtnClose_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarOptionWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void URadarOptionWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarOptionWnd.OnClickButton");

	URadarOptionWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarOptionWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void URadarOptionWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarOptionWnd.Load");

	URadarOptionWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarOptionWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void URadarOptionWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarOptionWnd.InitializeCOD");

	URadarOptionWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarOptionWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void URadarOptionWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarOptionWnd.Initialize");

	URadarOptionWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RadarOptionWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void URadarOptionWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RadarOptionWnd.OnLoad");

	URadarOptionWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.HandleAttributeRemoveResult
// (Final, Defined, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UAttributeRemoveWnd::STATIC_HandleAttributeRemoveResult(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.HandleAttributeRemoveResult");

	UAttributeRemoveWnd_HandleAttributeRemoveResult_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.HandleAttributeRemoveItemData
// (Iterator, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UAttributeRemoveWnd::STATIC_HandleAttributeRemoveItemData(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.HandleAttributeRemoveItemData");

	UAttributeRemoveWnd_HandleAttributeRemoveItemData_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.HandleAttributeRemoveShow
// (Final, Iterator, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UAttributeRemoveWnd::STATIC_HandleAttributeRemoveShow(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.HandleAttributeRemoveShow");

	UAttributeRemoveWnd_HandleAttributeRemoveShow_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UAttributeRemoveWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.OnClickItem");

	UAttributeRemoveWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.OnbtnCancelClick
// (Final, Defined, Iterator, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UAttributeRemoveWnd::STATIC_OnbtnCancelClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.OnbtnCancelClick");

	UAttributeRemoveWnd_OnbtnCancelClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.OnbtnOKClick
// (Defined, Iterator, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UAttributeRemoveWnd::STATIC_OnbtnOKClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.OnbtnOKClick");

	UAttributeRemoveWnd_OnbtnOKClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UAttributeRemoveWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.OnClickButton");

	UAttributeRemoveWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UAttributeRemoveWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.OnEvent");

	UAttributeRemoveWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UAttributeRemoveWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.Load");

	UAttributeRemoveWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UAttributeRemoveWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.Initialize");

	UAttributeRemoveWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UAttributeRemoveWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.OnLoad");

	UAttributeRemoveWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.AttributeRemoveWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UAttributeRemoveWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.AttributeRemoveWnd.OnRegisterEvent");

	UAttributeRemoveWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.UpdateCurrentStat
// (Defined, Iterator, Latent, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            BlueCountInt                   (Parm)
// int                            RedCountInt                    (Parm)

void UPVPDetailedWnd::STATIC_UpdateCurrentStat(int BlueCountInt, int RedCountInt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.UpdateCurrentStat");

	UPVPDetailedWnd_UpdateCurrentStat_Params params;
	params.BlueCountInt = BlueCountInt;
	params.RedCountInt = RedCountInt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.FinalCount
// (Final, Defined, PreOperator, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            WinnerIndex                    (Parm)
// int                            LoserIndex                     (Parm)

void UPVPDetailedWnd::STATIC_FinalCount(int WinnerIndex, int LoserIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.FinalCount");

	UPVPDetailedWnd_FinalCount_Params params;
	params.WinnerIndex = WinnerIndex;
	params.LoserIndex = LoserIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.ResetUI
// (Final, Defined, Iterator, Latent, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPVPDetailedWnd::STATIC_ResetUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.ResetUI");

	UPVPDetailedWnd_ResetUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UPVPDetailedWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.OnClickButton");

	UPVPDetailedWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.HandlePVPMatchUserDie
// (Final, Defined, Iterator, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPVPDetailedWnd::STATIC_HandlePVPMatchUserDie(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.HandlePVPMatchUserDie");

	UPVPDetailedWnd_HandlePVPMatchUserDie_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.HandlePVPMatchRecordEachUserInfo
// (Defined, Iterator, PreOperator, Singular, Net, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPVPDetailedWnd::STATIC_HandlePVPMatchRecordEachUserInfo(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.HandlePVPMatchRecordEachUserInfo");

	UPVPDetailedWnd_HandlePVPMatchRecordEachUserInfo_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.HandlePVPMatchRecord
// (Defined, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPVPDetailedWnd::STATIC_HandlePVPMatchRecord(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.HandlePVPMatchRecord");

	UPVPDetailedWnd_HandlePVPMatchRecord_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UPVPDetailedWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.OnEvent");

	UPVPDetailedWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPVPDetailedWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.InitializeCOD");

	UPVPDetailedWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UPVPDetailedWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.Initialize");

	UPVPDetailedWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPVPDetailedWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.OnShow");

	UPVPDetailedWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPVPDetailedWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.OnLoad");

	UPVPDetailedWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPDetailedWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPVPDetailedWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPDetailedWnd.OnRegisterEvent");

	UPVPDetailedWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.NPCDialogWnd.HandleLoadHtmlFromString
// (Final, Defined, Iterator, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UNPCDialogWnd::STATIC_HandleLoadHtmlFromString(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.NPCDialogWnd.HandleLoadHtmlFromString");

	UNPCDialogWnd_HandleLoadHtmlFromString_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.NPCDialogWnd.OnHtmlMsgHideWindow
// (Final, Defined, Latent, Operator, Static, Const)
// Parameters:
// class UHtmlHandle*             a_HtmlHandle                   (Parm)

void UNPCDialogWnd::STATIC_OnHtmlMsgHideWindow(class UHtmlHandle* a_HtmlHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.NPCDialogWnd.OnHtmlMsgHideWindow");

	UNPCDialogWnd_OnHtmlMsgHideWindow_Params params;
	params.a_HtmlHandle = a_HtmlHandle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.NPCDialogWnd.ShowNPCDialogWindow
// (Latent, PreOperator, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UNPCDialogWnd::STATIC_ShowNPCDialogWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.NPCDialogWnd.ShowNPCDialogWindow");

	UNPCDialogWnd_ShowNPCDialogWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.NPCDialogWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UNPCDialogWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.NPCDialogWnd.OnEvent");

	UNPCDialogWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.NPCDialogWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UNPCDialogWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.NPCDialogWnd.OnLoad");

	UNPCDialogWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.NPCDialogWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UNPCDialogWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.NPCDialogWnd.OnRegisterEvent");

	UNPCDialogWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoadingAniWnd.CheckResolution
// (Defined, Latent, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void ULoadingAniWnd::STATIC_CheckResolution()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoadingAniWnd.CheckResolution");

	ULoadingAniWnd_CheckResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoadingAniWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void ULoadingAniWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoadingAniWnd.OnEvent");

	ULoadingAniWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoadingAniWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void ULoadingAniWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoadingAniWnd.OnLoad");

	ULoadingAniWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoadingAniWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void ULoadingAniWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoadingAniWnd.OnRegisterEvent");

	ULoadingAniWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TutorialViewerWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UTutorialViewerWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TutorialViewerWnd.OnEvent");

	UTutorialViewerWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TutorialViewerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UTutorialViewerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TutorialViewerWnd.OnLoad");

	UTutorialViewerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TutorialViewerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UTutorialViewerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TutorialViewerWnd.OnRegisterEvent");

	UTutorialViewerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionDetailWnd.HandleCommandChannelPartyMember
// (Iterator, Latent, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionDetailWnd::STATIC_HandleCommandChannelPartyMember(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionDetailWnd.HandleCommandChannelPartyMember");

	UUnionDetailWnd_HandleCommandChannelPartyMember_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionDetailWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUnionDetailWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionDetailWnd.OnDBClickListCtrlRecord");

	UUnionDetailWnd_OnDBClickListCtrlRecord_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionDetailWnd.OnCloseClick
// (Latent, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void UUnionDetailWnd::STATIC_OnCloseClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionDetailWnd.OnCloseClick");

	UUnionDetailWnd_OnCloseClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionDetailWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUnionDetailWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionDetailWnd.OnClickButton");

	UUnionDetailWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionDetailWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UUnionDetailWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionDetailWnd.Clear");

	UUnionDetailWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionDetailWnd.GetMasterID
// (Defined, Iterator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UUnionDetailWnd::STATIC_GetMasterID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionDetailWnd.GetMasterID");

	UUnionDetailWnd_GetMasterID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.UnionDetailWnd.SetMasterInfo
// (Final, Iterator, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 masterName                     (Parm, NeedCtorLink)
// int                            MasterID                       (Parm)

void UUnionDetailWnd::STATIC_SetMasterInfo(const struct FString& masterName, int MasterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionDetailWnd.SetMasterInfo");

	UUnionDetailWnd_SetMasterInfo_Params params;
	params.masterName = masterName;
	params.MasterID = MasterID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionDetailWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UUnionDetailWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionDetailWnd.OnEvent");

	UUnionDetailWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionDetailWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UUnionDetailWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionDetailWnd.OnLoad");

	UUnionDetailWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UnionDetailWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UUnionDetailWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UnionDetailWnd.OnRegisterEvent");

	UUnionDetailWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ZoneTitleWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UZoneTitleWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ZoneTitleWnd.OnTimer");

	UZoneTitleWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ZoneTitleWnd.BeginShowZoneName
// (Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ZoneName                       (Parm, NeedCtorLink)
// struct FString                 SubZoneName1                   (Parm, NeedCtorLink)
// struct FString                 SubZoneName2                   (Parm, NeedCtorLink)

void UZoneTitleWnd::STATIC_BeginShowZoneName(const struct FString& ZoneName, const struct FString& SubZoneName1, const struct FString& SubZoneName2)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ZoneTitleWnd.BeginShowZoneName");

	UZoneTitleWnd_BeginShowZoneName_Params params;
	params.ZoneName = ZoneName;
	params.SubZoneName1 = SubZoneName1;
	params.SubZoneName2 = SubZoneName2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ZoneTitleWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UZoneTitleWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ZoneTitleWnd.OnEvent");

	UZoneTitleWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ZoneTitleWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UZoneTitleWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ZoneTitleWnd.OnLoad");

	UZoneTitleWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ZoneTitleWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UZoneTitleWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ZoneTitleWnd.OnRegisterEvent");

	UZoneTitleWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_PropertyController.HandleEditorUpdateProperty
// (Defined, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUIEditor_PropertyController::STATIC_HandleEditorUpdateProperty(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_PropertyController.HandleEditorUpdateProperty");

	UUIEditor_PropertyController_HandleEditorUpdateProperty_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_PropertyController.HandleTrackerDetach
// (Defined, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_PropertyController::STATIC_HandleTrackerDetach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_PropertyController.HandleTrackerDetach");

	UUIEditor_PropertyController_HandleTrackerDetach_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_PropertyController.HandleTrackerAttach
// (Defined, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUIEditor_PropertyController::STATIC_HandleTrackerAttach(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_PropertyController.HandleTrackerAttach");

	UUIEditor_PropertyController_HandleTrackerAttach_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_PropertyController.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UUIEditor_PropertyController::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_PropertyController.Clear");

	UUIEditor_PropertyController_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_PropertyController.OnPropertyControllerResize
// (Iterator, Latent, Operator, Static, Const)
// Parameters:
// int                            a_Height                       (Parm)

void UUIEditor_PropertyController::STATIC_OnPropertyControllerResize(int a_Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_PropertyController.OnPropertyControllerResize");

	UUIEditor_PropertyController_OnPropertyControllerResize_Params params;
	params.a_Height = a_Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_PropertyController.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UUIEditor_PropertyController::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_PropertyController.OnEvent");

	UUIEditor_PropertyController_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_PropertyController.InitControlItem
// (Defined, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_PropertyController::STATIC_InitControlItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_PropertyController.InitControlItem");

	UUIEditor_PropertyController_InitControlItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_PropertyController.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_PropertyController::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_PropertyController.InitHandle");

	UUIEditor_PropertyController_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_PropertyController.OnLoad
// (Final, Net, Operator, Static, Const)

void UUIEditor_PropertyController::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_PropertyController.OnLoad");

	UUIEditor_PropertyController_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_PropertyController.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UUIEditor_PropertyController::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_PropertyController.OnRegisterEvent");

	UUIEditor_PropertyController_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmBtn.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UBirthdayAlarmBtn::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmBtn.OnExitState");

	UBirthdayAlarmBtn_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmBtn.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UBirthdayAlarmBtn::STATIC_OnEvent(int Event_ID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmBtn.OnEvent");

	UBirthdayAlarmBtn_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmBtn.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UBirthdayAlarmBtn::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmBtn.OnClickButton");

	UBirthdayAlarmBtn_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmBtn.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBirthdayAlarmBtn::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmBtn.InitializeCOD");

	UBirthdayAlarmBtn_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmBtn.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UBirthdayAlarmBtn::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmBtn.Initialize");

	UBirthdayAlarmBtn_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmBtn.OnLoad
// (Final, Net, Operator, Static, Const)

void UBirthdayAlarmBtn::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmBtn.OnLoad");

	UBirthdayAlarmBtn_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmBtn.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBirthdayAlarmBtn::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmBtn.OnRegisterEvent");

	UBirthdayAlarmBtn_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemBtnWnd.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UPremiumItemBtnWnd::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemBtnWnd.OnExitState");

	UPremiumItemBtnWnd_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemBtnWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPremiumItemBtnWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemBtnWnd.OnEvent");

	UPremiumItemBtnWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemBtnWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UPremiumItemBtnWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemBtnWnd.OnClickButton");

	UPremiumItemBtnWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemBtnWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UPremiumItemBtnWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemBtnWnd.Clear");

	UPremiumItemBtnWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemBtnWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UPremiumItemBtnWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemBtnWnd.Initialize");

	UPremiumItemBtnWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemBtnWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPremiumItemBtnWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemBtnWnd.OnLoad");

	UPremiumItemBtnWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemBtnWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPremiumItemBtnWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemBtnWnd.OnRegisterEvent");

	UPremiumItemBtnWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoChangeWnd.ShowErrorDialog
// (Final, Defined, Iterator, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  MinValue                       (Parm)
// struct FINT64                  MaxValue                       (Parm)
// int                            SystemStringIdx                (Parm)

void UManorCropInfoChangeWnd::STATIC_ShowErrorDialog(const struct FINT64& MinValue, const struct FINT64& MaxValue, int SystemStringIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoChangeWnd.ShowErrorDialog");

	UManorCropInfoChangeWnd_ShowErrorDialog_Params params;
	params.MinValue = MinValue;
	params.MaxValue = MaxValue;
	params.SystemStringIdx = SystemStringIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoChangeWnd.OnClickBtnOk
// (Final, Iterator, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UManorCropInfoChangeWnd::STATIC_OnClickBtnOk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoChangeWnd.OnClickBtnOk");

	UManorCropInfoChangeWnd_OnClickBtnOk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoChangeWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UManorCropInfoChangeWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoChangeWnd.OnClickButton");

	UManorCropInfoChangeWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoChangeWnd.HandleShow
// (Final, Defined, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropInfoChangeWnd::STATIC_HandleShow(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoChangeWnd.HandleShow");

	UManorCropInfoChangeWnd_HandleShow_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoChangeWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropInfoChangeWnd::STATIC_OnEvent(int Event_ID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoChangeWnd.OnEvent");

	UManorCropInfoChangeWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoChangeWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UManorCropInfoChangeWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoChangeWnd.OnLoad");

	UManorCropInfoChangeWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropInfoChangeWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UManorCropInfoChangeWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropInfoChangeWnd.OnRegisterEvent");

	UManorCropInfoChangeWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellChangeWnd.GetMyCropCnt
// (Final, Iterator, Latent, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ManorID                        (Parm)
// struct FINT64                  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FINT64 UManorCropSellChangeWnd::STATIC_GetMyCropCnt(int ManorID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.GetMyCropCnt");

	UManorCropSellChangeWnd_GetMyCropCnt_Params params;
	params.ManorID = ManorID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ManorCropSellChangeWnd.GetComboBoxSelectedRecord
// (Defined, Iterator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FLVDataRecord           ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FLVDataRecord UManorCropSellChangeWnd::STATIC_GetComboBoxSelectedRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.GetComboBoxSelectedRecord");

	UManorCropSellChangeWnd_GetComboBoxSelectedRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ManorCropSellChangeWnd.GetComboBoxSelectedManorID
// (Final, Iterator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UManorCropSellChangeWnd::STATIC_GetComboBoxSelectedManorID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.GetComboBoxSelectedManorID");

	UManorCropSellChangeWnd_GetComboBoxSelectedManorID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ManorCropSellChangeWnd.HandleOkBtn
// (PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UManorCropSellChangeWnd::STATIC_HandleOkBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.HandleOkBtn");

	UManorCropSellChangeWnd_HandleOkBtn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellChangeWnd.HandleMaxButton
// (Final, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UManorCropSellChangeWnd::STATIC_HandleMaxButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.HandleMaxButton");

	UManorCropSellChangeWnd_HandleMaxButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellChangeWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UManorCropSellChangeWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.OnClickButton");

	UManorCropSellChangeWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellChangeWnd.HandleAddItem
// (Iterator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropSellChangeWnd::STATIC_HandleAddItem(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.HandleAddItem");

	UManorCropSellChangeWnd_HandleAddItem_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellChangeWnd.HandleSetCropNameAndRewardType
// (Defined, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropSellChangeWnd::STATIC_HandleSetCropNameAndRewardType(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.HandleSetCropNameAndRewardType");

	UManorCropSellChangeWnd_HandleSetCropNameAndRewardType_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellChangeWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UManorCropSellChangeWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.Clear");

	UManorCropSellChangeWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellChangeWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorCropSellChangeWnd::STATIC_OnEvent(int Event_ID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.OnEvent");

	UManorCropSellChangeWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellChangeWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UManorCropSellChangeWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.OnLoad");

	UManorCropSellChangeWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorCropSellChangeWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UManorCropSellChangeWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorCropSellChangeWnd.OnRegisterEvent");

	UManorCropSellChangeWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.ToggleOpenSystemMenuWnd
// (Iterator, Latent, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_ToggleOpenSystemMenuWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.ToggleOpenSystemMenuWnd");

	UMenuWnd_ToggleOpenSystemMenuWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.ToggleOpenMinimapWnd
// (Final, Iterator, Latent, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_ToggleOpenMinimapWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.ToggleOpenMinimapWnd");

	UMenuWnd_ToggleOpenMinimapWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.ToggleOpenInventoryWnd
// (Defined, Iterator, Latent, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_ToggleOpenInventoryWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.ToggleOpenInventoryWnd");

	UMenuWnd_ToggleOpenInventoryWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.ToggleOpenCharInfoWnd
// (Latent, Singular, NetReliable, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_ToggleOpenCharInfoWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.ToggleOpenCharInfoWnd");

	UMenuWnd_ToggleOpenCharInfoWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.ToggleOpenQuestWnd
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_ToggleOpenQuestWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.ToggleOpenQuestWnd");

	UMenuWnd_ToggleOpenQuestWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.ToggleOpenClanWnd
// (NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_ToggleOpenClanWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.ToggleOpenClanWnd");

	UMenuWnd_ToggleOpenClanWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.ToggleOpenActionWnd
// (Final, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_ToggleOpenActionWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.ToggleOpenActionWnd");

	UMenuWnd_ToggleOpenActionWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.ToggleOpenSkillWnd
// (Defined, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_ToggleOpenSkillWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.ToggleOpenSkillWnd");

	UMenuWnd_ToggleOpenSkillWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            TimerID                        (Parm)

void UMenuWnd::STATIC_OnTimer(int TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.OnTimer");

	UMenuWnd_OnTimer_Params params;
	params.TimerID = TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.OnRotate2
// (Final, Defined, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_OnRotate2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.OnRotate2");

	UMenuWnd_OnRotate2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.OnRotate1
// (Defined, PreOperator, Singular, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_OnRotate1()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.OnRotate1");

	UMenuWnd_OnRotate1_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.OnShowProcess
// (Latent, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)

void UMenuWnd::STATIC_OnShowProcess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.OnShowProcess");

	UMenuWnd_OnShowProcess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMenuWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.OnClickButton");

	UMenuWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMenuWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.OnLoad");

	UMenuWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MenuWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMenuWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MenuWnd.OnRegisterEvent");

	UMenuWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoChangeWnd.ShowErrorDialog
// (Final, Defined, Iterator, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FINT64                  MinValue                       (Parm)
// struct FINT64                  MaxValue                       (Parm)
// int                            SystemStringIdx                (Parm)

void UManorSeedInfoChangeWnd::STATIC_ShowErrorDialog(const struct FINT64& MinValue, const struct FINT64& MaxValue, int SystemStringIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoChangeWnd.ShowErrorDialog");

	UManorSeedInfoChangeWnd_ShowErrorDialog_Params params;
	params.MinValue = MinValue;
	params.MaxValue = MaxValue;
	params.SystemStringIdx = SystemStringIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoChangeWnd.OnClickBtnOk
// (Final, Iterator, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UManorSeedInfoChangeWnd::STATIC_OnClickBtnOk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoChangeWnd.OnClickBtnOk");

	UManorSeedInfoChangeWnd_OnClickBtnOk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoChangeWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UManorSeedInfoChangeWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoChangeWnd.OnClickButton");

	UManorSeedInfoChangeWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoChangeWnd.HandleShow
// (Final, Defined, Latent, PreOperator, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorSeedInfoChangeWnd::STATIC_HandleShow(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoChangeWnd.HandleShow");

	UManorSeedInfoChangeWnd_HandleShow_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoChangeWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UManorSeedInfoChangeWnd::STATIC_OnEvent(int Event_ID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoChangeWnd.OnEvent");

	UManorSeedInfoChangeWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoChangeWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UManorSeedInfoChangeWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoChangeWnd.OnLoad");

	UManorSeedInfoChangeWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ManorSeedInfoChangeWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UManorSeedInfoChangeWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ManorSeedInfoChangeWnd.OnRegisterEvent");

	UManorSeedInfoChangeWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.HandleActionListNew
// (Defined, Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UActionWnd::STATIC_HandleActionListNew()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.HandleActionListNew");

	UActionWnd_HandleActionListNew_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.HandleActionList
// (Final, Defined, Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UActionWnd::STATIC_HandleActionList(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.HandleActionList");

	UActionWnd_HandleActionList_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UActionWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.Clear");

	UActionWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.HandleActionListStart
// (Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UActionWnd::STATIC_HandleActionListStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.HandleActionListStart");

	UActionWnd_HandleActionListStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.HandleLanguageChanged
// (Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UActionWnd::STATIC_HandleLanguageChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.HandleLanguageChanged");

	UActionWnd_HandleLanguageChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.HideScrollBar
// (Final, Singular, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UActionWnd::STATIC_HideScrollBar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.HideScrollBar");

	UActionWnd_HideScrollBar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.OnClickItem
// (Defined, Iterator, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)
// int                            Index                          (Parm)

void UActionWnd::STATIC_OnClickItem(const struct FString& strID, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.OnClickItem");

	UActionWnd_OnClickItem_Params params;
	params.strID = strID;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UActionWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.OnEvent");

	UActionWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UActionWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.OnHide");

	UActionWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UActionWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.OnShow");

	UActionWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UActionWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.OnLoad");

	UActionWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ActionWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UActionWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ActionWnd.OnRegisterEvent");

	UActionWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMenuWnd.SetMenuString
// (Final, Singular, Simulated, Operator, Static, HasOptionalParms, Const)

void USystemMenuWnd::STATIC_SetMenuString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMenuWnd.SetMenuString");

	USystemMenuWnd_SetMenuString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMenuWnd.HandleShowOptionWnd
// (PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void USystemMenuWnd::STATIC_HandleShowOptionWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMenuWnd.HandleShowOptionWnd");

	USystemMenuWnd_HandleShowOptionWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMenuWnd.HandleShowPetitionBegin
// (Final, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void USystemMenuWnd::STATIC_HandleShowPetitionBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMenuWnd.HandleShowPetitionBegin");

	USystemMenuWnd_HandleShowPetitionBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMenuWnd.HandleShowMacroListWnd
// (Final, Defined, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void USystemMenuWnd::STATIC_HandleShowMacroListWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMenuWnd.HandleShowMacroListWnd");

	USystemMenuWnd_HandleShowMacroListWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMenuWnd.HandleShowHelpHtmlWnd
// (Final, Iterator, Latent, Operator, Static, HasOptionalParms, Const)

void USystemMenuWnd::STATIC_HandleShowHelpHtmlWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMenuWnd.HandleShowHelpHtmlWnd");

	USystemMenuWnd_HandleShowHelpHtmlWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMenuWnd.HandleShowBoardWnd
// (Iterator, PreOperator, Singular, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void USystemMenuWnd::STATIC_HandleShowBoardWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMenuWnd.HandleShowBoardWnd");

	USystemMenuWnd_HandleShowBoardWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMenuWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USystemMenuWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMenuWnd.OnEvent");

	USystemMenuWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMenuWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void USystemMenuWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMenuWnd.OnClickButton");

	USystemMenuWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMenuWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USystemMenuWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMenuWnd.OnLoad");

	USystemMenuWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMenuWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USystemMenuWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMenuWnd.OnRegisterEvent");

	USystemMenuWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniMapDrawerWnd.OnClickListCtrlRecord
// (Defined, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 Id                             (Parm, NeedCtorLink)

void UMiniMapDrawerWnd::STATIC_OnClickListCtrlRecord(const struct FString& Id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniMapDrawerWnd.OnClickListCtrlRecord");

	UMiniMapDrawerWnd_OnClickListCtrlRecord_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniMapDrawerWnd.InsertQuestTrackList
// (Defined, Singular, Operator, Static, HasOptionalParms, Const)

void UMiniMapDrawerWnd::STATIC_InsertQuestTrackList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniMapDrawerWnd.InsertQuestTrackList");

	UMiniMapDrawerWnd_InsertQuestTrackList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniMapDrawerWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMiniMapDrawerWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniMapDrawerWnd.OnShow");

	UMiniMapDrawerWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniMapDrawerWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMiniMapDrawerWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniMapDrawerWnd.OnClickButton");

	UMiniMapDrawerWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniMapDrawerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMiniMapDrawerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniMapDrawerWnd.OnLoad");

	UMiniMapDrawerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MiniMapDrawerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMiniMapDrawerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MiniMapDrawerWnd.OnRegisterEvent");

	UMiniMapDrawerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMsgWnd.ChangeAnchorEffectButton
// (Final, Latent, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void USystemMsgWnd::STATIC_ChangeAnchorEffectButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMsgWnd.ChangeAnchorEffectButton");

	USystemMsgWnd_ChangeAnchorEffectButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMsgWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USystemMsgWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMsgWnd.OnHide");

	USystemMsgWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMsgWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void USystemMsgWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMsgWnd.OnShow");

	USystemMsgWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMsgWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void USystemMsgWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMsgWnd.OnEvent");

	USystemMsgWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMsgWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USystemMsgWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMsgWnd.OnLoad");

	USystemMsgWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SystemMsgWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USystemMsgWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SystemMsgWnd.OnRegisterEvent");

	USystemMsgWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroInfoWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UMacroInfoWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroInfoWnd.Clear");

	UMacroInfoWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroInfoWnd.OnClickCancel
// (Iterator, Latent, Singular, Operator, Static, HasOptionalParms, Const)

void UMacroInfoWnd::STATIC_OnClickCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroInfoWnd.OnClickCancel");

	UMacroInfoWnd_OnClickCancel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroInfoWnd.OnClickOk
// (Final, Latent, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UMacroInfoWnd::STATIC_OnClickOk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroInfoWnd.OnClickOk");

	UMacroInfoWnd_OnClickOk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroInfoWnd.GetInfoText
// (Defined, Latent, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UMacroInfoWnd::STATIC_GetInfoText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroInfoWnd.GetInfoText");

	UMacroInfoWnd_GetInfoText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.MacroInfoWnd.SetInfoText
// (Final, Defined, Latent, PreOperator, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strInfo                        (Parm, NeedCtorLink)

void UMacroInfoWnd::STATIC_SetInfoText(const struct FString& strInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroInfoWnd.SetInfoText");

	UMacroInfoWnd_SetInfoText_Params params;
	params.strInfo = strInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroInfoWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMacroInfoWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroInfoWnd.OnClickButton");

	UMacroInfoWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroInfoWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMacroInfoWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroInfoWnd.OnHide");

	UMacroInfoWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroInfoWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UMacroInfoWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroInfoWnd.OnShow");

	UMacroInfoWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MacroInfoWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMacroInfoWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MacroInfoWnd.OnLoad");

	UMacroInfoWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoginMenuWnd.ShowOptionWnd
// (Final, Defined, Iterator, Singular, Operator, Static, HasOptionalParms, Const)

void ULoginMenuWnd::STATIC_ShowOptionWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoginMenuWnd.ShowOptionWnd");

	ULoginMenuWnd_ShowOptionWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoginMenuWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void ULoginMenuWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoginMenuWnd.OnClickButton");

	ULoginMenuWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.LoginMenuWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void ULoginMenuWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.LoginMenuWnd.OnLoad");

	ULoginMenuWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ReplayListWnd.OnDelete
// (Final, Defined, Iterator, Latent, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UReplayListWnd::STATIC_OnDelete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayListWnd.OnDelete");

	UReplayListWnd_OnDelete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ReplayListWnd.OnOk
// (Final, Defined, Latent, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UReplayListWnd::STATIC_OnOk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayListWnd.OnOk");

	UReplayListWnd_OnOk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ReplayListWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UReplayListWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayListWnd.OnClickButton");

	UReplayListWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ReplayListWnd.OnDBClickListCtrlRecord
// (Final, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 ListCtrlID                     (Parm, NeedCtorLink)

void UReplayListWnd::STATIC_OnDBClickListCtrlRecord(const struct FString& ListCtrlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayListWnd.OnDBClickListCtrlRecord");

	UReplayListWnd_OnDBClickListCtrlRecord_Params params;
	params.ListCtrlID = ListCtrlID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ReplayListWnd.GetSelectedFileName
// (Final, Latent, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UReplayListWnd::STATIC_GetSelectedFileName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayListWnd.GetSelectedFileName");

	UReplayListWnd_GetSelectedFileName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.ReplayListWnd.AddItem
// (Defined, Iterator, Net, Exec, Native, Event, Static, Const)
// Parameters:
// int                            iNum                           (Parm)
// struct FString                 strFileName                    (Parm, NeedCtorLink)

void UReplayListWnd::STATIC_AddItem(int iNum, const struct FString& strFileName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayListWnd.AddItem");

	UReplayListWnd_AddItem_Params params;
	params.iNum = iNum;
	params.strFileName = strFileName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ReplayListWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UReplayListWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayListWnd.OnEvent");

	UReplayListWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ReplayListWnd.InitReplayList
// (Defined, Latent, PreOperator, NetReliable, Operator, Static, HasOptionalParms, Const)

void UReplayListWnd::STATIC_InitReplayList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayListWnd.InitReplayList");

	UReplayListWnd_InitReplayList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ReplayListWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UReplayListWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayListWnd.OnShow");

	UReplayListWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ReplayListWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UReplayListWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ReplayListWnd.OnLoad");

	UReplayListWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.HideMe
// (Final, Defined, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_HideMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.HideMe");

	URestartMenuWnd_HideMe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.showMe
// (Final, Defined, Simulated, Operator, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_showMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.showMe");

	URestartMenuWnd_showMe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.HandleRestart
// (Final, Iterator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_HandleRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.HandleRestart");

	URestartMenuWnd_HandleRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.HandleRestartMenuHide
// (Defined, Iterator, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_HandleRestartMenuHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.HandleRestartMenuHide");

	URestartMenuWnd_HandleRestartMenuHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.HandleRestartMenuShow
// (Final, Defined, Iterator, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_HandleRestartMenuShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.HandleRestartMenuShow");

	URestartMenuWnd_HandleRestartMenuShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.HandleDie
// (Defined, Latent, PreOperator, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void URestartMenuWnd::STATIC_HandleDie(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.HandleDie");

	URestartMenuWnd_HandleDie_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnFortressClick
// (Latent, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_OnFortressClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnFortressClick");

	URestartMenuWnd_OnFortressClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnOriginalClick
// (Final, Latent, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_OnOriginalClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnOriginalClick");

	URestartMenuWnd_OnOriginalClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnBattleCampClick
// (Defined, Latent, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_OnBattleCampClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnBattleCampClick");

	URestartMenuWnd_OnBattleCampClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnCastleClick
// (Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_OnCastleClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnCastleClick");

	URestartMenuWnd_OnCastleClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnAgitClick
// (Final, Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_OnAgitClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnAgitClick");

	URestartMenuWnd_OnAgitClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnVillageClick
// (Defined, Iterator, Latent, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void URestartMenuWnd::STATIC_OnVillageClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnVillageClick");

	URestartMenuWnd_OnVillageClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void URestartMenuWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnClickButton");

	URestartMenuWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void URestartMenuWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnEvent");

	URestartMenuWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void URestartMenuWnd::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnEnterState");

	URestartMenuWnd_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void URestartMenuWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnHide");

	URestartMenuWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void URestartMenuWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnShow");

	URestartMenuWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void URestartMenuWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnLoad");

	URestartMenuWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.RestartMenuWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void URestartMenuWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.RestartMenuWnd.OnRegisterEvent");

	URestartMenuWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShaderBuild.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UShaderBuild::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShaderBuild.OnEvent");

	UShaderBuild_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShaderBuild.OnTick
// (Net, Operator, Static, Const)

void UShaderBuild::STATIC_OnTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShaderBuild.OnTick");

	UShaderBuild_OnTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShaderBuild.OnEnterState
// (Final, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_PreStateName                 (Parm)

void UShaderBuild::STATIC_OnEnterState(const struct FName& a_PreStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShaderBuild.OnEnterState");

	UShaderBuild_OnEnterState_Params params;
	params.a_PreStateName = a_PreStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShaderBuild.OnLoad
// (Final, Net, Operator, Static, Const)

void UShaderBuild::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShaderBuild.OnLoad");

	UShaderBuild_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ShaderBuild.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UShaderBuild::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ShaderBuild.OnRegisterEvent");

	UShaderBuild_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ProgressBox.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UProgressBox::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ProgressBox.OnEvent");

	UProgressBox_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ProgressBox.SetMessage
// (Defined, PreOperator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 strMessage                     (Parm, NeedCtorLink)

void UProgressBox::STATIC_SetMessage(const struct FString& strMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ProgressBox.SetMessage");

	UProgressBox_SetMessage_Params params;
	params.strMessage = strMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ProgressBox.OnProgressTimeUp
// (Final, Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UProgressBox::STATIC_OnProgressTimeUp(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ProgressBox.OnProgressTimeUp");

	UProgressBox_OnProgressTimeUp_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ProgressBox.ShowDialog
// (Final, Defined, Iterator, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Message                        (Parm, NeedCtorLink)
// struct FString                 Target                         (Parm, NeedCtorLink)
// int                            Time                           (Parm)

void UProgressBox::STATIC_ShowDialog(const struct FString& Message, const struct FString& Target, int Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ProgressBox.ShowDialog");

	UProgressBox_ShowDialog_Params params;
	params.Message = Message;
	params.Target = Target;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ProgressBox.OnbtnCancleClick
// (Defined, Latent, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)

void UProgressBox::STATIC_OnbtnCancleClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ProgressBox.OnbtnCancleClick");

	UProgressBox_OnbtnCancleClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ProgressBox.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UProgressBox::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ProgressBox.OnClickButton");

	UProgressBox_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ProgressBox.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UProgressBox::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ProgressBox.Load");

	UProgressBox_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ProgressBox.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UProgressBox::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ProgressBox.Initialize");

	UProgressBox_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ProgressBox.OnLoad
// (Final, Net, Operator, Static, Const)

void UProgressBox::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ProgressBox.OnLoad");

	UProgressBox_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ProgressBox.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UProgressBox::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ProgressBox.OnRegisterEvent");

	UProgressBox_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UserPetitionWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UUserPetitionWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UserPetitionWnd.Clear");

	UUserPetitionWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UserPetitionWnd.OnClickCancelButton
// (Final, Defined, Latent, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUserPetitionWnd::STATIC_OnClickCancelButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UserPetitionWnd.OnClickCancelButton");

	UUserPetitionWnd_OnClickCancelButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UserPetitionWnd.OnClickOKButton
// (Final, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUserPetitionWnd::STATIC_OnClickOKButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UserPetitionWnd.OnClickOKButton");

	UUserPetitionWnd_OnClickOKButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UserPetitionWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_ControlID                    (Parm, NeedCtorLink)

void UUserPetitionWnd::STATIC_OnClickButton(const struct FString& a_ControlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UserPetitionWnd.OnClickButton");

	UUserPetitionWnd_OnClickButton_Params params;
	params.a_ControlID = a_ControlID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UserPetitionWnd.OnComboBoxItemSelected
// (Defined, Iterator, Latent, Operator, Static, Const)
// Parameters:
// struct FString                 a_ControlID                    (Parm, NeedCtorLink)
// int                            a_SelectedIndex                (Parm)

void UUserPetitionWnd::STATIC_OnComboBoxItemSelected(const struct FString& a_ControlID, int a_SelectedIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UserPetitionWnd.OnComboBoxItemSelected");

	UUserPetitionWnd_OnComboBoxItemSelected_Params params;
	params.a_ControlID = a_ControlID;
	params.a_SelectedIndex = a_SelectedIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UserPetitionWnd.HandleLoadPetitionHtml
// (Final, Defined, Latent, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UUserPetitionWnd::STATIC_HandleLoadPetitionHtml(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UserPetitionWnd.HandleLoadPetitionHtml");

	UUserPetitionWnd_HandleLoadPetitionHtml_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UserPetitionWnd.HandleShowUserPetitionWnd
// (Final, Iterator, PreOperator, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UUserPetitionWnd::STATIC_HandleShowUserPetitionWnd(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UserPetitionWnd.HandleShowUserPetitionWnd");

	UUserPetitionWnd_HandleShowUserPetitionWnd_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UserPetitionWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UUserPetitionWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UserPetitionWnd.OnEvent");

	UUserPetitionWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UserPetitionWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UUserPetitionWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UserPetitionWnd.OnLoad");

	UUserPetitionWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UserPetitionWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UUserPetitionWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UserPetitionWnd.OnRegisterEvent");

	UUserPetitionWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.XMasSealWnd.HandleToggleXMasSealWndShowHide
// (Final, Defined, Iterator, Latent, Singular, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UXMasSealWnd::STATIC_HandleToggleXMasSealWndShowHide(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.XMasSealWnd.HandleToggleXMasSealWndShowHide");

	UXMasSealWnd_HandleToggleXMasSealWndShowHide_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.XMasSealWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UXMasSealWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.XMasSealWnd.OnEvent");

	UXMasSealWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.XMasSealWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UXMasSealWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.XMasSealWnd.OnLoad");

	UXMasSealWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.XMasSealWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UXMasSealWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.XMasSealWnd.OnRegisterEvent");

	UXMasSealWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointRankTrigger.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UKillpointRankTrigger::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointRankTrigger.OnClickButton");

	UKillpointRankTrigger_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointRankTrigger.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UKillpointRankTrigger::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointRankTrigger.OnEvent");

	UKillpointRankTrigger_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointRankTrigger.OnLoad
// (Final, Net, Operator, Static, Const)

void UKillpointRankTrigger::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointRankTrigger.OnLoad");

	UKillpointRankTrigger_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.KillpointRankTrigger.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UKillpointRankTrigger::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.KillpointRankTrigger.OnRegisterEvent");

	UKillpointRankTrigger_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionFeedBackWnd.OnClickOKButton
// (Final, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetitionFeedBackWnd::STATIC_OnClickOKButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionFeedBackWnd.OnClickOKButton");

	UPetitionFeedBackWnd_OnClickOKButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionFeedBackWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_ControlID                    (Parm, NeedCtorLink)

void UPetitionFeedBackWnd::STATIC_OnClickButton(const struct FString& a_ControlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionFeedBackWnd.OnClickButton");

	UPetitionFeedBackWnd_OnClickButton_Params params;
	params.a_ControlID = a_ControlID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionFeedBackWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPetitionFeedBackWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionFeedBackWnd.OnHide");

	UPetitionFeedBackWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionFeedBackWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UPetitionFeedBackWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionFeedBackWnd.OnEvent");

	UPetitionFeedBackWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionFeedBackWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPetitionFeedBackWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionFeedBackWnd.OnLoad");

	UPetitionFeedBackWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounterTrigger.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UPVPCounterTrigger::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounterTrigger.OnClickButton");

	UPVPCounterTrigger_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounterTrigger.HandlePVPMatchRecord
// (Defined, Latent, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UPVPCounterTrigger::STATIC_HandlePVPMatchRecord(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounterTrigger.HandlePVPMatchRecord");

	UPVPCounterTrigger_HandlePVPMatchRecord_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounterTrigger.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UPVPCounterTrigger::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounterTrigger.OnEvent");

	UPVPCounterTrigger_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounterTrigger.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPVPCounterTrigger::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounterTrigger.InitializeCOD");

	UPVPCounterTrigger_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounterTrigger.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UPVPCounterTrigger::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounterTrigger.Initialize");

	UPVPCounterTrigger_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounterTrigger.OnLoad
// (Final, Net, Operator, Static, Const)

void UPVPCounterTrigger::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounterTrigger.OnLoad");

	UPVPCounterTrigger_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PVPCounterTrigger.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPVPCounterTrigger::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PVPCounterTrigger.OnRegisterEvent");

	UPVPCounterTrigger_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemDescWnd.HandleLoadHtmlFromString
// (Final, Defined, Iterator, PreOperator, Singular, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UItemDescWnd::STATIC_HandleLoadHtmlFromString(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemDescWnd.HandleLoadHtmlFromString");

	UItemDescWnd_HandleLoadHtmlFromString_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemDescWnd.HandleWindowTitle
// (Final, Defined, Iterator, PreOperator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UItemDescWnd::STATIC_HandleWindowTitle(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemDescWnd.HandleWindowTitle");

	UItemDescWnd_HandleWindowTitle_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemDescWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UItemDescWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemDescWnd.OnEvent");

	UItemDescWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemDescWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UItemDescWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemDescWnd.OnLoad");

	UItemDescWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ItemDescWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UItemDescWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ItemDescWnd.OnRegisterEvent");

	UItemDescWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_DocumentInfo.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UUIEditor_DocumentInfo::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_DocumentInfo.Clear");

	UUIEditor_DocumentInfo_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_DocumentInfo.HandleTrackerDetach
// (Defined, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_DocumentInfo::STATIC_HandleTrackerDetach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_DocumentInfo.HandleTrackerDetach");

	UUIEditor_DocumentInfo_HandleTrackerDetach_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_DocumentInfo.UpdateDocumentInfo
// (Defined, Net, Simulated, Operator, Static, HasOptionalParms, Const)

void UUIEditor_DocumentInfo::STATIC_UpdateDocumentInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_DocumentInfo.UpdateDocumentInfo");

	UUIEditor_DocumentInfo_UpdateDocumentInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_DocumentInfo.HandleTrackerAttach
// (Defined, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UUIEditor_DocumentInfo::STATIC_HandleTrackerAttach(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_DocumentInfo.HandleTrackerAttach");

	UUIEditor_DocumentInfo_HandleTrackerAttach_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_DocumentInfo.OnCompleteEditBox
// (Final, Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UUIEditor_DocumentInfo::STATIC_OnCompleteEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_DocumentInfo.OnCompleteEditBox");

	UUIEditor_DocumentInfo_OnCompleteEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_DocumentInfo.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UUIEditor_DocumentInfo::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_DocumentInfo.OnEvent");

	UUIEditor_DocumentInfo_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_DocumentInfo.InitControlItem
// (Defined, Iterator, PreOperator, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_DocumentInfo::STATIC_InitControlItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_DocumentInfo.InitControlItem");

	UUIEditor_DocumentInfo_InitControlItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_DocumentInfo.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UUIEditor_DocumentInfo::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_DocumentInfo.InitHandle");

	UUIEditor_DocumentInfo_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_DocumentInfo.OnLoad
// (Final, Net, Operator, Static, Const)

void UUIEditor_DocumentInfo::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_DocumentInfo.OnLoad");

	UUIEditor_DocumentInfo_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UIEditor_DocumentInfo.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UUIEditor_DocumentInfo::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UIEditor_DocumentInfo.OnRegisterEvent");

	UUIEditor_DocumentInfo_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurTriggerWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UCleftCurTriggerWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurTriggerWnd.OnClickButton");

	UCleftCurTriggerWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurTriggerWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UCleftCurTriggerWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurTriggerWnd.OnEvent");

	UCleftCurTriggerWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurTriggerWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UCleftCurTriggerWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurTriggerWnd.InitializeCOD");

	UCleftCurTriggerWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurTriggerWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UCleftCurTriggerWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurTriggerWnd.Initialize");

	UCleftCurTriggerWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurTriggerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UCleftCurTriggerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurTriggerWnd.OnLoad");

	UCleftCurTriggerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.CleftCurTriggerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UCleftCurTriggerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.CleftCurTriggerWnd.OnRegisterEvent");

	UCleftCurTriggerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurTriggerWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UBlockCurTriggerWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurTriggerWnd.OnClickButton");

	UBlockCurTriggerWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurTriggerWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UBlockCurTriggerWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurTriggerWnd.OnEvent");

	UBlockCurTriggerWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurTriggerWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBlockCurTriggerWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurTriggerWnd.InitializeCOD");

	UBlockCurTriggerWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurTriggerWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UBlockCurTriggerWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurTriggerWnd.Initialize");

	UBlockCurTriggerWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurTriggerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBlockCurTriggerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurTriggerWnd.OnLoad");

	UBlockCurTriggerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BlockCurTriggerWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBlockCurTriggerWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BlockCurTriggerWnd.OnRegisterEvent");

	UBlockCurTriggerWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMFenceWnd.OnClickMyLocationButton
// (Iterator, Latent, PreOperator, Singular, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UEventMatchGMFenceWnd::STATIC_OnClickMyLocationButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMFenceWnd.OnClickMyLocationButton");

	UEventMatchGMFenceWnd_OnClickMyLocationButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMFenceWnd.OnClickCancelButton
// (Final, Defined, Latent, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMFenceWnd::STATIC_OnClickCancelButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMFenceWnd.OnClickCancelButton");

	UEventMatchGMFenceWnd_OnClickCancelButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMFenceWnd.OnClickOKButton
// (Final, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UEventMatchGMFenceWnd::STATIC_OnClickOKButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMFenceWnd.OnClickOKButton");

	UEventMatchGMFenceWnd_OnClickOKButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMFenceWnd.OnClickButtonWithHandle
// (Final, Singular, Operator, Static, Const)
// Parameters:
// class UButtonHandle*           a_ButtonHandle                 (Parm)

void UEventMatchGMFenceWnd::STATIC_OnClickButtonWithHandle(class UButtonHandle* a_ButtonHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMFenceWnd.OnClickButtonWithHandle");

	UEventMatchGMFenceWnd_OnClickButtonWithHandle_Params params;
	params.a_ButtonHandle = a_ButtonHandle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMFenceWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UEventMatchGMFenceWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMFenceWnd.OnLoad");

	UEventMatchGMFenceWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMFenceWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UEventMatchGMFenceWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMFenceWnd.OnRegisterEvent");

	UEventMatchGMFenceWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMMsgWnd.HandleEventMatchGMMessage
// (Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchGMMsgWnd::STATIC_HandleEventMatchGMMessage(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMMsgWnd.HandleEventMatchGMMessage");

	UEventMatchGMMsgWnd_HandleEventMatchGMMessage_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMMsgWnd.OnTimer
// (Final, Defined, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_TimerID                      (Parm)

void UEventMatchGMMsgWnd::STATIC_OnTimer(int a_TimerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMMsgWnd.OnTimer");

	UEventMatchGMMsgWnd_OnTimer_Params params;
	params.a_TimerID = a_TimerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMMsgWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UEventMatchGMMsgWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMMsgWnd.OnEvent");

	UEventMatchGMMsgWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMMsgWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UEventMatchGMMsgWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMMsgWnd.OnLoad");

	UEventMatchGMMsgWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.EventMatchGMMsgWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UEventMatchGMMsgWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.EventMatchGMMsgWnd.OnRegisterEvent");

	UEventMatchGMMsgWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HelpHtmlWnd.HandleLoadHelpHtml
// (Final, Defined, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UHelpHtmlWnd::STATIC_HandleLoadHelpHtml(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HelpHtmlWnd.HandleLoadHelpHtml");

	UHelpHtmlWnd_HandleLoadHelpHtml_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HelpHtmlWnd.HandleShowHelp
// (Final, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UHelpHtmlWnd::STATIC_HandleShowHelp(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HelpHtmlWnd.HandleShowHelp");

	UHelpHtmlWnd_HandleShowHelp_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HelpHtmlWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UHelpHtmlWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HelpHtmlWnd.OnEvent");

	UHelpHtmlWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HelpHtmlWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UHelpHtmlWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HelpHtmlWnd.OnHide");

	UHelpHtmlWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HelpHtmlWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UHelpHtmlWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HelpHtmlWnd.OnShow");

	UHelpHtmlWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HelpHtmlWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UHelpHtmlWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HelpHtmlWnd.OnLoad");

	UHelpHtmlWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.HelpHtmlWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UHelpHtmlWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.HelpHtmlWnd.OnRegisterEvent");

	UHelpHtmlWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmWnd.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UBirthdayAlarmWnd::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmWnd.OnExitState");

	UBirthdayAlarmWnd_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UBirthdayAlarmWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmWnd.OnClickButton");

	UBirthdayAlarmWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UBirthdayAlarmWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmWnd.OnEvent");

	UBirthdayAlarmWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBirthdayAlarmWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmWnd.Load");

	UBirthdayAlarmWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBirthdayAlarmWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmWnd.InitializeCOD");

	UBirthdayAlarmWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UBirthdayAlarmWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmWnd.Initialize");

	UBirthdayAlarmWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBirthdayAlarmWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmWnd.OnShow");

	UBirthdayAlarmWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBirthdayAlarmWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmWnd.OnLoad");

	UBirthdayAlarmWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BirthdayAlarmWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBirthdayAlarmWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BirthdayAlarmWnd.OnRegisterEvent");

	UBirthdayAlarmWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMClanWnd.HandleGMObservingClanMember
// (Final, Latent, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMClanWnd::STATIC_HandleGMObservingClanMember(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMClanWnd.HandleGMObservingClanMember");

	UGMClanWnd_HandleGMObservingClanMember_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMClanWnd.HandleGMObservingClanMemberStart
// (Latent, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)

void UGMClanWnd::STATIC_HandleGMObservingClanMemberStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMClanWnd.HandleGMObservingClanMemberStart");

	UGMClanWnd_HandleGMObservingClanMemberStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMClanWnd.HandleGMObservingClan
// (Final, Iterator, Latent, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMClanWnd::STATIC_HandleGMObservingClan(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMClanWnd.HandleGMObservingClan");

	UGMClanWnd_HandleGMObservingClan_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMClanWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMClanWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMClanWnd.OnEvent");

	UGMClanWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMClanWnd.ShowClan
// (Iterator, Singular, Net, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMClanWnd::STATIC_ShowClan(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMClanWnd.ShowClan");

	UGMClanWnd_ShowClan_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMClanWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMClanWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMClanWnd.OnHide");

	UGMClanWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMClanWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMClanWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMClanWnd.OnShow");

	UGMClanWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMClanWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UGMClanWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMClanWnd.Load");

	UGMClanWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMClanWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UGMClanWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMClanWnd.OnRegisterEvent");

	UGMClanWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.Clear
// (Final, Singular, NetReliable, Simulated, Native, Event)

void UPetitionWnd::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.Clear");

	UPetitionWnd_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.OnClickCancelButton
// (Final, Defined, Latent, Singular, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPetitionWnd::STATIC_OnClickCancelButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.OnClickCancelButton");

	UPetitionWnd_OnClickCancelButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.OnClickFeedBackButton
// (Final, Iterator, Latent, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UPetitionWnd::STATIC_OnClickFeedBackButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.OnClickFeedBackButton");

	UPetitionWnd_OnClickFeedBackButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 a_ControlID                    (Parm, NeedCtorLink)

void UPetitionWnd::STATIC_OnClickButton(const struct FString& a_ControlID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.OnClickButton");

	UPetitionWnd_OnClickButton_Params params;
	params.a_ControlID = a_ControlID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.HandleEnablePetitionFeedback
// (Defined, Iterator, Latent, Singular, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UPetitionWnd::STATIC_HandleEnablePetitionFeedback(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.HandleEnablePetitionFeedback");

	UPetitionWnd_HandleEnablePetitionFeedback_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.HandlePetitionChatMessage
// (Final, Iterator, Latent, PreOperator, Singular, Net, NetReliable, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UPetitionWnd::STATIC_HandlePetitionChatMessage(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.HandlePetitionChatMessage");

	UPetitionWnd_HandlePetitionChatMessage_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.HandleShowPetitionWnd
// (PreOperator, Singular, Exec, Operator, Static, HasOptionalParms, Const)

void UPetitionWnd::STATIC_HandleShowPetitionWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.HandleShowPetitionWnd");

	UPetitionWnd_HandleShowPetitionWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.OnCompleteEditBox
// (Final, Iterator, Latent, PreOperator, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UPetitionWnd::STATIC_OnCompleteEditBox(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.OnCompleteEditBox");

	UPetitionWnd_OnCompleteEditBox_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UPetitionWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.OnEvent");

	UPetitionWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.SetFeedBackEnable
// (Defined, Iterator, Singular, NetReliable, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// bool                           a_IsEnabled                    (Parm)

void UPetitionWnd::STATIC_SetFeedBackEnable(bool a_IsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.SetFeedBackEnable");

	UPetitionWnd_SetFeedBackEnable_Params params;
	params.a_IsEnabled = a_IsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.OnHide
// (Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UPetitionWnd::STATIC_OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.OnHide");

	UPetitionWnd_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPetitionWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.OnLoad");

	UPetitionWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PetitionWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UPetitionWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PetitionWnd.OnRegisterEvent");

	UPetitionWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopBtnWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UBR_CashShopBtnWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopBtnWnd.OnShow");

	UBR_CashShopBtnWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopBtnWnd.OnBtnShowCashShopClick
// (Final, Defined, Net, NetReliable, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UBR_CashShopBtnWnd::STATIC_OnBtnShowCashShopClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopBtnWnd.OnBtnShowCashShopClick");

	UBR_CashShopBtnWnd_OnBtnShowCashShopClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopBtnWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UBR_CashShopBtnWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopBtnWnd.OnClickButton");

	UBR_CashShopBtnWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopBtnWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_CashShopBtnWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopBtnWnd.Load");

	UBR_CashShopBtnWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopBtnWnd.InitHandle
// (Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_CashShopBtnWnd::STATIC_InitHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopBtnWnd.InitHandle");

	UBR_CashShopBtnWnd_InitHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_CashShopBtnWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBR_CashShopBtnWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_CashShopBtnWnd.OnLoad");

	UBR_CashShopBtnWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ObserverWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UObserverWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ObserverWnd.OnClickButton");

	UObserverWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ObserverWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UObserverWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ObserverWnd.OnEvent");

	UObserverWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ObserverWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UObserverWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ObserverWnd.OnLoad");

	UObserverWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ObserverWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UObserverWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ObserverWnd.OnRegisterEvent");

	UObserverWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWarehouseWnd.MoveItemBottomToTop
// (Final, Iterator, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// bool                           bAllItem                       (Parm)

void UGMWarehouseWnd::STATIC_MoveItemBottomToTop(int Index, bool bAllItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWarehouseWnd.MoveItemBottomToTop");

	UGMWarehouseWnd_MoveItemBottomToTop_Params params;
	params.Index = Index;
	params.bAllItem = bAllItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWarehouseWnd.MoveItemTopToBottom
// (Defined, PreOperator, Singular, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// int                            Index                          (Parm)
// bool                           bAllItem                       (Parm)

void UGMWarehouseWnd::STATIC_MoveItemTopToBottom(int Index, bool bAllItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWarehouseWnd.MoveItemTopToBottom");

	UGMWarehouseWnd_MoveItemTopToBottom_Params params;
	params.Index = Index;
	params.bAllItem = bAllItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWarehouseWnd.HandleGMObservingWarehouseItemList
// (Defined, Iterator, Latent, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMWarehouseWnd::STATIC_HandleGMObservingWarehouseItemList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWarehouseWnd.HandleGMObservingWarehouseItemList");

	UGMWarehouseWnd_HandleGMObservingWarehouseItemList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWarehouseWnd.HandleGMObservingWarehouseItemListStart
// (Final, Defined, Iterator, Latent, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMWarehouseWnd::STATIC_HandleGMObservingWarehouseItemListStart(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWarehouseWnd.HandleGMObservingWarehouseItemListStart");

	UGMWarehouseWnd_HandleGMObservingWarehouseItemListStart_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWarehouseWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMWarehouseWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWarehouseWnd.OnEvent");

	UGMWarehouseWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWarehouseWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UGMWarehouseWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWarehouseWnd.OnClickButton");

	UGMWarehouseWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWarehouseWnd.ShowWarehouse
// (PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMWarehouseWnd::STATIC_ShowWarehouse(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWarehouseWnd.ShowWarehouse");

	UGMWarehouseWnd_ShowWarehouse_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWarehouseWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMWarehouseWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWarehouseWnd.OnShow");

	UGMWarehouseWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWarehouseWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UGMWarehouseWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWarehouseWnd.OnLoad");

	UGMWarehouseWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMWarehouseWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UGMWarehouseWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMWarehouseWnd.OnRegisterEvent");

	UGMWarehouseWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemAlarmWnd.OnExitState
// (Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// struct FName                   a_NextStateName                (Parm)

void UPremiumItemAlarmWnd::STATIC_OnExitState(const struct FName& a_NextStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemAlarmWnd.OnExitState");

	UPremiumItemAlarmWnd_OnExitState_Params params;
	params.a_NextStateName = a_NextStateName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemAlarmWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UPremiumItemAlarmWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemAlarmWnd.OnClickButton");

	UPremiumItemAlarmWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemAlarmWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UPremiumItemAlarmWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemAlarmWnd.OnEvent");

	UPremiumItemAlarmWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemAlarmWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UPremiumItemAlarmWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemAlarmWnd.Load");

	UPremiumItemAlarmWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemAlarmWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UPremiumItemAlarmWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemAlarmWnd.Initialize");

	UPremiumItemAlarmWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.PremiumItemAlarmWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UPremiumItemAlarmWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.PremiumItemAlarmWnd.OnLoad");

	UPremiumItemAlarmWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMQuestWnd.HandleGMObservingQuestItem
// (Latent, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMQuestWnd::STATIC_HandleGMObservingQuestItem(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMQuestWnd.HandleGMObservingQuestItem");

	UGMQuestWnd_HandleGMObservingQuestItem_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMQuestWnd.HandleGMObservingQuestListEnd
// (Final, Latent, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMQuestWnd::STATIC_HandleGMObservingQuestListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMQuestWnd.HandleGMObservingQuestListEnd");

	UGMQuestWnd_HandleGMObservingQuestListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMQuestWnd.HandleGMObservingQuestList
// (Defined, Latent, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMQuestWnd::STATIC_HandleGMObservingQuestList(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMQuestWnd.HandleGMObservingQuestList");

	UGMQuestWnd_HandleGMObservingQuestList_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMQuestWnd.HandleGMObservingQuestListStart
// (Final, Defined, Latent, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)

void UGMQuestWnd::STATIC_HandleGMObservingQuestListStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMQuestWnd.HandleGMObservingQuestListStart");

	UGMQuestWnd_HandleGMObservingQuestListStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMQuestWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMQuestWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMQuestWnd.OnEvent");

	UGMQuestWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMQuestWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UGMQuestWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMQuestWnd.OnClickButton");

	UGMQuestWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMQuestWnd.ShowQuest
// (Iterator, Latent, PreOperator, Net, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UGMQuestWnd::STATIC_ShowQuest(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMQuestWnd.ShowQuest");

	UGMQuestWnd_ShowQuest_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMQuestWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UGMQuestWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMQuestWnd.OnShow");

	UGMQuestWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMQuestWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UGMQuestWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMQuestWnd.OnLoad");

	UGMQuestWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.GMQuestWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UGMQuestWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.GMQuestWnd.OnRegisterEvent");

	UGMQuestWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SelectDeliverWnd.HandleOKButtonClick
// (Defined, Iterator, Latent, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)

void USelectDeliverWnd::STATIC_HandleOKButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SelectDeliverWnd.HandleOKButtonClick");

	USelectDeliverWnd_HandleOKButtonClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SelectDeliverWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 ControlName                    (Parm, NeedCtorLink)

void USelectDeliverWnd::STATIC_OnClickButton(const struct FString& ControlName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SelectDeliverWnd.OnClickButton");

	USelectDeliverWnd_OnClickButton_Params params;
	params.ControlName = ControlName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SelectDeliverWnd.HandleAddName
// (Final, Defined, Iterator, Latent, Net, NetReliable, Simulated, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void USelectDeliverWnd::STATIC_HandleAddName(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SelectDeliverWnd.HandleAddName");

	USelectDeliverWnd_HandleAddName_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SelectDeliverWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void USelectDeliverWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SelectDeliverWnd.OnEvent");

	USelectDeliverWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SelectDeliverWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void USelectDeliverWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SelectDeliverWnd.OnLoad");

	USelectDeliverWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.SelectDeliverWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void USelectDeliverWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.SelectDeliverWnd.OnRegisterEvent");

	USelectDeliverWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ConsoleWnd.HandleDlgOk
// (Final, Iterator, Latent, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)

void UConsoleWnd::STATIC_HandleDlgOk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ConsoleWnd.HandleDlgOk");

	UConsoleWnd_HandleDlgOk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ConsoleWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UConsoleWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ConsoleWnd.OnEvent");

	UConsoleWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ConsoleWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UConsoleWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ConsoleWnd.OnLoad");

	UConsoleWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.ConsoleWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UConsoleWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.ConsoleWnd.OnRegisterEvent");

	UConsoleWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeDrawerWnd.OnShow
// (Final, Defined, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)

void UQuestTreeDrawerWnd::STATIC_OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeDrawerWnd.OnShow");

	UQuestTreeDrawerWnd_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeDrawerWnd.OnbtnCloseClick
// (Defined, Iterator, Singular, Net, Operator, Static, HasOptionalParms, Const)

void UQuestTreeDrawerWnd::STATIC_OnbtnCloseClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeDrawerWnd.OnbtnCloseClick");

	UQuestTreeDrawerWnd_OnbtnCloseClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeDrawerWnd.OnbtnGiveUpCurrentQuestClick
// (Final, PreOperator, Exec, Operator, Static, HasOptionalParms, Const)

void UQuestTreeDrawerWnd::STATIC_OnbtnGiveUpCurrentQuestClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeDrawerWnd.OnbtnGiveUpCurrentQuestClick");

	UQuestTreeDrawerWnd_OnbtnGiveUpCurrentQuestClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeDrawerWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UQuestTreeDrawerWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeDrawerWnd.OnClickButton");

	UQuestTreeDrawerWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeDrawerWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UQuestTreeDrawerWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeDrawerWnd.Load");

	UQuestTreeDrawerWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeDrawerWnd.InitializeCOD
// (Final, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UQuestTreeDrawerWnd::STATIC_InitializeCOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeDrawerWnd.InitializeCOD");

	UQuestTreeDrawerWnd_InitializeCOD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeDrawerWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UQuestTreeDrawerWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeDrawerWnd.Initialize");

	UQuestTreeDrawerWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestTreeDrawerWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UQuestTreeDrawerWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestTreeDrawerWnd.OnLoad");

	UQuestTreeDrawerWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TownMapWnd.HandleShowTownMap
// (Iterator, Singular, NetReliable, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UTownMapWnd::STATIC_HandleShowTownMap(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TownMapWnd.HandleShowTownMap");

	UTownMapWnd_HandleShowTownMap_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TownMapWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UTownMapWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TownMapWnd.OnEvent");

	UTownMapWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TownMapWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UTownMapWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TownMapWnd.OnLoad");

	UTownMapWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TownMapWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UTownMapWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TownMapWnd.OnRegisterEvent");

	UTownMapWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MailBtnWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UMailBtnWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MailBtnWnd.OnClickButton");

	UMailBtnWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MailBtnWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UMailBtnWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MailBtnWnd.OnEvent");

	UMailBtnWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MailBtnWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UMailBtnWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MailBtnWnd.OnLoad");

	UMailBtnWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.MailBtnWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UMailBtnWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.MailBtnWnd.OnRegisterEvent");

	UMailBtnWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TutorialBtnWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UTutorialBtnWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TutorialBtnWnd.OnClickButton");

	UTutorialBtnWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TutorialBtnWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UTutorialBtnWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TutorialBtnWnd.OnEvent");

	UTutorialBtnWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TutorialBtnWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UTutorialBtnWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TutorialBtnWnd.OnLoad");

	UTutorialBtnWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.TutorialBtnWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UTutorialBtnWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.TutorialBtnWnd.OnRegisterEvent");

	UTutorialBtnWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DepthOfField.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UDepthOfField::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DepthOfField.OnEvent");

	UDepthOfField_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DepthOfField.HandleCharacterSelectionChanged
// (Final, Latent, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UDepthOfField::STATIC_HandleCharacterSelectionChanged(const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DepthOfField.HandleCharacterSelectionChanged");

	UDepthOfField_HandleCharacterSelectionChanged_Params params;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DepthOfField.HandleStateChanged
// (Defined, Latent, Singular, Net, Simulated, Exec, Operator, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 a_NewState                     (Parm, NeedCtorLink)

void UDepthOfField::STATIC_HandleStateChanged(const struct FString& a_NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DepthOfField.HandleStateChanged");

	UDepthOfField_HandleStateChanged_Params params;
	params.a_NewState = a_NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DepthOfField.OnLoad
// (Final, Net, Operator, Static, Const)

void UDepthOfField::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DepthOfField.OnLoad");

	UDepthOfField_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.DepthOfField.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UDepthOfField::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.DepthOfField.OnRegisterEvent");

	UDepthOfField_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestBtnWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UQuestBtnWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestBtnWnd.OnClickButton");

	UQuestBtnWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestBtnWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UQuestBtnWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestBtnWnd.OnEvent");

	UQuestBtnWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestBtnWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UQuestBtnWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestBtnWnd.OnLoad");

	UQuestBtnWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.QuestBtnWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UQuestBtnWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.QuestBtnWnd.OnRegisterEvent");

	UQuestBtnWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadControlWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UOlympiadControlWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadControlWnd.OnClickButton");

	UOlympiadControlWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadControlWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UOlympiadControlWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadControlWnd.OnLoad");

	UOlympiadControlWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BenchMarkMenuWnd.ShowOptionWnd
// (Final, Defined, Iterator, Singular, Operator, Static, HasOptionalParms, Const)

void UBenchMarkMenuWnd::STATIC_ShowOptionWnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BenchMarkMenuWnd.ShowOptionWnd");

	UBenchMarkMenuWnd_ShowOptionWnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BenchMarkMenuWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 strID                          (Parm, NeedCtorLink)

void UBenchMarkMenuWnd::STATIC_OnClickButton(const struct FString& strID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BenchMarkMenuWnd.OnClickButton");

	UBenchMarkMenuWnd_OnClickButton_Params params;
	params.strID = strID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BenchMarkMenuWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBenchMarkMenuWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BenchMarkMenuWnd.OnLoad");

	UBenchMarkMenuWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadBuff1Wnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UOlympiadBuff1Wnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadBuff1Wnd.OnLoad");

	UOlympiadBuff1Wnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadBuff2Wnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UOlympiadBuff2Wnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadBuff2Wnd.OnLoad");

	UOlympiadBuff2Wnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.UniversalToolTip.OnLoad
// (Final, Net, Operator, Static, Const)

void UUniversalToolTip::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.UniversalToolTip.OnLoad");

	UUniversalToolTip_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayer1Wnd.UpdateUsersInfo
// (Latent, Net, Operator, Static, HasOptionalParms, Const)

void UOlympiadPlayer1Wnd::STATIC_UpdateUsersInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayer1Wnd.UpdateUsersInfo");

	UOlympiadPlayer1Wnd_UpdateUsersInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayer1Wnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UOlympiadPlayer1Wnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayer1Wnd.OnLoad");

	UOlympiadPlayer1Wnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayer2Wnd.UpdateUsersInfo
// (Latent, Net, Operator, Static, HasOptionalParms, Const)

void UOlympiadPlayer2Wnd::STATIC_UpdateUsersInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayer2Wnd.UpdateUsersInfo");

	UOlympiadPlayer2Wnd_UpdateUsersInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.OlympiadPlayer2Wnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UOlympiadPlayer2Wnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.OlympiadPlayer2Wnd.OnLoad");

	UOlympiadPlayer2Wnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.OnEventFireBtn2Click
// (Final, Iterator, Latent, Net, NetReliable, Simulated)

void UBR_EventFireWnd::OnEventFireBtn2Click()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.OnEventFireBtn2Click");

	UBR_EventFireWnd_OnEventFireBtn2Click_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.OnEventFireBtn1Click
// (Final, PreOperator, Net, NetReliable, Simulated)

void UBR_EventFireWnd::OnEventFireBtn1Click()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.OnEventFireBtn1Click");

	UBR_EventFireWnd_OnEventFireBtn1Click_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.OnClickButton
// (Defined, Singular, Operator, Static, Const)
// Parameters:
// struct FString                 Name                           (Parm, NeedCtorLink)

void UBR_EventFireWnd::STATIC_OnClickButton(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.OnClickButton");

	UBR_EventFireWnd_OnClickButton_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.SetTooltip
// (Latent, Net, Simulated, Exec, Native, Event, Static, HasOptionalParms, Const)
// Parameters:
// struct FString                 Text                           (Parm, NeedCtorLink)
// struct FCustomTooltip          ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FCustomTooltip UBR_EventFireWnd::STATIC_SetTooltip(const struct FString& Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.SetTooltip");

	UBR_EventFireWnd_SetTooltip_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Interface.BR_EventFireWnd.FireEventGauge
// (Defined, Iterator, Latent, Net, NetReliable, Simulated)
// Parameters:
// int                            Percent                        (Parm)

void UBR_EventFireWnd::FireEventGauge(int Percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.FireEventGauge");

	UBR_EventFireWnd_FireEventGauge_Params params;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.FireEventButton
// (Final, Defined, Latent, Net, NetReliable, Simulated)

void UBR_EventFireWnd::FireEventButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.FireEventButton");

	UBR_EventFireWnd_FireEventButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.FireEventWndShow
// (Iterator, Latent, Net, NetReliable, Simulated)
// Parameters:
// int                            eState                         (Parm)
// int                            Day                            (Parm)
// int                            Percent                        (Parm)

void UBR_EventFireWnd::FireEventWndShow(int eState, int Day, int Percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.FireEventWndShow");

	UBR_EventFireWnd_FireEventWndShow_Params params;
	params.eState = eState;
	params.Day = Day;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.FireEventBuff
// (PreOperator, Net, NetReliable, Simulated)
// Parameters:
// int                            type                           (Parm)
// int                            Value                          (Parm)
// int                            bstate                         (Parm)
// int                            endtime                        (Parm)

void UBR_EventFireWnd::FireEventBuff(int type, int Value, int bstate, int endtime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.FireEventBuff");

	UBR_EventFireWnd_FireEventBuff_Params params;
	params.type = type;
	params.Value = Value;
	params.bstate = bstate;
	params.endtime = endtime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            a_EventID                      (Parm)
// struct FString                 a_Param                        (Parm, NeedCtorLink)

void UBR_EventFireWnd::STATIC_OnEvent(int a_EventID, const struct FString& a_Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.OnEvent");

	UBR_EventFireWnd_OnEvent_Params params;
	params.a_EventID = a_EventID;
	params.a_Param = a_Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_EventFireWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.Load");

	UBR_EventFireWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UBR_EventFireWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.Initialize");

	UBR_EventFireWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBR_EventFireWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.OnLoad");

	UBR_EventFireWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBR_EventFireWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireWnd.OnRegisterEvent");

	UBR_EventFireWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireHelpWnd.FireEventShowHelp
// (Final, Defined, Iterator, Latent, Net, NetReliable, Simulated)
// Parameters:
// struct FString                 param                          (Parm, NeedCtorLink)

void UBR_EventFireHelpWnd::FireEventShowHelp(const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireHelpWnd.FireEventShowHelp");

	UBR_EventFireHelpWnd_FireEventShowHelp_Params params;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireHelpWnd.OnEvent
// (Final, Iterator, Latent, PreOperator, Singular, Operator, Static, Const)
// Parameters:
// int                            Event_ID                       (Parm)
// struct FString                 param                          (Parm, NeedCtorLink)

void UBR_EventFireHelpWnd::STATIC_OnEvent(int Event_ID, const struct FString& param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireHelpWnd.OnEvent");

	UBR_EventFireHelpWnd_OnEvent_Params params;
	params.Event_ID = Event_ID;
	params.param = param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireHelpWnd.Load
// (Final, Defined, PreOperator, Net, NetReliable, Exec, Native, Event, Static, HasOptionalParms, Const)

void UBR_EventFireHelpWnd::STATIC_Load()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireHelpWnd.Load");

	UBR_EventFireHelpWnd_Load_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireHelpWnd.Initialize
// (Final, Defined, Latent, PreOperator, Singular, Net, NetReliable, Simulated, Exec, Native)

void UBR_EventFireHelpWnd::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireHelpWnd.Initialize");

	UBR_EventFireHelpWnd_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireHelpWnd.OnLoad
// (Final, Net, Operator, Static, Const)

void UBR_EventFireHelpWnd::STATIC_OnLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireHelpWnd.OnLoad");

	UBR_EventFireHelpWnd_OnLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Interface.BR_EventFireHelpWnd.OnRegisterEvent
// (Final, Iterator, PreOperator, Singular, Operator, Static, Const)

void UBR_EventFireHelpWnd::STATIC_OnRegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Interface.BR_EventFireHelpWnd.OnRegisterEvent");

	UBR_EventFireHelpWnd_OnRegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
